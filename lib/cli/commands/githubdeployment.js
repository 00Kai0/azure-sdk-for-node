/*** Generated by streamline 0.4.5 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb; var url = require("url");
















var LinkedRevisionControl = require("../linkedrevisioncontrol.js");

exports.init = function(cli) {

  var log = cli.output;
  var site = cli.category("site");
  var scm = site.category("deployment");

  scm.command("github [name]").whiteListPowershell().usage("[options] [name]").description("Links a website to a github account for deployment").option("-s, --subscription <id>", "use the subscription id").option("-u, --username <user>", "The username").option("-up, --pass <pass>", "The password").execute(function __1(name, options, _) { var context;




















    function promptForGithubCredentials(_) { var __frame = { name: "promptForGithubCredentials", line: 47 }; return __func(_, this, arguments, promptForGithubCredentials, 0, __frame, function __$promptForGithubCredentials() {
        log.help("Enter your github credentials"); return (function __$promptForGithubCredentials(__then) {

          if (options.username) {
            context.username = options.username; __then(); } else {

            return prompt("Username: ", __cb(_, __frame, 6, 29, function ___(__0, __1) { context.username = __1; __then(); }, true)); } ; })(function __$promptForGithubCredentials() { return (function __$promptForGithubCredentials(__then) {


            if (options.pass) {
              context.password = options.pass; __then(); } else {

              return promptPassword("Password: ", __cb(_, __frame, 12, 29, function ___(__0, __2) { context.password = __2; __then(); }, true)); } ; })(function __$promptForGithubCredentials() {


            context.lvcClient = LinkedRevisionControl.createClient(cli, "github");
            context.lvcClient.authenticate(context.username, context.password); _(); }); }); }); }; var __frame = { name: "__1", line: 33 }; return __func(_, this, arguments, __1, 2, __frame, function __$__1() { context = { subscription: cli.category("account").lookupSubscriptionId(options.subscription), site: { name: name } }; return scm.ensureRepositoryUri(context, __cb(_, __frame, 9, 6, function __$__1() { return promptForGithubCredentials(__cb(_, __frame, 10, 6, function __$__1() { return context.lvcClient.init(context, __cb(_, __frame, 11, 6, function __$__1() { return context.lvcClient.deploy(context, __cb(_, __frame, 12, 6, _, true)); }, true)); }, true)); }, true)); }); });



  function prompt(label, callback) {
    cli.prompt(label, function(x) { callback(undefined, x); }); };


  function promptPassword(label, callback) {
    cli.passwordOnce(label, function(x) { callback(undefined, x); }); };};