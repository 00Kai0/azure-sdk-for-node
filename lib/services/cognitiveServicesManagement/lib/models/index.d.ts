/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * The SKU of the cognitive services account.
 */
export interface Sku {
  /**
   * Gets or sets the sku name. Required for account creation, optional for update. Possible values
   * include: 'F0', 'P0', 'P1', 'P2', 'S0', 'S1', 'S2', 'S3', 'S4', 'S5', 'S6'
   */
  name: string;
  /**
   * Gets the sku tier. This is based on the SKU name. Possible values include: 'Free', 'Standard',
   * 'Premium'
   */
  readonly tier?: string;
}

/**
 * The parameters to provide for the account.
 */
export interface CognitiveServicesAccountCreateParameters {
  sku: Sku;
  /**
   * Required. Indicates the type of cognitive service account. Possible values include:
   * 'Academic', 'Bing.Autosuggest', 'Bing.Search', 'Bing.Speech', 'Bing.SpellCheck',
   * 'ComputerVision', 'ContentModerator', 'Emotion', 'Face', 'LUIS', 'Recommendations',
   * 'SpeakerRecognition', 'Speech', 'SpeechTranslation', 'TextAnalytics', 'TextTranslation',
   * 'WebLM'
  */
  kind: string;
  /**
   * Required. Gets or sets the location of the resource. This will be one of the supported and
   * registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of
   * a resource cannot be changed once it is created, but if an identical geo region is specified
   * on update the request will succeed.
  */
  location: string;
  /**
   * Gets or sets a list of key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of 15 tags can be
   * provided for a resource. Each tag must have a key no greater than 128 characters and value no
   * greater than 256 characters.
  */
  tags?: { [propertyName: string]: string };
  /**
   * Must exist in the request. Must not be null.
  */
  properties: any;
}

/**
 * The parameters to provide for the account.
*/
export interface CognitiveServicesAccountUpdateParameters {
  sku?: Sku;
  /**
   * Gets or sets a list of key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of 15 tags can be
   * provided for a resource. Each tag must have a key no greater than 128 characters and value no
   * greater than 256 characters.
  */
  tags?: { [propertyName: string]: string };
}

/**
 * Cognitive Services Account is an Azure resource representing the provisioned account, its type,
 * location and SKU.
*/
export interface CognitiveServicesAccount extends BaseResource {
  /**
   * Entity Tag
  */
  etag?: string;
  /**
   * The id of the created account
  */
  id?: string;
  /**
   * Type of cognitive service account.
  */
  kind?: string;
  /**
   * The location of the resource
  */
  location?: string;
  /**
   * The name of the created account
  */
  name?: string;
  /**
   * Gets the status of the cognitive services account at the time the operation was called.
   * Possible values include: 'Creating', 'ResolvingDNS', 'Succeeded', 'Failed'
  */
  readonly provisioningState?: string;
  /**
   * Endpoint of the created account
  */
  endpoint?: string;
  sku?: Sku;
  /**
   * Gets or sets a list of key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of 15 tags can be
   * provided for a resource. Each tag must have a key no greater than 128 characters and value no
   * greater than 256 characters.
  */
  tags?: { [propertyName: string]: string };
  /**
   * Resource type
  */
  type?: string;
}

/**
 * The access keys for the cognitive services account.
*/
export interface CognitiveServicesAccountKeys {
  /**
   * Gets the value of key 1.
  */
  key1?: string;
  /**
   * Gets the value of key 2.
  */
  key2?: string;
}

/**
 * Regenerate key parameters.
*/
export interface RegenerateKeyParameters {
  /**
   * key name to generate (Key1|Key2). Possible values include: 'Key1', 'Key2'
  */
  keyName?: string;
}

export interface CognitiveServicesResourceAndSku {
  /**
   * Resource Namespace and Type
  */
  resourceType?: string;
  sku?: Sku;
}

/**
 * The list of cognitive services accounts operation response.
*/
export interface CognitiveServicesAccountEnumerateSkusResult {
  /**
   * Gets the list of Cognitive Services accounts and their properties.
  */
  readonly value?: CognitiveServicesResourceAndSku[];
}

export interface ErrorBody {
  /**
   * error code
  */
  code: string;
  /**
   * error message
  */
  message: string;
}

export interface ErrorModel {
  error?: ErrorBody;
}

/**
 * The list of cognitive services accounts operation response.
*/
export interface CognitiveServicesAccountListResult extends Array<CognitiveServicesAccount> {
}
