/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse, ServiceClientCredentials } from 'ms-rest';
import { AzureServiceClient, AzureServiceClientOptions } from 'ms-rest-azure';
import * as models from "./models";

/**
 * Dynamics365BusinessCentralOptions for Dynamics365BusinessCentral.
 */
declare interface Dynamics365BusinessCentralOptions extends AzureServiceClientOptions {
  /**
   * @property {string} [filter] - Filtering expression
   */
  filter?: string;
  /**
   * @property {number} [top] - Number of items to return from the top of the list
   */
  top?: number;
  /**
   * @property {number} [skip] - Number of items to skip from the list
   */
  skip?: number;
  /**
   * @property {number} [limit] - Number of items to return from the list
   */
  limit?: number;
  /**
   * @property {string} [acceptLanguage] - The preferred language for the response.
   */
  acceptLanguage?: string;
  /**
   * @property {number} [longRunningOperationRetryTimeout] - The retry timeout in seconds for Long Running Operations. Default value is 30.
   */
  longRunningOperationRetryTimeout?: number;
  /**
   * @property {boolean} [generateClientRequestId] - Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
   */
  generateClientRequestId?: boolean;
}

export default class Dynamics365BusinessCentral extends AzureServiceClient {
  /**
   * Initializes a new instance of the Dynamics365BusinessCentral class.
   * @constructor
   *
   * @class
   * @param {credentials} credentials - Credentials needed for the client to connect to Azure.
   *
   * @param {string} ifMatch - Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   * @param {string} [options.filter] - Filtering expression
   *
   * @param {number} [options.top] - Number of items to return from the top of the list
   *
   * @param {number} [options.skip] - Number of items to skip from the list
   *
   * @param {number} [options.limit] - Number of items to return from the list
   *
   * @param {string} [options.acceptLanguage] - The preferred language for the response.
   *
   * @param {number} [options.longRunningOperationRetryTimeout] - The retry timeout in seconds for Long Running Operations. Default value is 30.
   *
   * @param {boolean} [options.generateClientRequestId] - Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
   *
   */
  constructor(credentials: ServiceClientCredentials, ifMatch: string, baseUri?: string, options?: Dynamics365BusinessCentralOptions);

  credentials: ServiceClientCredentials;

  filter: string;

  top: number;

  skip: number;

  limit: number;

  ifMatch: string;

  acceptLanguage: string;

  longRunningOperationRetryTimeout: number;

  generateClientRequestId: boolean;



  /**
   * @summary Returns a list of companies
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCompaniesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCompaniesWithHttpOperationResponse(options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCompaniesOKResponse>>;

  /**
   * @summary Returns a list of companies
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCompaniesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCompaniesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCompaniesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCompanies(options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCompaniesOKResponse>;
  getCompanies(callback: ServiceCallback<models.GetCompaniesOKResponse>): void;
  getCompanies(options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCompaniesOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an company object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Company>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCompanyByIdWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Company>>;

  /**
   * @summary Retrieve the properties and relationships of an company object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Company} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Company} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Company} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCompanyById(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Company>;
  getCompanyById(companyId: string, callback: ServiceCallback<models.Company>): void;
  getCompanyById(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Company>): void;


  /**
   * @summary Returns a list of items
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetItemsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getItemsWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetItemsOKResponse>>;

  /**
   * @summary Returns a list of items
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetItemsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetItemsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetItemsOKResponse} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getItems(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetItemsOKResponse>;
  getItems(companyId: string, callback: ServiceCallback<models.GetItemsOKResponse>): void;
  getItems(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetItemsOKResponse>): void;


  /**
   * @summary Creates a item in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the item entity
   *
   * @param {string} [body.number] The number property for the item entity
   *
   * @param {string} [body.displayName] The displayName property for the item
   * entity
   *
   * @param {string} [body.type] The type property for the item entity
   *
   * @param {uuid} [body.itemCategoryId] The itemCategoryId property for the item
   * entity
   *
   * @param {string} [body.itemCategoryCode] The itemCategoryCode property for
   * the item entity
   *
   * @param {boolean} [body.blocked] The blocked property for the item entity
   *
   * @param {uuid} [body.baseUnitOfMeasureId] The baseUnitOfMeasureId property
   * for the item entity
   *
   * @param {object} [body.baseUnitOfMeasure]
   *
   * @param {string} [body.baseUnitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.baseUnitOfMeasure.displayName] The displayName
   * property for the unitofmeasuretype entity
   *
   * @param {string} [body.baseUnitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.baseUnitOfMeasure.unitConversion]
   *
   * @param {string} [body.baseUnitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.baseUnitOfMeasure.unitConversion.fromToConversionRate]
   * The fromToConversionRate property for the itemunitofmeasureconversiontype
   * entity
   *
   * @param {array} [body.baseUnitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.baseUnitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.baseUnitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.baseUnitOfMeasure.picture]
   *
   * @param {array} [body.baseUnitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.baseUnitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.baseUnitOfMeasure.itemCategory.id] The id property for
   * the itemCategory entity
   *
   * @param {string} [body.baseUnitOfMeasure.itemCategory.code] The code property
   * for the itemCategory entity
   *
   * @param {string} [body.baseUnitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.baseUnitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {string} [body.gtin] The gtin property for the item entity
   *
   * @param {number} [body.inventory] The inventory property for the item entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the item entity
   *
   * @param {boolean} [body.priceIncludesTax] The priceIncludesTax property for
   * the item entity
   *
   * @param {number} [body.unitCost] The unitCost property for the item entity
   *
   * @param {uuid} [body.taxGroupId] The taxGroupId property for the item entity
   *
   * @param {string} [body.taxGroupCode] The taxGroupCode property for the item
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the item entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Item>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postItemWithHttpOperationResponse(body: models.Body, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Item>>;

  /**
   * @summary Creates a item in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the item entity
   *
   * @param {string} [body.number] The number property for the item entity
   *
   * @param {string} [body.displayName] The displayName property for the item
   * entity
   *
   * @param {string} [body.type] The type property for the item entity
   *
   * @param {uuid} [body.itemCategoryId] The itemCategoryId property for the item
   * entity
   *
   * @param {string} [body.itemCategoryCode] The itemCategoryCode property for
   * the item entity
   *
   * @param {boolean} [body.blocked] The blocked property for the item entity
   *
   * @param {uuid} [body.baseUnitOfMeasureId] The baseUnitOfMeasureId property
   * for the item entity
   *
   * @param {object} [body.baseUnitOfMeasure]
   *
   * @param {string} [body.baseUnitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.baseUnitOfMeasure.displayName] The displayName
   * property for the unitofmeasuretype entity
   *
   * @param {string} [body.baseUnitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.baseUnitOfMeasure.unitConversion]
   *
   * @param {string} [body.baseUnitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.baseUnitOfMeasure.unitConversion.fromToConversionRate]
   * The fromToConversionRate property for the itemunitofmeasureconversiontype
   * entity
   *
   * @param {array} [body.baseUnitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.baseUnitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.baseUnitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.baseUnitOfMeasure.picture]
   *
   * @param {array} [body.baseUnitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.baseUnitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.baseUnitOfMeasure.itemCategory.id] The id property for
   * the itemCategory entity
   *
   * @param {string} [body.baseUnitOfMeasure.itemCategory.code] The code property
   * for the itemCategory entity
   *
   * @param {string} [body.baseUnitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.baseUnitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {string} [body.gtin] The gtin property for the item entity
   *
   * @param {number} [body.inventory] The inventory property for the item entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the item entity
   *
   * @param {boolean} [body.priceIncludesTax] The priceIncludesTax property for
   * the item entity
   *
   * @param {number} [body.unitCost] The unitCost property for the item entity
   *
   * @param {uuid} [body.taxGroupId] The taxGroupId property for the item entity
   *
   * @param {string} [body.taxGroupCode] The taxGroupCode property for the item
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the item entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Item} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Item} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Item} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postItem(body: models.Body, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Item>;
  postItem(body: models.Body, companyId: string, callback: ServiceCallback<models.Item>): void;
  postItem(body: models.Body, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Item>): void;


  /**
   * @summary Retrieve the properties and relationships of an item object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Item>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getItemByIdWithHttpOperationResponse(companyId: string, itemId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Item>>;

  /**
   * @summary Retrieve the properties and relationships of an item object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Item} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Item} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Item} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getItemById(companyId: string, itemId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Item>;
  getItemById(companyId: string, itemId: string, callback: ServiceCallback<models.Item>): void;
  getItemById(companyId: string, itemId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Item>): void;


  /**
   * @summary Delete an item in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteItemByIdWithHttpOperationResponse(companyId: string, itemId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an item in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteItemById(companyId: string, itemId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteItemById(companyId: string, itemId: string, callback: ServiceCallback<void>): void;
  deleteItemById(companyId: string, itemId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified item
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the item entity
   *
   * @param {string} [body.number] The number property for the item entity
   *
   * @param {string} [body.displayName] The displayName property for the item
   * entity
   *
   * @param {string} [body.type] The type property for the item entity
   *
   * @param {uuid} [body.itemCategoryId] The itemCategoryId property for the item
   * entity
   *
   * @param {string} [body.itemCategoryCode] The itemCategoryCode property for
   * the item entity
   *
   * @param {boolean} [body.blocked] The blocked property for the item entity
   *
   * @param {uuid} [body.baseUnitOfMeasureId] The baseUnitOfMeasureId property
   * for the item entity
   *
   * @param {object} [body.baseUnitOfMeasure]
   *
   * @param {string} [body.baseUnitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.baseUnitOfMeasure.displayName] The displayName
   * property for the unitofmeasuretype entity
   *
   * @param {string} [body.baseUnitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.baseUnitOfMeasure.unitConversion]
   *
   * @param {string} [body.baseUnitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.baseUnitOfMeasure.unitConversion.fromToConversionRate]
   * The fromToConversionRate property for the itemunitofmeasureconversiontype
   * entity
   *
   * @param {array} [body.baseUnitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.baseUnitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.baseUnitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.baseUnitOfMeasure.picture]
   *
   * @param {array} [body.baseUnitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.baseUnitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.baseUnitOfMeasure.itemCategory.id] The id property for
   * the itemCategory entity
   *
   * @param {string} [body.baseUnitOfMeasure.itemCategory.code] The code property
   * for the itemCategory entity
   *
   * @param {string} [body.baseUnitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.baseUnitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {string} [body.gtin] The gtin property for the item entity
   *
   * @param {number} [body.inventory] The inventory property for the item entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the item entity
   *
   * @param {boolean} [body.priceIncludesTax] The priceIncludesTax property for
   * the item entity
   *
   * @param {number} [body.unitCost] The unitCost property for the item entity
   *
   * @param {uuid} [body.taxGroupId] The taxGroupId property for the item entity
   *
   * @param {string} [body.taxGroupCode] The taxGroupCode property for the item
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the item entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Item>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchItemByIdWithHttpOperationResponse(body: models.Body, companyId: string, itemId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Item>>;

  /**
   * @summary Lets the user patch the specified item
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the item entity
   *
   * @param {string} [body.number] The number property for the item entity
   *
   * @param {string} [body.displayName] The displayName property for the item
   * entity
   *
   * @param {string} [body.type] The type property for the item entity
   *
   * @param {uuid} [body.itemCategoryId] The itemCategoryId property for the item
   * entity
   *
   * @param {string} [body.itemCategoryCode] The itemCategoryCode property for
   * the item entity
   *
   * @param {boolean} [body.blocked] The blocked property for the item entity
   *
   * @param {uuid} [body.baseUnitOfMeasureId] The baseUnitOfMeasureId property
   * for the item entity
   *
   * @param {object} [body.baseUnitOfMeasure]
   *
   * @param {string} [body.baseUnitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.baseUnitOfMeasure.displayName] The displayName
   * property for the unitofmeasuretype entity
   *
   * @param {string} [body.baseUnitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.baseUnitOfMeasure.unitConversion]
   *
   * @param {string} [body.baseUnitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.baseUnitOfMeasure.unitConversion.fromToConversionRate]
   * The fromToConversionRate property for the itemunitofmeasureconversiontype
   * entity
   *
   * @param {array} [body.baseUnitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.baseUnitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.baseUnitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.baseUnitOfMeasure.picture]
   *
   * @param {array} [body.baseUnitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.baseUnitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.baseUnitOfMeasure.itemCategory.id] The id property for
   * the itemCategory entity
   *
   * @param {string} [body.baseUnitOfMeasure.itemCategory.code] The code property
   * for the itemCategory entity
   *
   * @param {string} [body.baseUnitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.baseUnitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {string} [body.gtin] The gtin property for the item entity
   *
   * @param {number} [body.inventory] The inventory property for the item entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the item entity
   *
   * @param {boolean} [body.priceIncludesTax] The priceIncludesTax property for
   * the item entity
   *
   * @param {number} [body.unitCost] The unitCost property for the item entity
   *
   * @param {uuid} [body.taxGroupId] The taxGroupId property for the item entity
   *
   * @param {string} [body.taxGroupCode] The taxGroupCode property for the item
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the item entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Item} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Item} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Item} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchItemById(body: models.Body, companyId: string, itemId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Item>;
  patchItemById(body: models.Body, companyId: string, itemId: string, callback: ServiceCallback<models.Item>): void;
  patchItemById(body: models.Body, companyId: string, itemId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Item>): void;


  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPictureForItemOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureForItemWithHttpOperationResponse(companyId: string, itemId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPictureForItemOKResponse>>;

  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPictureForItemOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPictureForItemOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPictureForItemOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureForItem(companyId: string, itemId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPictureForItemOKResponse>;
  getPictureForItem(companyId: string, itemId: string, callback: ServiceCallback<models.GetPictureForItemOKResponse>): void;
  getPictureForItem(companyId: string, itemId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPictureForItemOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureForItemByIdWithHttpOperationResponse(companyId: string, itemId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureForItemById(companyId: string, itemId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  getPictureForItemById(companyId: string, itemId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  getPictureForItemById(companyId: string, itemId: string, pictureId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePictureForItemByIdByIdWithHttpOperationResponse(companyId: string, itemId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePictureForItemByIdById(companyId: string, itemId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePictureForItemByIdById(companyId: string, itemId: string, pictureId: string, callback: ServiceCallback<void>): void;
  deletePictureForItemByIdById(companyId: string, itemId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPictureForItemByIdByIdWithHttpOperationResponse(body: models.BodyModel, companyId: string, itemId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPictureForItemByIdById(body: models.BodyModel, companyId: string, itemId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  patchPictureForItemByIdById(body: models.BodyModel, companyId: string, itemId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  patchPictureForItemByIdById(body: models.BodyModel, companyId: string, itemId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDefaultDimensionsForItemOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsForItemWithHttpOperationResponse(companyId: string, itemId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDefaultDimensionsForItemOKResponse>>;

  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDefaultDimensionsForItemOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDefaultDimensionsForItemOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDefaultDimensionsForItemOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsForItem(companyId: string, itemId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDefaultDimensionsForItemOKResponse>;
  getDefaultDimensionsForItem(companyId: string, itemId: string, callback: ServiceCallback<models.GetDefaultDimensionsForItemOKResponse>): void;
  getDefaultDimensionsForItem(companyId: string, itemId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDefaultDimensionsForItemOKResponse>): void;


  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postDefaultDimensionsForItemWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, itemId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postDefaultDimensionsForItem(body: models.BodyModelModel, companyId: string, itemId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  postDefaultDimensionsForItem(body: models.BodyModelModel, companyId: string, itemId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  postDefaultDimensionsForItem(body: models.BodyModelModel, companyId: string, itemId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsForItemByDimensionIdByParentIdWithHttpOperationResponse(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsForItemByDimensionIdByParentId(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  getDefaultDimensionsForItemByDimensionIdByParentId(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  getDefaultDimensionsForItemByDimensionIdByParentId(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteDefaultDimensionsForItemByDimensionIdByParentIdByIdWithHttpOperationResponse(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteDefaultDimensionsForItemByDimensionIdByParentIdById(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteDefaultDimensionsForItemByDimensionIdByParentIdById(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<void>): void;
  deleteDefaultDimensionsForItemByDimensionIdByParentIdById(companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchDefaultDimensionsForItemByDimensionIdByParentIdByIdWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemId id for item
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchDefaultDimensionsForItemByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  patchDefaultDimensionsForItemByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  patchDefaultDimensionsForItemByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, itemId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPictureOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPictureOKResponse>>;

  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPictureOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPictureOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPictureOKResponse} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPicture(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPictureOKResponse>;
  getPicture(companyId: string, callback: ServiceCallback<models.GetPictureOKResponse>): void;
  getPicture(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPictureOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureByIdWithHttpOperationResponse(companyId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureById(companyId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  getPictureById(companyId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  getPictureById(companyId: string, pictureId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePictureByIdWithHttpOperationResponse(companyId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePictureById(companyId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePictureById(companyId: string, pictureId: string, callback: ServiceCallback<void>): void;
  deletePictureById(companyId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPictureByIdWithHttpOperationResponse(body: models.BodyModel, companyId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPictureById(body: models.BodyModel, companyId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  patchPictureById(body: models.BodyModel, companyId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  patchPictureById(body: models.BodyModel, companyId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDefaultDimensionsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDefaultDimensionsOKResponse>>;

  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDefaultDimensionsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDefaultDimensionsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDefaultDimensionsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensions(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDefaultDimensionsOKResponse>;
  getDefaultDimensions(companyId: string, callback: ServiceCallback<models.GetDefaultDimensionsOKResponse>): void;
  getDefaultDimensions(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDefaultDimensionsOKResponse>): void;


  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postDefaultDimensionsWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postDefaultDimensions(body: models.BodyModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  postDefaultDimensions(body: models.BodyModelModel, companyId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  postDefaultDimensions(body: models.BodyModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsByDimensionIdByParentIdWithHttpOperationResponse(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsByDimensionIdByParentId(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  getDefaultDimensionsByDimensionIdByParentId(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  getDefaultDimensionsByDimensionIdByParentId(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteDefaultDimensionsByDimensionIdByParentIdWithHttpOperationResponse(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteDefaultDimensionsByDimensionIdByParentId(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteDefaultDimensionsByDimensionIdByParentId(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<void>): void;
  deleteDefaultDimensionsByDimensionIdByParentId(companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchDefaultDimensionsByDimensionIdByParentIdWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchDefaultDimensionsByDimensionIdByParentId(body: models.BodyModelModel, companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  patchDefaultDimensionsByDimensionIdByParentId(body: models.BodyModelModel, companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  patchDefaultDimensionsByDimensionIdByParentId(body: models.BodyModelModel, companyId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Returns a list of customers
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCustomersOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomersWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCustomersOKResponse>>;

  /**
   * @summary Returns a list of customers
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCustomersOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCustomersOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCustomersOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomers(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCustomersOKResponse>;
  getCustomers(companyId: string, callback: ServiceCallback<models.GetCustomersOKResponse>): void;
  getCustomers(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCustomersOKResponse>): void;


  /**
   * @summary Creates a customer in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customer entity
   *
   * @param {string} [body.number] The number property for the customer entity
   *
   * @param {string} [body.displayName] The displayName property for the customer
   * entity
   *
   * @param {string} [body.type] The type property for the customer entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the customer
   * entity
   *
   * @param {string} [body.email] The email property for the customer entity
   *
   * @param {string} [body.website] The website property for the customer entity
   *
   * @param {boolean} [body.taxLiable] The taxLiable property for the customer
   * entity
   *
   * @param {uuid} [body.taxAreaId] The taxAreaId property for the customer
   * entity
   *
   * @param {string} [body.taxAreaDisplayName] The taxAreaDisplayName property
   * for the customer entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the customer entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the customer
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * customer entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * customer entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * customer entity
   *
   * @param {uuid} [body.paymentMethodId] The paymentMethodId property for the
   * customer entity
   *
   * @param {string} [body.blocked] The blocked property for the customer entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customer entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Customer>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postCustomerWithHttpOperationResponse(body: models.BodyModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Customer>>;

  /**
   * @summary Creates a customer in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customer entity
   *
   * @param {string} [body.number] The number property for the customer entity
   *
   * @param {string} [body.displayName] The displayName property for the customer
   * entity
   *
   * @param {string} [body.type] The type property for the customer entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the customer
   * entity
   *
   * @param {string} [body.email] The email property for the customer entity
   *
   * @param {string} [body.website] The website property for the customer entity
   *
   * @param {boolean} [body.taxLiable] The taxLiable property for the customer
   * entity
   *
   * @param {uuid} [body.taxAreaId] The taxAreaId property for the customer
   * entity
   *
   * @param {string} [body.taxAreaDisplayName] The taxAreaDisplayName property
   * for the customer entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the customer entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the customer
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * customer entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * customer entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * customer entity
   *
   * @param {uuid} [body.paymentMethodId] The paymentMethodId property for the
   * customer entity
   *
   * @param {string} [body.blocked] The blocked property for the customer entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customer entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Customer} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Customer} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Customer} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postCustomer(body: models.BodyModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Customer>;
  postCustomer(body: models.BodyModelModelModel, companyId: string, callback: ServiceCallback<models.Customer>): void;
  postCustomer(body: models.BodyModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Customer>): void;


  /**
   * @summary Retrieve the properties and relationships of an customer object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Customer>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerByIdWithHttpOperationResponse(companyId: string, customerId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Customer>>;

  /**
   * @summary Retrieve the properties and relationships of an customer object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Customer} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Customer} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Customer} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerById(companyId: string, customerId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Customer>;
  getCustomerById(companyId: string, customerId: string, callback: ServiceCallback<models.Customer>): void;
  getCustomerById(companyId: string, customerId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Customer>): void;


  /**
   * @summary Delete an customer in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteCustomerByIdWithHttpOperationResponse(companyId: string, customerId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an customer in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteCustomerById(companyId: string, customerId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteCustomerById(companyId: string, customerId: string, callback: ServiceCallback<void>): void;
  deleteCustomerById(companyId: string, customerId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified customer
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customer entity
   *
   * @param {string} [body.number] The number property for the customer entity
   *
   * @param {string} [body.displayName] The displayName property for the customer
   * entity
   *
   * @param {string} [body.type] The type property for the customer entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the customer
   * entity
   *
   * @param {string} [body.email] The email property for the customer entity
   *
   * @param {string} [body.website] The website property for the customer entity
   *
   * @param {boolean} [body.taxLiable] The taxLiable property for the customer
   * entity
   *
   * @param {uuid} [body.taxAreaId] The taxAreaId property for the customer
   * entity
   *
   * @param {string} [body.taxAreaDisplayName] The taxAreaDisplayName property
   * for the customer entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the customer entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the customer
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * customer entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * customer entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * customer entity
   *
   * @param {uuid} [body.paymentMethodId] The paymentMethodId property for the
   * customer entity
   *
   * @param {string} [body.blocked] The blocked property for the customer entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customer entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Customer>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchCustomerByIdWithHttpOperationResponse(body: models.BodyModelModelModel, companyId: string, customerId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Customer>>;

  /**
   * @summary Lets the user patch the specified customer
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customer entity
   *
   * @param {string} [body.number] The number property for the customer entity
   *
   * @param {string} [body.displayName] The displayName property for the customer
   * entity
   *
   * @param {string} [body.type] The type property for the customer entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the customer
   * entity
   *
   * @param {string} [body.email] The email property for the customer entity
   *
   * @param {string} [body.website] The website property for the customer entity
   *
   * @param {boolean} [body.taxLiable] The taxLiable property for the customer
   * entity
   *
   * @param {uuid} [body.taxAreaId] The taxAreaId property for the customer
   * entity
   *
   * @param {string} [body.taxAreaDisplayName] The taxAreaDisplayName property
   * for the customer entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the customer entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the customer
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * customer entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * customer entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * customer entity
   *
   * @param {uuid} [body.paymentMethodId] The paymentMethodId property for the
   * customer entity
   *
   * @param {string} [body.blocked] The blocked property for the customer entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customer entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Customer} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Customer} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Customer} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchCustomerById(body: models.BodyModelModelModel, companyId: string, customerId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Customer>;
  patchCustomerById(body: models.BodyModelModelModel, companyId: string, customerId: string, callback: ServiceCallback<models.Customer>): void;
  patchCustomerById(body: models.BodyModelModelModel, companyId: string, customerId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Customer>): void;


  /**
   * @summary Returns a list of customerFinancialDetails
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCustomerFinancialDetailsForCustomerOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerFinancialDetailsForCustomerWithHttpOperationResponse(companyId: string, customerId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCustomerFinancialDetailsForCustomerOKResponse>>;

  /**
   * @summary Returns a list of customerFinancialDetails
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCustomerFinancialDetailsForCustomerOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCustomerFinancialDetailsForCustomerOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      GetCustomerFinancialDetailsForCustomerOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerFinancialDetailsForCustomer(companyId: string, customerId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCustomerFinancialDetailsForCustomerOKResponse>;
  getCustomerFinancialDetailsForCustomer(companyId: string, customerId: string, callback: ServiceCallback<models.GetCustomerFinancialDetailsForCustomerOKResponse>): void;
  getCustomerFinancialDetailsForCustomer(companyId: string, customerId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCustomerFinancialDetailsForCustomerOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an
   * customerFinancialDetail object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} customerFinancialDetailId id for customerFinancialDetail
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerFinancialDetail>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerFinancialDetailForCustomerByIdWithHttpOperationResponse(companyId: string, customerId: string, customerFinancialDetailId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerFinancialDetail>>;

  /**
   * @summary Retrieve the properties and relationships of an
   * customerFinancialDetail object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} customerFinancialDetailId id for customerFinancialDetail
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerFinancialDetail} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerFinancialDetail} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerFinancialDetail} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerFinancialDetailForCustomerById(companyId: string, customerId: string, customerFinancialDetailId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerFinancialDetail>;
  getCustomerFinancialDetailForCustomerById(companyId: string, customerId: string, customerFinancialDetailId: string, callback: ServiceCallback<models.CustomerFinancialDetail>): void;
  getCustomerFinancialDetailForCustomerById(companyId: string, customerId: string, customerFinancialDetailId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerFinancialDetail>): void;


  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPictureForCustomerOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureForCustomerWithHttpOperationResponse(companyId: string, customerId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPictureForCustomerOKResponse>>;

  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPictureForCustomerOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPictureForCustomerOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPictureForCustomerOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureForCustomer(companyId: string, customerId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPictureForCustomerOKResponse>;
  getPictureForCustomer(companyId: string, customerId: string, callback: ServiceCallback<models.GetPictureForCustomerOKResponse>): void;
  getPictureForCustomer(companyId: string, customerId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPictureForCustomerOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureForCustomerByIdWithHttpOperationResponse(companyId: string, customerId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureForCustomerById(companyId: string, customerId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  getPictureForCustomerById(companyId: string, customerId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  getPictureForCustomerById(companyId: string, customerId: string, pictureId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePictureForCustomerByIdByIdWithHttpOperationResponse(companyId: string, customerId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePictureForCustomerByIdById(companyId: string, customerId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePictureForCustomerByIdById(companyId: string, customerId: string, pictureId: string, callback: ServiceCallback<void>): void;
  deletePictureForCustomerByIdById(companyId: string, customerId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPictureForCustomerByIdByIdWithHttpOperationResponse(body: models.BodyModel, companyId: string, customerId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPictureForCustomerByIdById(body: models.BodyModel, companyId: string, customerId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  patchPictureForCustomerByIdById(body: models.BodyModel, companyId: string, customerId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  patchPictureForCustomerByIdById(body: models.BodyModel, companyId: string, customerId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDefaultDimensionsForCustomerOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsForCustomerWithHttpOperationResponse(companyId: string, customerId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDefaultDimensionsForCustomerOKResponse>>;

  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDefaultDimensionsForCustomerOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDefaultDimensionsForCustomerOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDefaultDimensionsForCustomerOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsForCustomer(companyId: string, customerId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDefaultDimensionsForCustomerOKResponse>;
  getDefaultDimensionsForCustomer(companyId: string, customerId: string, callback: ServiceCallback<models.GetDefaultDimensionsForCustomerOKResponse>): void;
  getDefaultDimensionsForCustomer(companyId: string, customerId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDefaultDimensionsForCustomerOKResponse>): void;


  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postDefaultDimensionsForCustomerWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, customerId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postDefaultDimensionsForCustomer(body: models.BodyModelModel, companyId: string, customerId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  postDefaultDimensionsForCustomer(body: models.BodyModelModel, companyId: string, customerId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  postDefaultDimensionsForCustomer(body: models.BodyModelModel, companyId: string, customerId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsForCustomerByDimensionIdByParentIdWithHttpOperationResponse(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsForCustomerByDimensionIdByParentId(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  getDefaultDimensionsForCustomerByDimensionIdByParentId(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  getDefaultDimensionsForCustomerByDimensionIdByParentId(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteDefaultDimensionsForCustomerByDimensionIdByParentIdByIdWithHttpOperationResponse(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteDefaultDimensionsForCustomerByDimensionIdByParentIdById(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteDefaultDimensionsForCustomerByDimensionIdByParentIdById(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<void>): void;
  deleteDefaultDimensionsForCustomerByDimensionIdByParentIdById(companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchDefaultDimensionsForCustomerByDimensionIdByParentIdByIdWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerId id for customer
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchDefaultDimensionsForCustomerByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  patchDefaultDimensionsForCustomerByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  patchDefaultDimensionsForCustomerByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, customerId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Returns a list of customerFinancialDetails
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCustomerFinancialDetailsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerFinancialDetailsWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCustomerFinancialDetailsOKResponse>>;

  /**
   * @summary Returns a list of customerFinancialDetails
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCustomerFinancialDetailsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCustomerFinancialDetailsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCustomerFinancialDetailsOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerFinancialDetails(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCustomerFinancialDetailsOKResponse>;
  getCustomerFinancialDetails(companyId: string, callback: ServiceCallback<models.GetCustomerFinancialDetailsOKResponse>): void;
  getCustomerFinancialDetails(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCustomerFinancialDetailsOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an
   * customerFinancialDetail object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerFinancialDetailId id for customerFinancialDetail
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerFinancialDetail>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerFinancialDetailByIdWithHttpOperationResponse(companyId: string, customerFinancialDetailId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerFinancialDetail>>;

  /**
   * @summary Retrieve the properties and relationships of an
   * customerFinancialDetail object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerFinancialDetailId id for customerFinancialDetail
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerFinancialDetail} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerFinancialDetail} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerFinancialDetail} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerFinancialDetailById(companyId: string, customerFinancialDetailId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerFinancialDetail>;
  getCustomerFinancialDetailById(companyId: string, customerFinancialDetailId: string, callback: ServiceCallback<models.CustomerFinancialDetail>): void;
  getCustomerFinancialDetailById(companyId: string, customerFinancialDetailId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerFinancialDetail>): void;


  /**
   * @summary Returns a list of vendors
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetVendorsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getVendorsWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetVendorsOKResponse>>;

  /**
   * @summary Returns a list of vendors
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetVendorsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetVendorsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetVendorsOKResponse} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getVendors(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetVendorsOKResponse>;
  getVendors(companyId: string, callback: ServiceCallback<models.GetVendorsOKResponse>): void;
  getVendors(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetVendorsOKResponse>): void;


  /**
   * @summary Creates a vendor in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the vendor entity
   *
   * @param {string} [body.number] The number property for the vendor entity
   *
   * @param {string} [body.displayName] The displayName property for the vendor
   * entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the vendor
   * entity
   *
   * @param {string} [body.email] The email property for the vendor entity
   *
   * @param {string} [body.website] The website property for the vendor entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the vendor entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the vendor
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the vendor
   * entity
   *
   * @param {string} [body.irs1099Code] The irs1099Code property for the vendor
   * entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * vendor entity
   *
   * @param {uuid} [body.paymentMethodId] The paymentMethodId property for the
   * vendor entity
   *
   * @param {boolean} [body.taxLiable] The taxLiable property for the vendor
   * entity
   *
   * @param {string} [body.blocked] The blocked property for the vendor entity
   *
   * @param {number} [body.balance] The balance property for the vendor entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the vendor entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Vendor>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postVendorWithHttpOperationResponse(body: models.BodyModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Vendor>>;

  /**
   * @summary Creates a vendor in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the vendor entity
   *
   * @param {string} [body.number] The number property for the vendor entity
   *
   * @param {string} [body.displayName] The displayName property for the vendor
   * entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the vendor
   * entity
   *
   * @param {string} [body.email] The email property for the vendor entity
   *
   * @param {string} [body.website] The website property for the vendor entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the vendor entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the vendor
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the vendor
   * entity
   *
   * @param {string} [body.irs1099Code] The irs1099Code property for the vendor
   * entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * vendor entity
   *
   * @param {uuid} [body.paymentMethodId] The paymentMethodId property for the
   * vendor entity
   *
   * @param {boolean} [body.taxLiable] The taxLiable property for the vendor
   * entity
   *
   * @param {string} [body.blocked] The blocked property for the vendor entity
   *
   * @param {number} [body.balance] The balance property for the vendor entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the vendor entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Vendor} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Vendor} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Vendor} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postVendor(body: models.BodyModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Vendor>;
  postVendor(body: models.BodyModelModelModelModel, companyId: string, callback: ServiceCallback<models.Vendor>): void;
  postVendor(body: models.BodyModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Vendor>): void;


  /**
   * @summary Retrieve the properties and relationships of an vendor object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Vendor>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getVendorByIdWithHttpOperationResponse(companyId: string, vendorId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Vendor>>;

  /**
   * @summary Retrieve the properties and relationships of an vendor object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Vendor} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Vendor} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Vendor} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getVendorById(companyId: string, vendorId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Vendor>;
  getVendorById(companyId: string, vendorId: string, callback: ServiceCallback<models.Vendor>): void;
  getVendorById(companyId: string, vendorId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Vendor>): void;


  /**
   * @summary Delete an vendor in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteVendorByIdWithHttpOperationResponse(companyId: string, vendorId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an vendor in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteVendorById(companyId: string, vendorId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteVendorById(companyId: string, vendorId: string, callback: ServiceCallback<void>): void;
  deleteVendorById(companyId: string, vendorId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified vendor
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the vendor entity
   *
   * @param {string} [body.number] The number property for the vendor entity
   *
   * @param {string} [body.displayName] The displayName property for the vendor
   * entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the vendor
   * entity
   *
   * @param {string} [body.email] The email property for the vendor entity
   *
   * @param {string} [body.website] The website property for the vendor entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the vendor entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the vendor
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the vendor
   * entity
   *
   * @param {string} [body.irs1099Code] The irs1099Code property for the vendor
   * entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * vendor entity
   *
   * @param {uuid} [body.paymentMethodId] The paymentMethodId property for the
   * vendor entity
   *
   * @param {boolean} [body.taxLiable] The taxLiable property for the vendor
   * entity
   *
   * @param {string} [body.blocked] The blocked property for the vendor entity
   *
   * @param {number} [body.balance] The balance property for the vendor entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the vendor entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Vendor>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchVendorByIdWithHttpOperationResponse(body: models.BodyModelModelModelModel, companyId: string, vendorId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Vendor>>;

  /**
   * @summary Lets the user patch the specified vendor
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the vendor entity
   *
   * @param {string} [body.number] The number property for the vendor entity
   *
   * @param {string} [body.displayName] The displayName property for the vendor
   * entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the vendor
   * entity
   *
   * @param {string} [body.email] The email property for the vendor entity
   *
   * @param {string} [body.website] The website property for the vendor entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the vendor entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the vendor
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the vendor
   * entity
   *
   * @param {string} [body.irs1099Code] The irs1099Code property for the vendor
   * entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * vendor entity
   *
   * @param {uuid} [body.paymentMethodId] The paymentMethodId property for the
   * vendor entity
   *
   * @param {boolean} [body.taxLiable] The taxLiable property for the vendor
   * entity
   *
   * @param {string} [body.blocked] The blocked property for the vendor entity
   *
   * @param {number} [body.balance] The balance property for the vendor entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the vendor entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Vendor} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Vendor} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Vendor} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchVendorById(body: models.BodyModelModelModelModel, companyId: string, vendorId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Vendor>;
  patchVendorById(body: models.BodyModelModelModelModel, companyId: string, vendorId: string, callback: ServiceCallback<models.Vendor>): void;
  patchVendorById(body: models.BodyModelModelModelModel, companyId: string, vendorId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Vendor>): void;


  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPictureForVendorOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureForVendorWithHttpOperationResponse(companyId: string, vendorId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPictureForVendorOKResponse>>;

  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPictureForVendorOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPictureForVendorOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPictureForVendorOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureForVendor(companyId: string, vendorId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPictureForVendorOKResponse>;
  getPictureForVendor(companyId: string, vendorId: string, callback: ServiceCallback<models.GetPictureForVendorOKResponse>): void;
  getPictureForVendor(companyId: string, vendorId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPictureForVendorOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureForVendorByIdWithHttpOperationResponse(companyId: string, vendorId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureForVendorById(companyId: string, vendorId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  getPictureForVendorById(companyId: string, vendorId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  getPictureForVendorById(companyId: string, vendorId: string, pictureId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePictureForVendorByIdByIdWithHttpOperationResponse(companyId: string, vendorId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePictureForVendorByIdById(companyId: string, vendorId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePictureForVendorByIdById(companyId: string, vendorId: string, pictureId: string, callback: ServiceCallback<void>): void;
  deletePictureForVendorByIdById(companyId: string, vendorId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPictureForVendorByIdByIdWithHttpOperationResponse(body: models.BodyModel, companyId: string, vendorId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPictureForVendorByIdById(body: models.BodyModel, companyId: string, vendorId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  patchPictureForVendorByIdById(body: models.BodyModel, companyId: string, vendorId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  patchPictureForVendorByIdById(body: models.BodyModel, companyId: string, vendorId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDefaultDimensionsForVendorOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsForVendorWithHttpOperationResponse(companyId: string, vendorId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDefaultDimensionsForVendorOKResponse>>;

  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDefaultDimensionsForVendorOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDefaultDimensionsForVendorOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDefaultDimensionsForVendorOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsForVendor(companyId: string, vendorId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDefaultDimensionsForVendorOKResponse>;
  getDefaultDimensionsForVendor(companyId: string, vendorId: string, callback: ServiceCallback<models.GetDefaultDimensionsForVendorOKResponse>): void;
  getDefaultDimensionsForVendor(companyId: string, vendorId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDefaultDimensionsForVendorOKResponse>): void;


  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postDefaultDimensionsForVendorWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, vendorId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postDefaultDimensionsForVendor(body: models.BodyModelModel, companyId: string, vendorId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  postDefaultDimensionsForVendor(body: models.BodyModelModel, companyId: string, vendorId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  postDefaultDimensionsForVendor(body: models.BodyModelModel, companyId: string, vendorId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsForVendorByDimensionIdByParentIdWithHttpOperationResponse(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsForVendorByDimensionIdByParentId(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  getDefaultDimensionsForVendorByDimensionIdByParentId(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  getDefaultDimensionsForVendorByDimensionIdByParentId(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteDefaultDimensionsForVendorByDimensionIdByParentIdByIdWithHttpOperationResponse(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteDefaultDimensionsForVendorByDimensionIdByParentIdById(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteDefaultDimensionsForVendorByDimensionIdByParentIdById(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<void>): void;
  deleteDefaultDimensionsForVendorByDimensionIdByParentIdById(companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchDefaultDimensionsForVendorByDimensionIdByParentIdByIdWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorId id for vendor
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchDefaultDimensionsForVendorByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  patchDefaultDimensionsForVendorByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  patchDefaultDimensionsForVendorByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, vendorId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Returns a list of companyInformation
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCompanyInformationOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCompanyInformationWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCompanyInformationOKResponse>>;

  /**
   * @summary Returns a list of companyInformation
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCompanyInformationOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCompanyInformationOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCompanyInformationOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCompanyInformation(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCompanyInformationOKResponse>;
  getCompanyInformation(companyId: string, callback: ServiceCallback<models.GetCompanyInformationOKResponse>): void;
  getCompanyInformation(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCompanyInformationOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an companyInformation
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} companyInformationId id for companyInformation
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CompanyInformation>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCompanyInformationByIdWithHttpOperationResponse(companyId: string, companyInformationId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CompanyInformation>>;

  /**
   * @summary Retrieve the properties and relationships of an companyInformation
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} companyInformationId id for companyInformation
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CompanyInformation} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CompanyInformation} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CompanyInformation} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCompanyInformationById(companyId: string, companyInformationId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CompanyInformation>;
  getCompanyInformationById(companyId: string, companyInformationId: string, callback: ServiceCallback<models.CompanyInformation>): void;
  getCompanyInformationById(companyId: string, companyInformationId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CompanyInformation>): void;


  /**
   * @summary Lets the user patch the specified companyInformation
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the companyInformation entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * companyInformation entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * companyInformation entity
   *
   * @param {string} [body.faxNumber] The faxNumber property for the
   * companyInformation entity
   *
   * @param {string} [body.email] The email property for the companyInformation
   * entity
   *
   * @param {string} [body.website] The website property for the
   * companyInformation entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the companyInformation entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * companyInformation entity
   *
   * @param {date} [body.currentFiscalYearStartDate] The
   * currentFiscalYearStartDate property for the companyInformation entity
   *
   * @param {string} [body.industry] The industry property for the
   * companyInformation entity
   *
   * @param {string} [body.picture] The picture property for the
   * companyInformation entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the companyInformation entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} companyInformationId id for companyInformation
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CompanyInformation>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchCompanyInformationByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModel, companyId: string, companyInformationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CompanyInformation>>;

  /**
   * @summary Lets the user patch the specified companyInformation
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the companyInformation entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * companyInformation entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * companyInformation entity
   *
   * @param {string} [body.faxNumber] The faxNumber property for the
   * companyInformation entity
   *
   * @param {string} [body.email] The email property for the companyInformation
   * entity
   *
   * @param {string} [body.website] The website property for the
   * companyInformation entity
   *
   * @param {string} [body.taxRegistrationNumber] The taxRegistrationNumber
   * property for the companyInformation entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * companyInformation entity
   *
   * @param {date} [body.currentFiscalYearStartDate] The
   * currentFiscalYearStartDate property for the companyInformation entity
   *
   * @param {string} [body.industry] The industry property for the
   * companyInformation entity
   *
   * @param {string} [body.picture] The picture property for the
   * companyInformation entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the companyInformation entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} companyInformationId id for companyInformation
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CompanyInformation} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CompanyInformation} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CompanyInformation} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchCompanyInformationById(body: models.BodyModelModelModelModelModel, companyId: string, companyInformationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CompanyInformation>;
  patchCompanyInformationById(body: models.BodyModelModelModelModelModel, companyId: string, companyInformationId: string, callback: ServiceCallback<models.CompanyInformation>): void;
  patchCompanyInformationById(body: models.BodyModelModelModelModelModel, companyId: string, companyInformationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CompanyInformation>): void;


  /**
   * @summary Returns a list of salesInvoices
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesInvoicesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesInvoicesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesInvoicesOKResponse>>;

  /**
   * @summary Returns a list of salesInvoices
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesInvoicesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesInvoicesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesInvoicesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesInvoices(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesInvoicesOKResponse>;
  getSalesInvoices(companyId: string, callback: ServiceCallback<models.GetSalesInvoicesOKResponse>): void;
  getSalesInvoices(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesInvoicesOKResponse>): void;


  /**
   * @summary Creates a salesInvoice in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesInvoice entity
   *
   * @param {string} [body.number] The number property for the salesInvoice
   * entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesInvoice entity
   *
   * @param {date} [body.invoiceDate] The invoiceDate property for the
   * salesInvoice entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesInvoice
   * entity
   *
   * @param {string} [body.customerPurchaseOrderReference] The
   * customerPurchaseOrderReference property for the salesInvoice entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesInvoice
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesInvoice
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesInvoice entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesInvoice entity
   *
   * @param {string} [body.billToName] The billToName property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesInvoice entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesInvoice entity
   *
   * @param {string} [body.shipToName] The shipToName property for the
   * salesInvoice entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesInvoice entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesInvoice
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.orderId] The orderId property for the salesInvoice
   * entity
   *
   * @param {string} [body.orderNumber] The orderNumber property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * salesInvoice entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesInvoice entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesInvoice entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoice entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoice entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesInvoice entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoice entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesInvoice entity
   *
   * @param {string} [body.status] The status property for the salesInvoice
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesInvoice entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesInvoice entity
   *
   * @param {string} [body.email] The email property for the salesInvoice entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoice>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesInvoiceWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoice>>;

  /**
   * @summary Creates a salesInvoice in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesInvoice entity
   *
   * @param {string} [body.number] The number property for the salesInvoice
   * entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesInvoice entity
   *
   * @param {date} [body.invoiceDate] The invoiceDate property for the
   * salesInvoice entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesInvoice
   * entity
   *
   * @param {string} [body.customerPurchaseOrderReference] The
   * customerPurchaseOrderReference property for the salesInvoice entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesInvoice
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesInvoice
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesInvoice entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesInvoice entity
   *
   * @param {string} [body.billToName] The billToName property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesInvoice entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesInvoice entity
   *
   * @param {string} [body.shipToName] The shipToName property for the
   * salesInvoice entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesInvoice entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesInvoice
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.orderId] The orderId property for the salesInvoice
   * entity
   *
   * @param {string} [body.orderNumber] The orderNumber property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * salesInvoice entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesInvoice entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesInvoice entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoice entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoice entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesInvoice entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoice entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesInvoice entity
   *
   * @param {string} [body.status] The status property for the salesInvoice
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesInvoice entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesInvoice entity
   *
   * @param {string} [body.email] The email property for the salesInvoice entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoice} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoice} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoice} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesInvoice(body: models.BodyModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoice>;
  postSalesInvoice(body: models.BodyModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.SalesInvoice>): void;
  postSalesInvoice(body: models.BodyModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoice>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesInvoice object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoice>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesInvoiceByIdWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoice>>;

  /**
   * @summary Retrieve the properties and relationships of an salesInvoice object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoice} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoice} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoice} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesInvoiceById(companyId: string, salesInvoiceId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoice>;
  getSalesInvoiceById(companyId: string, salesInvoiceId: string, callback: ServiceCallback<models.SalesInvoice>): void;
  getSalesInvoiceById(companyId: string, salesInvoiceId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoice>): void;


  /**
   * @summary Delete an salesInvoice in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesInvoiceByIdWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesInvoice in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesInvoiceById(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesInvoiceById(companyId: string, salesInvoiceId: string, callback: ServiceCallback<void>): void;
  deleteSalesInvoiceById(companyId: string, salesInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesInvoice
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesInvoice entity
   *
   * @param {string} [body.number] The number property for the salesInvoice
   * entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesInvoice entity
   *
   * @param {date} [body.invoiceDate] The invoiceDate property for the
   * salesInvoice entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesInvoice
   * entity
   *
   * @param {string} [body.customerPurchaseOrderReference] The
   * customerPurchaseOrderReference property for the salesInvoice entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesInvoice
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesInvoice
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesInvoice entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesInvoice entity
   *
   * @param {string} [body.billToName] The billToName property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesInvoice entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesInvoice entity
   *
   * @param {string} [body.shipToName] The shipToName property for the
   * salesInvoice entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesInvoice entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesInvoice
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.orderId] The orderId property for the salesInvoice
   * entity
   *
   * @param {string} [body.orderNumber] The orderNumber property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * salesInvoice entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesInvoice entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesInvoice entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoice entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoice entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesInvoice entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoice entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesInvoice entity
   *
   * @param {string} [body.status] The status property for the salesInvoice
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesInvoice entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesInvoice entity
   *
   * @param {string} [body.email] The email property for the salesInvoice entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoice>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesInvoiceByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoice>>;

  /**
   * @summary Lets the user patch the specified salesInvoice
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesInvoice entity
   *
   * @param {string} [body.number] The number property for the salesInvoice
   * entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesInvoice entity
   *
   * @param {date} [body.invoiceDate] The invoiceDate property for the
   * salesInvoice entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesInvoice
   * entity
   *
   * @param {string} [body.customerPurchaseOrderReference] The
   * customerPurchaseOrderReference property for the salesInvoice entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesInvoice
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesInvoice
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesInvoice entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesInvoice entity
   *
   * @param {string} [body.billToName] The billToName property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesInvoice entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesInvoice entity
   *
   * @param {string} [body.shipToName] The shipToName property for the
   * salesInvoice entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesInvoice entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesInvoice
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.orderId] The orderId property for the salesInvoice
   * entity
   *
   * @param {string} [body.orderNumber] The orderNumber property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesInvoice entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * salesInvoice entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesInvoice entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesInvoice entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoice entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoice entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesInvoice entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoice entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesInvoice entity
   *
   * @param {string} [body.status] The status property for the salesInvoice
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesInvoice entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesInvoice entity
   *
   * @param {string} [body.email] The email property for the salesInvoice entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoice} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoice} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoice} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesInvoiceById(body: models.BodyModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoice>;
  patchSalesInvoiceById(body: models.BodyModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, callback: ServiceCallback<models.SalesInvoice>): void;
  patchSalesInvoiceById(body: models.BodyModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoice>): void;


  /**
   * @summary Performs the cancelAndSend action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  cancelAndSendActionSalesInvoicesWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the cancelAndSend action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  cancelAndSendActionSalesInvoices(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  cancelAndSendActionSalesInvoices(companyId: string, salesInvoiceId: string, callback: ServiceCallback<void>): void;
  cancelAndSendActionSalesInvoices(companyId: string, salesInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Performs the cancel action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  cancelActionSalesInvoicesWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the cancel action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  cancelActionSalesInvoices(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  cancelActionSalesInvoices(companyId: string, salesInvoiceId: string, callback: ServiceCallback<void>): void;
  cancelActionSalesInvoices(companyId: string, salesInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Performs the postAndSend action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postAndSendActionSalesInvoicesWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the postAndSend action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postAndSendActionSalesInvoices(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  postAndSendActionSalesInvoices(companyId: string, salesInvoiceId: string, callback: ServiceCallback<void>): void;
  postAndSendActionSalesInvoices(companyId: string, salesInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Performs the post action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postActionSalesInvoicesWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the post action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postActionSalesInvoices(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  postActionSalesInvoices(companyId: string, salesInvoiceId: string, callback: ServiceCallback<void>): void;
  postActionSalesInvoices(companyId: string, salesInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Performs the send action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  sendActionSalesInvoicesWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the send action for salesInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  sendActionSalesInvoices(companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  sendActionSalesInvoices(companyId: string, salesInvoiceId: string, callback: ServiceCallback<void>): void;
  sendActionSalesInvoices(companyId: string, salesInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Returns a list of salesInvoiceLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesInvoiceLinesForSalesInvoiceOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesInvoiceLinesForSalesInvoiceWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesInvoiceLinesForSalesInvoiceOKResponse>>;

  /**
   * @summary Returns a list of salesInvoiceLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesInvoiceLinesForSalesInvoiceOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesInvoiceLinesForSalesInvoiceOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      GetSalesInvoiceLinesForSalesInvoiceOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesInvoiceLinesForSalesInvoice(companyId: string, salesInvoiceId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesInvoiceLinesForSalesInvoiceOKResponse>;
  getSalesInvoiceLinesForSalesInvoice(companyId: string, salesInvoiceId: string, callback: ServiceCallback<models.GetSalesInvoiceLinesForSalesInvoiceOKResponse>): void;
  getSalesInvoiceLinesForSalesInvoice(companyId: string, salesInvoiceId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesInvoiceLinesForSalesInvoiceOKResponse>): void;


  /**
   * @summary Creates a salesInvoiceLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesInvoiceLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesInvoiceLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesInvoiceLineForSalesInvoiceWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoiceLine>>;

  /**
   * @summary Creates a salesInvoiceLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesInvoiceLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesInvoiceLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesInvoiceLineForSalesInvoice(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoiceLine>;
  postSalesInvoiceLineForSalesInvoice(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, callback: ServiceCallback<models.SalesInvoiceLine>): void;
  postSalesInvoiceLineForSalesInvoice(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoiceLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesInvoiceLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesInvoiceLineForSalesInvoiceByIdWithHttpOperationResponse(companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoiceLine>>;

  /**
   * @summary Retrieve the properties and relationships of an salesInvoiceLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesInvoiceLineForSalesInvoiceById(companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoiceLine>;
  getSalesInvoiceLineForSalesInvoiceById(companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, callback: ServiceCallback<models.SalesInvoiceLine>): void;
  getSalesInvoiceLineForSalesInvoiceById(companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoiceLine>): void;


  /**
   * @summary Delete an salesInvoiceLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesInvoiceLineForSalesInvoiceByIdByIdWithHttpOperationResponse(companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesInvoiceLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesInvoiceLineForSalesInvoiceByIdById(companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesInvoiceLineForSalesInvoiceByIdById(companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, callback: ServiceCallback<void>): void;
  deleteSalesInvoiceLineForSalesInvoiceByIdById(companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesInvoiceLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesInvoiceLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesInvoiceLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesInvoiceLineForSalesInvoiceByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoiceLine>>;

  /**
   * @summary Lets the user patch the specified salesInvoiceLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesInvoiceLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesInvoiceLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesInvoiceLineForSalesInvoiceByIdById(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoiceLine>;
  patchSalesInvoiceLineForSalesInvoiceByIdById(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, callback: ServiceCallback<models.SalesInvoiceLine>): void;
  patchSalesInvoiceLineForSalesInvoiceByIdById(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceId: string, salesInvoiceLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoiceLine>): void;


  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPdfDocumentForSalesInvoiceOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentForSalesInvoiceWithHttpOperationResponse(companyId: string, salesInvoiceId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPdfDocumentForSalesInvoiceOKResponse>>;

  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPdfDocumentForSalesInvoiceOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPdfDocumentForSalesInvoiceOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPdfDocumentForSalesInvoiceOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentForSalesInvoice(companyId: string, salesInvoiceId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPdfDocumentForSalesInvoiceOKResponse>;
  getPdfDocumentForSalesInvoice(companyId: string, salesInvoiceId: string, callback: ServiceCallback<models.GetPdfDocumentForSalesInvoiceOKResponse>): void;
  getPdfDocumentForSalesInvoice(companyId: string, salesInvoiceId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPdfDocumentForSalesInvoiceOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PdfDocument>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentForSalesInvoiceByIdWithHttpOperationResponse(companyId: string, salesInvoiceId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PdfDocument>>;

  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesInvoiceId id for salesInvoice
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PdfDocument} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PdfDocument} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PdfDocument} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentForSalesInvoiceById(companyId: string, salesInvoiceId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PdfDocument>;
  getPdfDocumentForSalesInvoiceById(companyId: string, salesInvoiceId: string, pdfDocumentId: string, callback: ServiceCallback<models.PdfDocument>): void;
  getPdfDocumentForSalesInvoiceById(companyId: string, salesInvoiceId: string, pdfDocumentId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PdfDocument>): void;


  /**
   * @summary Returns a list of salesInvoiceLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesInvoiceLinesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesInvoiceLinesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesInvoiceLinesOKResponse>>;

  /**
   * @summary Returns a list of salesInvoiceLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesInvoiceLinesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesInvoiceLinesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesInvoiceLinesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesInvoiceLines(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesInvoiceLinesOKResponse>;
  getSalesInvoiceLines(companyId: string, callback: ServiceCallback<models.GetSalesInvoiceLinesOKResponse>): void;
  getSalesInvoiceLines(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesInvoiceLinesOKResponse>): void;


  /**
   * @summary Creates a salesInvoiceLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesInvoiceLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesInvoiceLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesInvoiceLineWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoiceLine>>;

  /**
   * @summary Creates a salesInvoiceLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesInvoiceLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesInvoiceLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesInvoiceLine(body: models.BodyModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoiceLine>;
  postSalesInvoiceLine(body: models.BodyModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.SalesInvoiceLine>): void;
  postSalesInvoiceLine(body: models.BodyModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoiceLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesInvoiceLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesInvoiceLineByIdWithHttpOperationResponse(companyId: string, salesInvoiceLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoiceLine>>;

  /**
   * @summary Retrieve the properties and relationships of an salesInvoiceLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesInvoiceLineById(companyId: string, salesInvoiceLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoiceLine>;
  getSalesInvoiceLineById(companyId: string, salesInvoiceLineId: string, callback: ServiceCallback<models.SalesInvoiceLine>): void;
  getSalesInvoiceLineById(companyId: string, salesInvoiceLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoiceLine>): void;


  /**
   * @summary Delete an salesInvoiceLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesInvoiceLineByIdWithHttpOperationResponse(companyId: string, salesInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesInvoiceLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesInvoiceLineById(companyId: string, salesInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesInvoiceLineById(companyId: string, salesInvoiceLineId: string, callback: ServiceCallback<void>): void;
  deleteSalesInvoiceLineById(companyId: string, salesInvoiceLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesInvoiceLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesInvoiceLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesInvoiceLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesInvoiceLineByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesInvoiceLine>>;

  /**
   * @summary Lets the user patch the specified salesInvoiceLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesInvoiceLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesInvoiceLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesInvoiceLineId id for salesInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesInvoiceLineById(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesInvoiceLine>;
  patchSalesInvoiceLineById(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceLineId: string, callback: ServiceCallback<models.SalesInvoiceLine>): void;
  patchSalesInvoiceLineById(body: models.BodyModelModelModelModelModelModelModel, companyId: string, salesInvoiceLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesInvoiceLine>): void;


  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPdfDocumentOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPdfDocumentOKResponse>>;

  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPdfDocumentOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPdfDocumentOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPdfDocumentOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocument(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPdfDocumentOKResponse>;
  getPdfDocument(companyId: string, callback: ServiceCallback<models.GetPdfDocumentOKResponse>): void;
  getPdfDocument(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPdfDocumentOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PdfDocument>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentByIdWithHttpOperationResponse(companyId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PdfDocument>>;

  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PdfDocument} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PdfDocument} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PdfDocument} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentById(companyId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PdfDocument>;
  getPdfDocumentById(companyId: string, pdfDocumentId: string, callback: ServiceCallback<models.PdfDocument>): void;
  getPdfDocumentById(companyId: string, pdfDocumentId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PdfDocument>): void;


  /**
   * @summary Returns a list of customerPaymentJournals
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCustomerPaymentJournalsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerPaymentJournalsWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCustomerPaymentJournalsOKResponse>>;

  /**
   * @summary Returns a list of customerPaymentJournals
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCustomerPaymentJournalsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCustomerPaymentJournalsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCustomerPaymentJournalsOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerPaymentJournals(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCustomerPaymentJournalsOKResponse>;
  getCustomerPaymentJournals(companyId: string, callback: ServiceCallback<models.GetCustomerPaymentJournalsOKResponse>): void;
  getCustomerPaymentJournals(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCustomerPaymentJournalsOKResponse>): void;


  /**
   * @summary Creates a customerPaymentJournal in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPaymentJournal
   * entity
   *
   * @param {string} [body.code] The code property for the customerPaymentJournal
   * entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * customerPaymentJournal entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPaymentJournal entity
   *
   * @param {uuid} [body.balancingAccountId] The balancingAccountId property for
   * the customerPaymentJournal entity
   *
   * @param {string} [body.balancingAccountNumber] The balancingAccountNumber
   * property for the customerPaymentJournal entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPaymentJournal>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postCustomerPaymentJournalWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPaymentJournal>>;

  /**
   * @summary Creates a customerPaymentJournal in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPaymentJournal
   * entity
   *
   * @param {string} [body.code] The code property for the customerPaymentJournal
   * entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * customerPaymentJournal entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPaymentJournal entity
   *
   * @param {uuid} [body.balancingAccountId] The balancingAccountId property for
   * the customerPaymentJournal entity
   *
   * @param {string} [body.balancingAccountNumber] The balancingAccountNumber
   * property for the customerPaymentJournal entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPaymentJournal} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPaymentJournal} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPaymentJournal} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postCustomerPaymentJournal(body: models.BodyModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPaymentJournal>;
  postCustomerPaymentJournal(body: models.BodyModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.CustomerPaymentJournal>): void;
  postCustomerPaymentJournal(body: models.BodyModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPaymentJournal>): void;


  /**
   * @summary Retrieve the properties and relationships of an
   * customerPaymentJournal object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPaymentJournal>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerPaymentJournalByIdWithHttpOperationResponse(companyId: string, customerPaymentJournalId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPaymentJournal>>;

  /**
   * @summary Retrieve the properties and relationships of an
   * customerPaymentJournal object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPaymentJournal} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPaymentJournal} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPaymentJournal} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPaymentJournal>;
  getCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, callback: ServiceCallback<models.CustomerPaymentJournal>): void;
  getCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPaymentJournal>): void;


  /**
   * @summary Delete an customerPaymentJournal in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteCustomerPaymentJournalByIdWithHttpOperationResponse(companyId: string, customerPaymentJournalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an customerPaymentJournal in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, callback: ServiceCallback<void>): void;
  deleteCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified customerPaymentJournal
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPaymentJournal
   * entity
   *
   * @param {string} [body.code] The code property for the customerPaymentJournal
   * entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * customerPaymentJournal entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPaymentJournal entity
   *
   * @param {uuid} [body.balancingAccountId] The balancingAccountId property for
   * the customerPaymentJournal entity
   *
   * @param {string} [body.balancingAccountNumber] The balancingAccountNumber
   * property for the customerPaymentJournal entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPaymentJournal>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchCustomerPaymentJournalByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPaymentJournal>>;

  /**
   * @summary Lets the user patch the specified customerPaymentJournal
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPaymentJournal
   * entity
   *
   * @param {string} [body.code] The code property for the customerPaymentJournal
   * entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * customerPaymentJournal entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPaymentJournal entity
   *
   * @param {uuid} [body.balancingAccountId] The balancingAccountId property for
   * the customerPaymentJournal entity
   *
   * @param {string} [body.balancingAccountNumber] The balancingAccountNumber
   * property for the customerPaymentJournal entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPaymentJournal} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPaymentJournal} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPaymentJournal} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchCustomerPaymentJournalById(body: models.BodyModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPaymentJournal>;
  patchCustomerPaymentJournalById(body: models.BodyModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, callback: ServiceCallback<models.CustomerPaymentJournal>): void;
  patchCustomerPaymentJournalById(body: models.BodyModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPaymentJournal>): void;


  /**
   * @summary Returns a list of customerPayments
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCustomerPaymentsForCustomerPaymentJournalOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerPaymentsForCustomerPaymentJournalWithHttpOperationResponse(companyId: string, customerPaymentJournalId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCustomerPaymentsForCustomerPaymentJournalOKResponse>>;

  /**
   * @summary Returns a list of customerPayments
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCustomerPaymentsForCustomerPaymentJournalOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCustomerPaymentsForCustomerPaymentJournalOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      GetCustomerPaymentsForCustomerPaymentJournalOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerPaymentsForCustomerPaymentJournal(companyId: string, customerPaymentJournalId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCustomerPaymentsForCustomerPaymentJournalOKResponse>;
  getCustomerPaymentsForCustomerPaymentJournal(companyId: string, customerPaymentJournalId: string, callback: ServiceCallback<models.GetCustomerPaymentsForCustomerPaymentJournalOKResponse>): void;
  getCustomerPaymentsForCustomerPaymentJournal(companyId: string, customerPaymentJournalId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCustomerPaymentsForCustomerPaymentJournalOKResponse>): void;


  /**
   * @summary Creates a customerPayment in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPayment entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the customerPayment entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * customerPayment entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * customerPayment entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * customerPayment entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * customerPayment entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the customerPayment entity
   *
   * @param {number} [body.amount] The amount property for the customerPayment
   * entity
   *
   * @param {uuid} [body.appliesToInvoiceId] The appliesToInvoiceId property for
   * the customerPayment entity
   *
   * @param {string} [body.appliesToInvoiceNumber] The appliesToInvoiceNumber
   * property for the customerPayment entity
   *
   * @param {string} [body.description] The description property for the
   * customerPayment entity
   *
   * @param {string} [body.comment] The comment property for the customerPayment
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPayment entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPayment>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postCustomerPaymentForCustomerPaymentJournalWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPayment>>;

  /**
   * @summary Creates a customerPayment in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPayment entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the customerPayment entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * customerPayment entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * customerPayment entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * customerPayment entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * customerPayment entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the customerPayment entity
   *
   * @param {number} [body.amount] The amount property for the customerPayment
   * entity
   *
   * @param {uuid} [body.appliesToInvoiceId] The appliesToInvoiceId property for
   * the customerPayment entity
   *
   * @param {string} [body.appliesToInvoiceNumber] The appliesToInvoiceNumber
   * property for the customerPayment entity
   *
   * @param {string} [body.description] The description property for the
   * customerPayment entity
   *
   * @param {string} [body.comment] The comment property for the customerPayment
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPayment entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPayment} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPayment} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPayment} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postCustomerPaymentForCustomerPaymentJournal(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPayment>;
  postCustomerPaymentForCustomerPaymentJournal(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, callback: ServiceCallback<models.CustomerPayment>): void;
  postCustomerPaymentForCustomerPaymentJournal(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPayment>): void;


  /**
   * @summary Retrieve the properties and relationships of an customerPayment
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPayment>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerPaymentForCustomerPaymentJournalByIdWithHttpOperationResponse(companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPayment>>;

  /**
   * @summary Retrieve the properties and relationships of an customerPayment
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPayment} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPayment} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPayment} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerPaymentForCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPayment>;
  getCustomerPaymentForCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, customerPaymentId: string, callback: ServiceCallback<models.CustomerPayment>): void;
  getCustomerPaymentForCustomerPaymentJournalById(companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPayment>): void;


  /**
   * @summary Delete an customerPayment in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteCustomerPaymentForCustomerPaymentJournalByIdByIdWithHttpOperationResponse(companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an customerPayment in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteCustomerPaymentForCustomerPaymentJournalByIdById(companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteCustomerPaymentForCustomerPaymentJournalByIdById(companyId: string, customerPaymentJournalId: string, customerPaymentId: string, callback: ServiceCallback<void>): void;
  deleteCustomerPaymentForCustomerPaymentJournalByIdById(companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified customerPayment
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPayment entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the customerPayment entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * customerPayment entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * customerPayment entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * customerPayment entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * customerPayment entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the customerPayment entity
   *
   * @param {number} [body.amount] The amount property for the customerPayment
   * entity
   *
   * @param {uuid} [body.appliesToInvoiceId] The appliesToInvoiceId property for
   * the customerPayment entity
   *
   * @param {string} [body.appliesToInvoiceNumber] The appliesToInvoiceNumber
   * property for the customerPayment entity
   *
   * @param {string} [body.description] The description property for the
   * customerPayment entity
   *
   * @param {string} [body.comment] The comment property for the customerPayment
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPayment entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPayment>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchCustomerPaymentForCustomerPaymentJournalByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPayment>>;

  /**
   * @summary Lets the user patch the specified customerPayment
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPayment entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the customerPayment entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * customerPayment entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * customerPayment entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * customerPayment entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * customerPayment entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the customerPayment entity
   *
   * @param {number} [body.amount] The amount property for the customerPayment
   * entity
   *
   * @param {uuid} [body.appliesToInvoiceId] The appliesToInvoiceId property for
   * the customerPayment entity
   *
   * @param {string} [body.appliesToInvoiceNumber] The appliesToInvoiceNumber
   * property for the customerPayment entity
   *
   * @param {string} [body.description] The description property for the
   * customerPayment entity
   *
   * @param {string} [body.comment] The comment property for the customerPayment
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPayment entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentJournalId id for customerPaymentJournal
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPayment} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPayment} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPayment} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchCustomerPaymentForCustomerPaymentJournalByIdById(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPayment>;
  patchCustomerPaymentForCustomerPaymentJournalByIdById(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, customerPaymentId: string, callback: ServiceCallback<models.CustomerPayment>): void;
  patchCustomerPaymentForCustomerPaymentJournalByIdById(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentJournalId: string, customerPaymentId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPayment>): void;


  /**
   * @summary Returns a list of customerPayments
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCustomerPaymentsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerPaymentsWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCustomerPaymentsOKResponse>>;

  /**
   * @summary Returns a list of customerPayments
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCustomerPaymentsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCustomerPaymentsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCustomerPaymentsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerPayments(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCustomerPaymentsOKResponse>;
  getCustomerPayments(companyId: string, callback: ServiceCallback<models.GetCustomerPaymentsOKResponse>): void;
  getCustomerPayments(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCustomerPaymentsOKResponse>): void;


  /**
   * @summary Creates a customerPayment in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPayment entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the customerPayment entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * customerPayment entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * customerPayment entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * customerPayment entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * customerPayment entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the customerPayment entity
   *
   * @param {number} [body.amount] The amount property for the customerPayment
   * entity
   *
   * @param {uuid} [body.appliesToInvoiceId] The appliesToInvoiceId property for
   * the customerPayment entity
   *
   * @param {string} [body.appliesToInvoiceNumber] The appliesToInvoiceNumber
   * property for the customerPayment entity
   *
   * @param {string} [body.description] The description property for the
   * customerPayment entity
   *
   * @param {string} [body.comment] The comment property for the customerPayment
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPayment entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPayment>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postCustomerPaymentWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPayment>>;

  /**
   * @summary Creates a customerPayment in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPayment entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the customerPayment entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * customerPayment entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * customerPayment entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * customerPayment entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * customerPayment entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the customerPayment entity
   *
   * @param {number} [body.amount] The amount property for the customerPayment
   * entity
   *
   * @param {uuid} [body.appliesToInvoiceId] The appliesToInvoiceId property for
   * the customerPayment entity
   *
   * @param {string} [body.appliesToInvoiceNumber] The appliesToInvoiceNumber
   * property for the customerPayment entity
   *
   * @param {string} [body.description] The description property for the
   * customerPayment entity
   *
   * @param {string} [body.comment] The comment property for the customerPayment
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPayment entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPayment} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPayment} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPayment} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postCustomerPayment(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPayment>;
  postCustomerPayment(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.CustomerPayment>): void;
  postCustomerPayment(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPayment>): void;


  /**
   * @summary Retrieve the properties and relationships of an customerPayment
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPayment>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerPaymentByIdWithHttpOperationResponse(companyId: string, customerPaymentId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPayment>>;

  /**
   * @summary Retrieve the properties and relationships of an customerPayment
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPayment} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPayment} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPayment} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerPaymentById(companyId: string, customerPaymentId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPayment>;
  getCustomerPaymentById(companyId: string, customerPaymentId: string, callback: ServiceCallback<models.CustomerPayment>): void;
  getCustomerPaymentById(companyId: string, customerPaymentId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPayment>): void;


  /**
   * @summary Delete an customerPayment in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteCustomerPaymentByIdWithHttpOperationResponse(companyId: string, customerPaymentId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an customerPayment in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteCustomerPaymentById(companyId: string, customerPaymentId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteCustomerPaymentById(companyId: string, customerPaymentId: string, callback: ServiceCallback<void>): void;
  deleteCustomerPaymentById(companyId: string, customerPaymentId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified customerPayment
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPayment entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the customerPayment entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * customerPayment entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * customerPayment entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * customerPayment entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * customerPayment entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the customerPayment entity
   *
   * @param {number} [body.amount] The amount property for the customerPayment
   * entity
   *
   * @param {uuid} [body.appliesToInvoiceId] The appliesToInvoiceId property for
   * the customerPayment entity
   *
   * @param {string} [body.appliesToInvoiceNumber] The appliesToInvoiceNumber
   * property for the customerPayment entity
   *
   * @param {string} [body.description] The description property for the
   * customerPayment entity
   *
   * @param {string} [body.comment] The comment property for the customerPayment
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPayment entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerPayment>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchCustomerPaymentByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerPayment>>;

  /**
   * @summary Lets the user patch the specified customerPayment
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the customerPayment entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the customerPayment entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * customerPayment entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * customerPayment entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * customerPayment entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * customerPayment entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * customerPayment entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the customerPayment entity
   *
   * @param {number} [body.amount] The amount property for the customerPayment
   * entity
   *
   * @param {uuid} [body.appliesToInvoiceId] The appliesToInvoiceId property for
   * the customerPayment entity
   *
   * @param {string} [body.appliesToInvoiceNumber] The appliesToInvoiceNumber
   * property for the customerPayment entity
   *
   * @param {string} [body.description] The description property for the
   * customerPayment entity
   *
   * @param {string} [body.comment] The comment property for the customerPayment
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the customerPayment entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerPaymentId id for customerPayment
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerPayment} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerPayment} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerPayment} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchCustomerPaymentById(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerPayment>;
  patchCustomerPaymentById(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentId: string, callback: ServiceCallback<models.CustomerPayment>): void;
  patchCustomerPaymentById(body: models.BodyModelModelModelModelModelModelModelModelModel, companyId: string, customerPaymentId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerPayment>): void;


  /**
   * @summary Returns a list of accounts
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetAccountsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAccountsWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetAccountsOKResponse>>;

  /**
   * @summary Returns a list of accounts
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetAccountsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetAccountsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetAccountsOKResponse} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAccounts(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetAccountsOKResponse>;
  getAccounts(companyId: string, callback: ServiceCallback<models.GetAccountsOKResponse>): void;
  getAccounts(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetAccountsOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an account object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} accountId id for account
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Account>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAccountByIdWithHttpOperationResponse(companyId: string, accountId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Account>>;

  /**
   * @summary Retrieve the properties and relationships of an account object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} accountId id for account
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Account} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Account} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Account} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAccountById(companyId: string, accountId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Account>;
  getAccountById(companyId: string, accountId: string, callback: ServiceCallback<models.Account>): void;
  getAccountById(companyId: string, accountId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Account>): void;


  /**
   * @summary Returns a list of taxGroups
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetTaxGroupsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTaxGroupsWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetTaxGroupsOKResponse>>;

  /**
   * @summary Returns a list of taxGroups
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetTaxGroupsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetTaxGroupsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetTaxGroupsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTaxGroups(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetTaxGroupsOKResponse>;
  getTaxGroups(companyId: string, callback: ServiceCallback<models.GetTaxGroupsOKResponse>): void;
  getTaxGroups(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetTaxGroupsOKResponse>): void;


  /**
   * @summary Creates a taxGroup in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the taxGroup entity
   *
   * @param {string} [body.code] The code property for the taxGroup entity
   *
   * @param {string} [body.displayName] The displayName property for the taxGroup
   * entity
   *
   * @param {string} [body.taxType] The taxType property for the taxGroup entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the taxGroup entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TaxGroup>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postTaxGroupWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TaxGroup>>;

  /**
   * @summary Creates a taxGroup in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the taxGroup entity
   *
   * @param {string} [body.code] The code property for the taxGroup entity
   *
   * @param {string} [body.displayName] The displayName property for the taxGroup
   * entity
   *
   * @param {string} [body.taxType] The taxType property for the taxGroup entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the taxGroup entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TaxGroup} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TaxGroup} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TaxGroup} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postTaxGroup(body: models.BodyModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TaxGroup>;
  postTaxGroup(body: models.BodyModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.TaxGroup>): void;
  postTaxGroup(body: models.BodyModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TaxGroup>): void;


  /**
   * @summary Retrieve the properties and relationships of an taxGroup object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxGroupId id for taxGroup
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TaxGroup>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTaxGroupByIdWithHttpOperationResponse(companyId: string, taxGroupId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TaxGroup>>;

  /**
   * @summary Retrieve the properties and relationships of an taxGroup object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxGroupId id for taxGroup
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TaxGroup} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TaxGroup} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TaxGroup} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTaxGroupById(companyId: string, taxGroupId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.TaxGroup>;
  getTaxGroupById(companyId: string, taxGroupId: string, callback: ServiceCallback<models.TaxGroup>): void;
  getTaxGroupById(companyId: string, taxGroupId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TaxGroup>): void;


  /**
   * @summary Delete an taxGroup in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxGroupId id for taxGroup
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteTaxGroupByIdWithHttpOperationResponse(companyId: string, taxGroupId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an taxGroup in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxGroupId id for taxGroup
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteTaxGroupById(companyId: string, taxGroupId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteTaxGroupById(companyId: string, taxGroupId: string, callback: ServiceCallback<void>): void;
  deleteTaxGroupById(companyId: string, taxGroupId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified taxGroup
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the taxGroup entity
   *
   * @param {string} [body.code] The code property for the taxGroup entity
   *
   * @param {string} [body.displayName] The displayName property for the taxGroup
   * entity
   *
   * @param {string} [body.taxType] The taxType property for the taxGroup entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the taxGroup entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxGroupId id for taxGroup
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TaxGroup>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchTaxGroupByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModel, companyId: string, taxGroupId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TaxGroup>>;

  /**
   * @summary Lets the user patch the specified taxGroup
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the taxGroup entity
   *
   * @param {string} [body.code] The code property for the taxGroup entity
   *
   * @param {string} [body.displayName] The displayName property for the taxGroup
   * entity
   *
   * @param {string} [body.taxType] The taxType property for the taxGroup entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the taxGroup entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxGroupId id for taxGroup
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TaxGroup} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TaxGroup} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TaxGroup} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchTaxGroupById(body: models.BodyModelModelModelModelModelModelModelModelModelModel, companyId: string, taxGroupId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TaxGroup>;
  patchTaxGroupById(body: models.BodyModelModelModelModelModelModelModelModelModelModel, companyId: string, taxGroupId: string, callback: ServiceCallback<models.TaxGroup>): void;
  patchTaxGroupById(body: models.BodyModelModelModelModelModelModelModelModelModelModel, companyId: string, taxGroupId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TaxGroup>): void;


  /**
   * @summary Returns a list of journals
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetJournalsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getJournalsWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetJournalsOKResponse>>;

  /**
   * @summary Returns a list of journals
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetJournalsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetJournalsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetJournalsOKResponse} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getJournals(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetJournalsOKResponse>;
  getJournals(companyId: string, callback: ServiceCallback<models.GetJournalsOKResponse>): void;
  getJournals(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetJournalsOKResponse>): void;


  /**
   * @summary Creates a journal in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journal entity
   *
   * @param {string} [body.code] The code property for the journal entity
   *
   * @param {string} [body.displayName] The displayName property for the journal
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journal entity
   *
   * @param {uuid} [body.balancingAccountId] The balancingAccountId property for
   * the journal entity
   *
   * @param {string} [body.balancingAccountNumber] The balancingAccountNumber
   * property for the journal entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Journal>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postJournalWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Journal>>;

  /**
   * @summary Creates a journal in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journal entity
   *
   * @param {string} [body.code] The code property for the journal entity
   *
   * @param {string} [body.displayName] The displayName property for the journal
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journal entity
   *
   * @param {uuid} [body.balancingAccountId] The balancingAccountId property for
   * the journal entity
   *
   * @param {string} [body.balancingAccountNumber] The balancingAccountNumber
   * property for the journal entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Journal} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Journal} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Journal} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Journal>;
  postJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.Journal>): void;
  postJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Journal>): void;


  /**
   * @summary Retrieve the properties and relationships of an journal object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Journal>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getJournalByIdWithHttpOperationResponse(companyId: string, journalId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Journal>>;

  /**
   * @summary Retrieve the properties and relationships of an journal object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Journal} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Journal} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Journal} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getJournalById(companyId: string, journalId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Journal>;
  getJournalById(companyId: string, journalId: string, callback: ServiceCallback<models.Journal>): void;
  getJournalById(companyId: string, journalId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Journal>): void;


  /**
   * @summary Delete an journal in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteJournalByIdWithHttpOperationResponse(companyId: string, journalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an journal in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteJournalById(companyId: string, journalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteJournalById(companyId: string, journalId: string, callback: ServiceCallback<void>): void;
  deleteJournalById(companyId: string, journalId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified journal
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journal entity
   *
   * @param {string} [body.code] The code property for the journal entity
   *
   * @param {string} [body.displayName] The displayName property for the journal
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journal entity
   *
   * @param {uuid} [body.balancingAccountId] The balancingAccountId property for
   * the journal entity
   *
   * @param {string} [body.balancingAccountNumber] The balancingAccountNumber
   * property for the journal entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Journal>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchJournalByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Journal>>;

  /**
   * @summary Lets the user patch the specified journal
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journal entity
   *
   * @param {string} [body.code] The code property for the journal entity
   *
   * @param {string} [body.displayName] The displayName property for the journal
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journal entity
   *
   * @param {uuid} [body.balancingAccountId] The balancingAccountId property for
   * the journal entity
   *
   * @param {string} [body.balancingAccountNumber] The balancingAccountNumber
   * property for the journal entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Journal} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Journal} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Journal} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchJournalById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Journal>;
  patchJournalById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, callback: ServiceCallback<models.Journal>): void;
  patchJournalById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Journal>): void;


  /**
   * @summary Performs the post action for journals entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postActionJournalsWithHttpOperationResponse(companyId: string, journalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the post action for journals entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postActionJournals(companyId: string, journalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  postActionJournals(companyId: string, journalId: string, callback: ServiceCallback<void>): void;
  postActionJournals(companyId: string, journalId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Returns a list of journalLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetJournalLinesForJournalOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getJournalLinesForJournalWithHttpOperationResponse(companyId: string, journalId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetJournalLinesForJournalOKResponse>>;

  /**
   * @summary Returns a list of journalLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetJournalLinesForJournalOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetJournalLinesForJournalOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetJournalLinesForJournalOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getJournalLinesForJournal(companyId: string, journalId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetJournalLinesForJournalOKResponse>;
  getJournalLinesForJournal(companyId: string, journalId: string, callback: ServiceCallback<models.GetJournalLinesForJournalOKResponse>): void;
  getJournalLinesForJournal(companyId: string, journalId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetJournalLinesForJournalOKResponse>): void;


  /**
   * @summary Creates a journalLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journalLine entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the journalLine entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * journalLine entity
   *
   * @param {uuid} [body.accountId] The accountId property for the journalLine
   * entity
   *
   * @param {string} [body.accountNumber] The accountNumber property for the
   * journalLine entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * journalLine entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * journalLine entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the journalLine entity
   *
   * @param {number} [body.amount] The amount property for the journalLine entity
   *
   * @param {string} [body.description] The description property for the
   * journalLine entity
   *
   * @param {string} [body.comment] The comment property for the journalLine
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journalLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<JournalLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postJournalLineForJournalWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JournalLine>>;

  /**
   * @summary Creates a journalLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journalLine entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the journalLine entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * journalLine entity
   *
   * @param {uuid} [body.accountId] The accountId property for the journalLine
   * entity
   *
   * @param {string} [body.accountNumber] The accountNumber property for the
   * journalLine entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * journalLine entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * journalLine entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the journalLine entity
   *
   * @param {number} [body.amount] The amount property for the journalLine entity
   *
   * @param {string} [body.description] The description property for the
   * journalLine entity
   *
   * @param {string} [body.comment] The comment property for the journalLine
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journalLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {JournalLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {JournalLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link JournalLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postJournalLineForJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JournalLine>;
  postJournalLineForJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, callback: ServiceCallback<models.JournalLine>): void;
  postJournalLineForJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JournalLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an journalLine object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<JournalLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getJournalLineForJournalByIdWithHttpOperationResponse(companyId: string, journalId: string, journalLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JournalLine>>;

  /**
   * @summary Retrieve the properties and relationships of an journalLine object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {JournalLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {JournalLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link JournalLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getJournalLineForJournalById(companyId: string, journalId: string, journalLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.JournalLine>;
  getJournalLineForJournalById(companyId: string, journalId: string, journalLineId: string, callback: ServiceCallback<models.JournalLine>): void;
  getJournalLineForJournalById(companyId: string, journalId: string, journalLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JournalLine>): void;


  /**
   * @summary Delete an journalLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteJournalLineForJournalByIdByIdWithHttpOperationResponse(companyId: string, journalId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an journalLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteJournalLineForJournalByIdById(companyId: string, journalId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteJournalLineForJournalByIdById(companyId: string, journalId: string, journalLineId: string, callback: ServiceCallback<void>): void;
  deleteJournalLineForJournalByIdById(companyId: string, journalId: string, journalLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified journalLine
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journalLine entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the journalLine entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * journalLine entity
   *
   * @param {uuid} [body.accountId] The accountId property for the journalLine
   * entity
   *
   * @param {string} [body.accountNumber] The accountNumber property for the
   * journalLine entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * journalLine entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * journalLine entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the journalLine entity
   *
   * @param {number} [body.amount] The amount property for the journalLine entity
   *
   * @param {string} [body.description] The description property for the
   * journalLine entity
   *
   * @param {string} [body.comment] The comment property for the journalLine
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journalLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<JournalLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchJournalLineForJournalByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JournalLine>>;

  /**
   * @summary Lets the user patch the specified journalLine
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journalLine entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the journalLine entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * journalLine entity
   *
   * @param {uuid} [body.accountId] The accountId property for the journalLine
   * entity
   *
   * @param {string} [body.accountNumber] The accountNumber property for the
   * journalLine entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * journalLine entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * journalLine entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the journalLine entity
   *
   * @param {number} [body.amount] The amount property for the journalLine entity
   *
   * @param {string} [body.description] The description property for the
   * journalLine entity
   *
   * @param {string} [body.comment] The comment property for the journalLine
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journalLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {JournalLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {JournalLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link JournalLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchJournalLineForJournalByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JournalLine>;
  patchJournalLineForJournalByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, callback: ServiceCallback<models.JournalLine>): void;
  patchJournalLineForJournalByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JournalLine>): void;


  /**
   * @summary Returns a list of attachments
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetAttachmentsForJournalLineForJournalOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAttachmentsForJournalLineForJournalWithHttpOperationResponse(companyId: string, journalId: string, journalLineId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetAttachmentsForJournalLineForJournalOKResponse>>;

  /**
   * @summary Returns a list of attachments
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetAttachmentsForJournalLineForJournalOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetAttachmentsForJournalLineForJournalOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      GetAttachmentsForJournalLineForJournalOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAttachmentsForJournalLineForJournal(companyId: string, journalId: string, journalLineId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetAttachmentsForJournalLineForJournalOKResponse>;
  getAttachmentsForJournalLineForJournal(companyId: string, journalId: string, journalLineId: string, callback: ServiceCallback<models.GetAttachmentsForJournalLineForJournalOKResponse>): void;
  getAttachmentsForJournalLineForJournal(companyId: string, journalId: string, journalLineId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetAttachmentsForJournalLineForJournalOKResponse>): void;


  /**
   * @summary Creates a attachments in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postAttachmentsForJournalLineForJournalWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Creates a attachments in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postAttachmentsForJournalLineForJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  postAttachmentsForJournalLineForJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, callback: ServiceCallback<models.Attachments>): void;
  postAttachmentsForJournalLineForJournal(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Retrieve the properties and relationships of an attachments object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAttachmentsForJournalLineForJournalByIdByParentIdWithHttpOperationResponse(companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Retrieve the properties and relationships of an attachments object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAttachmentsForJournalLineForJournalByIdByParentId(companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  getAttachmentsForJournalLineForJournalByIdByParentId(companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<models.Attachments>): void;
  getAttachmentsForJournalLineForJournalByIdByParentId(companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Delete an attachments in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteAttachmentsForJournalLineForJournalByIdByParentIdByIdByIdWithHttpOperationResponse(companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an attachments in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteAttachmentsForJournalLineForJournalByIdByParentIdByIdById(companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteAttachmentsForJournalLineForJournalByIdByParentIdByIdById(companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<void>): void;
  deleteAttachmentsForJournalLineForJournalByIdByParentIdByIdById(companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified attachments
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchAttachmentsForJournalLineForJournalByIdByParentIdByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Lets the user patch the specified attachments
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalId id for journal
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchAttachmentsForJournalLineForJournalByIdByParentIdByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  patchAttachmentsForJournalLineForJournalByIdByParentIdByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<models.Attachments>): void;
  patchAttachmentsForJournalLineForJournalByIdByParentIdByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Returns a list of journalLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetJournalLinesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getJournalLinesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetJournalLinesOKResponse>>;

  /**
   * @summary Returns a list of journalLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetJournalLinesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetJournalLinesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetJournalLinesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getJournalLines(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetJournalLinesOKResponse>;
  getJournalLines(companyId: string, callback: ServiceCallback<models.GetJournalLinesOKResponse>): void;
  getJournalLines(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetJournalLinesOKResponse>): void;


  /**
   * @summary Creates a journalLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journalLine entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the journalLine entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * journalLine entity
   *
   * @param {uuid} [body.accountId] The accountId property for the journalLine
   * entity
   *
   * @param {string} [body.accountNumber] The accountNumber property for the
   * journalLine entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * journalLine entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * journalLine entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the journalLine entity
   *
   * @param {number} [body.amount] The amount property for the journalLine entity
   *
   * @param {string} [body.description] The description property for the
   * journalLine entity
   *
   * @param {string} [body.comment] The comment property for the journalLine
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journalLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<JournalLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postJournalLineWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JournalLine>>;

  /**
   * @summary Creates a journalLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journalLine entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the journalLine entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * journalLine entity
   *
   * @param {uuid} [body.accountId] The accountId property for the journalLine
   * entity
   *
   * @param {string} [body.accountNumber] The accountNumber property for the
   * journalLine entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * journalLine entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * journalLine entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the journalLine entity
   *
   * @param {number} [body.amount] The amount property for the journalLine entity
   *
   * @param {string} [body.description] The description property for the
   * journalLine entity
   *
   * @param {string} [body.comment] The comment property for the journalLine
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journalLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {JournalLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {JournalLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link JournalLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postJournalLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JournalLine>;
  postJournalLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.JournalLine>): void;
  postJournalLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JournalLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an journalLine object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<JournalLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getJournalLineByIdWithHttpOperationResponse(companyId: string, journalLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JournalLine>>;

  /**
   * @summary Retrieve the properties and relationships of an journalLine object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {JournalLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {JournalLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link JournalLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getJournalLineById(companyId: string, journalLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.JournalLine>;
  getJournalLineById(companyId: string, journalLineId: string, callback: ServiceCallback<models.JournalLine>): void;
  getJournalLineById(companyId: string, journalLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JournalLine>): void;


  /**
   * @summary Delete an journalLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteJournalLineByIdWithHttpOperationResponse(companyId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an journalLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteJournalLineById(companyId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteJournalLineById(companyId: string, journalLineId: string, callback: ServiceCallback<void>): void;
  deleteJournalLineById(companyId: string, journalLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified journalLine
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journalLine entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the journalLine entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * journalLine entity
   *
   * @param {uuid} [body.accountId] The accountId property for the journalLine
   * entity
   *
   * @param {string} [body.accountNumber] The accountNumber property for the
   * journalLine entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * journalLine entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * journalLine entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the journalLine entity
   *
   * @param {number} [body.amount] The amount property for the journalLine entity
   *
   * @param {string} [body.description] The description property for the
   * journalLine entity
   *
   * @param {string} [body.comment] The comment property for the journalLine
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journalLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<JournalLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchJournalLineByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JournalLine>>;

  /**
   * @summary Lets the user patch the specified journalLine
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the journalLine entity
   *
   * @param {string} [body.journalDisplayName] The journalDisplayName property
   * for the journalLine entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * journalLine entity
   *
   * @param {uuid} [body.accountId] The accountId property for the journalLine
   * entity
   *
   * @param {string} [body.accountNumber] The accountNumber property for the
   * journalLine entity
   *
   * @param {date} [body.postingDate] The postingDate property for the
   * journalLine entity
   *
   * @param {string} [body.documentNumber] The documentNumber property for the
   * journalLine entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the journalLine entity
   *
   * @param {number} [body.amount] The amount property for the journalLine entity
   *
   * @param {string} [body.description] The description property for the
   * journalLine entity
   *
   * @param {string} [body.comment] The comment property for the journalLine
   * entity
   *
   * @param {array} [body.dimensions]
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the journalLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {JournalLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {JournalLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link JournalLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchJournalLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JournalLine>;
  patchJournalLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, callback: ServiceCallback<models.JournalLine>): void;
  patchJournalLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JournalLine>): void;


  /**
   * @summary Returns a list of attachments
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetAttachmentsForJournalLineOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAttachmentsForJournalLineWithHttpOperationResponse(companyId: string, journalLineId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetAttachmentsForJournalLineOKResponse>>;

  /**
   * @summary Returns a list of attachments
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetAttachmentsForJournalLineOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetAttachmentsForJournalLineOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetAttachmentsForJournalLineOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAttachmentsForJournalLine(companyId: string, journalLineId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetAttachmentsForJournalLineOKResponse>;
  getAttachmentsForJournalLine(companyId: string, journalLineId: string, callback: ServiceCallback<models.GetAttachmentsForJournalLineOKResponse>): void;
  getAttachmentsForJournalLine(companyId: string, journalLineId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetAttachmentsForJournalLineOKResponse>): void;


  /**
   * @summary Creates a attachments in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postAttachmentsForJournalLineWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Creates a attachments in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postAttachmentsForJournalLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  postAttachmentsForJournalLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, callback: ServiceCallback<models.Attachments>): void;
  postAttachmentsForJournalLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Retrieve the properties and relationships of an attachments object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAttachmentsForJournalLineByIdByParentIdWithHttpOperationResponse(companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Retrieve the properties and relationships of an attachments object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAttachmentsForJournalLineByIdByParentId(companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  getAttachmentsForJournalLineByIdByParentId(companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<models.Attachments>): void;
  getAttachmentsForJournalLineByIdByParentId(companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Delete an attachments in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteAttachmentsForJournalLineByIdByParentIdByIdWithHttpOperationResponse(companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an attachments in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteAttachmentsForJournalLineByIdByParentIdById(companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteAttachmentsForJournalLineByIdByParentIdById(companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<void>): void;
  deleteAttachmentsForJournalLineByIdByParentIdById(companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified attachments
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchAttachmentsForJournalLineByIdByParentIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Lets the user patch the specified attachments
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} journalLineId id for journalLine
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchAttachmentsForJournalLineByIdByParentIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  patchAttachmentsForJournalLineByIdByParentIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<models.Attachments>): void;
  patchAttachmentsForJournalLineByIdByParentIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, journalLineId: string, attachmentsParentId: string, attachmentsId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Returns a list of attachments
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetAttachmentsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAttachmentsWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetAttachmentsOKResponse>>;

  /**
   * @summary Returns a list of attachments
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetAttachmentsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetAttachmentsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetAttachmentsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAttachments(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetAttachmentsOKResponse>;
  getAttachments(companyId: string, callback: ServiceCallback<models.GetAttachmentsOKResponse>): void;
  getAttachments(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetAttachmentsOKResponse>): void;


  /**
   * @summary Creates a attachments in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postAttachmentsWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Creates a attachments in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postAttachments(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  postAttachments(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.Attachments>): void;
  postAttachments(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Retrieve the properties and relationships of an attachments object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAttachmentsByIdByParentIdWithHttpOperationResponse(companyId: string, attachmentsParentId: string, attachmentsId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Retrieve the properties and relationships of an attachments object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAttachmentsByIdByParentId(companyId: string, attachmentsParentId: string, attachmentsId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  getAttachmentsByIdByParentId(companyId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<models.Attachments>): void;
  getAttachmentsByIdByParentId(companyId: string, attachmentsParentId: string, attachmentsId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Delete an attachments in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteAttachmentsByIdByParentIdWithHttpOperationResponse(companyId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an attachments in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteAttachmentsByIdByParentId(companyId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteAttachmentsByIdByParentId(companyId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<void>): void;
  deleteAttachmentsByIdByParentId(companyId: string, attachmentsParentId: string, attachmentsId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified attachments
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Attachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchAttachmentsByIdByParentIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Attachments>>;

  /**
   * @summary Lets the user patch the specified attachments
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the attachments
   * entity
   *
   * @param {uuid} [body.id] The id property for the attachments entity
   *
   * @param {string} [body.fileName] The fileName property for the attachments
   * entity
   *
   * @param {number} [body.byteSize] The byteSize property for the attachments
   * entity
   *
   * @param {string} [body.content] The content property for the attachments
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the attachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} attachmentsParentId parentId for attachments
   *
   * @param {uuid} attachmentsId id for attachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Attachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Attachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Attachments} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchAttachmentsByIdByParentId(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, attachmentsParentId: string, attachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Attachments>;
  patchAttachmentsByIdByParentId(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, attachmentsParentId: string, attachmentsId: string, callback: ServiceCallback<models.Attachments>): void;
  patchAttachmentsByIdByParentId(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, attachmentsParentId: string, attachmentsId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Attachments>): void;


  /**
   * @summary Returns a list of employees
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetEmployeesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getEmployeesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetEmployeesOKResponse>>;

  /**
   * @summary Returns a list of employees
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetEmployeesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetEmployeesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetEmployeesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getEmployees(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetEmployeesOKResponse>;
  getEmployees(companyId: string, callback: ServiceCallback<models.GetEmployeesOKResponse>): void;
  getEmployees(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetEmployeesOKResponse>): void;


  /**
   * @summary Creates a employee in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the employee entity
   *
   * @param {string} [body.number] The number property for the employee entity
   *
   * @param {string} [body.displayName] The displayName property for the employee
   * entity
   *
   * @param {string} [body.givenName] The givenName property for the employee
   * entity
   *
   * @param {string} [body.middleName] The middleName property for the employee
   * entity
   *
   * @param {string} [body.surname] The surname property for the employee entity
   *
   * @param {string} [body.jobTitle] The jobTitle property for the employee
   * entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the employee
   * entity
   *
   * @param {string} [body.mobilePhone] The mobilePhone property for the employee
   * entity
   *
   * @param {string} [body.email] The email property for the employee entity
   *
   * @param {string} [body.personalEmail] The personalEmail property for the
   * employee entity
   *
   * @param {date} [body.employmentDate] The employmentDate property for the
   * employee entity
   *
   * @param {date} [body.terminationDate] The terminationDate property for the
   * employee entity
   *
   * @param {string} [body.status] The status property for the employee entity
   *
   * @param {date} [body.birthDate] The birthDate property for the employee
   * entity
   *
   * @param {string} [body.statisticsGroupCode] The statisticsGroupCode property
   * for the employee entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the employee entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Employee>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postEmployeeWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Employee>>;

  /**
   * @summary Creates a employee in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the employee entity
   *
   * @param {string} [body.number] The number property for the employee entity
   *
   * @param {string} [body.displayName] The displayName property for the employee
   * entity
   *
   * @param {string} [body.givenName] The givenName property for the employee
   * entity
   *
   * @param {string} [body.middleName] The middleName property for the employee
   * entity
   *
   * @param {string} [body.surname] The surname property for the employee entity
   *
   * @param {string} [body.jobTitle] The jobTitle property for the employee
   * entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the employee
   * entity
   *
   * @param {string} [body.mobilePhone] The mobilePhone property for the employee
   * entity
   *
   * @param {string} [body.email] The email property for the employee entity
   *
   * @param {string} [body.personalEmail] The personalEmail property for the
   * employee entity
   *
   * @param {date} [body.employmentDate] The employmentDate property for the
   * employee entity
   *
   * @param {date} [body.terminationDate] The terminationDate property for the
   * employee entity
   *
   * @param {string} [body.status] The status property for the employee entity
   *
   * @param {date} [body.birthDate] The birthDate property for the employee
   * entity
   *
   * @param {string} [body.statisticsGroupCode] The statisticsGroupCode property
   * for the employee entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the employee entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Employee} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Employee} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Employee} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postEmployee(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Employee>;
  postEmployee(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.Employee>): void;
  postEmployee(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Employee>): void;


  /**
   * @summary Retrieve the properties and relationships of an employee object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Employee>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getEmployeeByIdWithHttpOperationResponse(companyId: string, employeeId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Employee>>;

  /**
   * @summary Retrieve the properties and relationships of an employee object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Employee} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Employee} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Employee} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getEmployeeById(companyId: string, employeeId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Employee>;
  getEmployeeById(companyId: string, employeeId: string, callback: ServiceCallback<models.Employee>): void;
  getEmployeeById(companyId: string, employeeId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Employee>): void;


  /**
   * @summary Delete an employee in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteEmployeeByIdWithHttpOperationResponse(companyId: string, employeeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an employee in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteEmployeeById(companyId: string, employeeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteEmployeeById(companyId: string, employeeId: string, callback: ServiceCallback<void>): void;
  deleteEmployeeById(companyId: string, employeeId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified employee
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the employee entity
   *
   * @param {string} [body.number] The number property for the employee entity
   *
   * @param {string} [body.displayName] The displayName property for the employee
   * entity
   *
   * @param {string} [body.givenName] The givenName property for the employee
   * entity
   *
   * @param {string} [body.middleName] The middleName property for the employee
   * entity
   *
   * @param {string} [body.surname] The surname property for the employee entity
   *
   * @param {string} [body.jobTitle] The jobTitle property for the employee
   * entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the employee
   * entity
   *
   * @param {string} [body.mobilePhone] The mobilePhone property for the employee
   * entity
   *
   * @param {string} [body.email] The email property for the employee entity
   *
   * @param {string} [body.personalEmail] The personalEmail property for the
   * employee entity
   *
   * @param {date} [body.employmentDate] The employmentDate property for the
   * employee entity
   *
   * @param {date} [body.terminationDate] The terminationDate property for the
   * employee entity
   *
   * @param {string} [body.status] The status property for the employee entity
   *
   * @param {date} [body.birthDate] The birthDate property for the employee
   * entity
   *
   * @param {string} [body.statisticsGroupCode] The statisticsGroupCode property
   * for the employee entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the employee entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Employee>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchEmployeeByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Employee>>;

  /**
   * @summary Lets the user patch the specified employee
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the employee entity
   *
   * @param {string} [body.number] The number property for the employee entity
   *
   * @param {string} [body.displayName] The displayName property for the employee
   * entity
   *
   * @param {string} [body.givenName] The givenName property for the employee
   * entity
   *
   * @param {string} [body.middleName] The middleName property for the employee
   * entity
   *
   * @param {string} [body.surname] The surname property for the employee entity
   *
   * @param {string} [body.jobTitle] The jobTitle property for the employee
   * entity
   *
   * @param {object} [body.address]
   *
   * @param {string} [body.address.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.address.postalCode] The postalCode property for the
   * postaladdresstype entity
   *
   * @param {array} [body.address.customerFinancialDetails]
   *
   * @param {array} [body.address.picture]
   *
   * @param {array} [body.address.defaultDimensions]
   *
   * @param {object} [body.address.currency]
   *
   * @param {uuid} [body.address.currency.id] The id property for the currency
   * entity
   *
   * @param {string} [body.address.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.address.currency.displayName] The displayName property
   * for the currency entity
   *
   * @param {string} [body.address.currency.symbol] The symbol property for the
   * currency entity
   *
   * @param {string} [body.address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.address.paymentTerm]
   *
   * @param {uuid} [body.address.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.code] The code property for the
   * paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean} [body.address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.address.shipmentMethod]
   *
   * @param {uuid} [body.address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   *
   * @param {string} [body.address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   *
   * @param {date} [body.address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.address.paymentMethod]
   *
   * @param {uuid} [body.address.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.code] The code property for the
   * paymentMethod entity
   *
   * @param {string} [body.address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   *
   * @param {date} [body.address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the employee
   * entity
   *
   * @param {string} [body.mobilePhone] The mobilePhone property for the employee
   * entity
   *
   * @param {string} [body.email] The email property for the employee entity
   *
   * @param {string} [body.personalEmail] The personalEmail property for the
   * employee entity
   *
   * @param {date} [body.employmentDate] The employmentDate property for the
   * employee entity
   *
   * @param {date} [body.terminationDate] The terminationDate property for the
   * employee entity
   *
   * @param {string} [body.status] The status property for the employee entity
   *
   * @param {date} [body.birthDate] The birthDate property for the employee
   * entity
   *
   * @param {string} [body.statisticsGroupCode] The statisticsGroupCode property
   * for the employee entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the employee entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Employee} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Employee} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Employee} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchEmployeeById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Employee>;
  patchEmployeeById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, callback: ServiceCallback<models.Employee>): void;
  patchEmployeeById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Employee>): void;


  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPictureForEmployeeOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureForEmployeeWithHttpOperationResponse(companyId: string, employeeId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPictureForEmployeeOKResponse>>;

  /**
   * @summary Returns a list of picture
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPictureForEmployeeOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPictureForEmployeeOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPictureForEmployeeOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureForEmployee(companyId: string, employeeId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPictureForEmployeeOKResponse>;
  getPictureForEmployee(companyId: string, employeeId: string, callback: ServiceCallback<models.GetPictureForEmployeeOKResponse>): void;
  getPictureForEmployee(companyId: string, employeeId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPictureForEmployeeOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPictureForEmployeeByIdWithHttpOperationResponse(companyId: string, employeeId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Retrieve the properties and relationships of an picture object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPictureForEmployeeById(companyId: string, employeeId: string, pictureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  getPictureForEmployeeById(companyId: string, employeeId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  getPictureForEmployeeById(companyId: string, employeeId: string, pictureId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePictureForEmployeeByIdByIdWithHttpOperationResponse(companyId: string, employeeId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an picture in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePictureForEmployeeByIdById(companyId: string, employeeId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePictureForEmployeeByIdById(companyId: string, employeeId: string, pictureId: string, callback: ServiceCallback<void>): void;
  deletePictureForEmployeeByIdById(companyId: string, employeeId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Picture>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPictureForEmployeeByIdByIdWithHttpOperationResponse(body: models.BodyModel, companyId: string, employeeId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Picture>>;

  /**
   * @summary Lets the user patch the specified picture
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the picture entity
   *
   * @param {number} [body.width] The width property for the picture entity
   *
   * @param {number} [body.height] The height property for the picture entity
   *
   * @param {string} [body.contentType] The contentType property for the picture
   * entity
   *
   * @param {string} [body.content] The content property for the picture entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} pictureId id for picture
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Picture} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Picture} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Picture} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPictureForEmployeeByIdById(body: models.BodyModel, companyId: string, employeeId: string, pictureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Picture>;
  patchPictureForEmployeeByIdById(body: models.BodyModel, companyId: string, employeeId: string, pictureId: string, callback: ServiceCallback<models.Picture>): void;
  patchPictureForEmployeeByIdById(body: models.BodyModel, companyId: string, employeeId: string, pictureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Picture>): void;


  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDefaultDimensionsForEmployeeOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsForEmployeeWithHttpOperationResponse(companyId: string, employeeId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDefaultDimensionsForEmployeeOKResponse>>;

  /**
   * @summary Returns a list of defaultDimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDefaultDimensionsForEmployeeOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDefaultDimensionsForEmployeeOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDefaultDimensionsForEmployeeOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsForEmployee(companyId: string, employeeId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDefaultDimensionsForEmployeeOKResponse>;
  getDefaultDimensionsForEmployee(companyId: string, employeeId: string, callback: ServiceCallback<models.GetDefaultDimensionsForEmployeeOKResponse>): void;
  getDefaultDimensionsForEmployee(companyId: string, employeeId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDefaultDimensionsForEmployeeOKResponse>): void;


  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postDefaultDimensionsForEmployeeWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, employeeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Creates a defaultDimensions in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postDefaultDimensionsForEmployee(body: models.BodyModelModel, companyId: string, employeeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  postDefaultDimensionsForEmployee(body: models.BodyModelModel, companyId: string, employeeId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  postDefaultDimensionsForEmployee(body: models.BodyModelModel, companyId: string, employeeId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDefaultDimensionsForEmployeeByDimensionIdByParentIdWithHttpOperationResponse(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Retrieve the properties and relationships of an defaultDimensions
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDefaultDimensionsForEmployeeByDimensionIdByParentId(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  getDefaultDimensionsForEmployeeByDimensionIdByParentId(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  getDefaultDimensionsForEmployeeByDimensionIdByParentId(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteDefaultDimensionsForEmployeeByDimensionIdByParentIdByIdWithHttpOperationResponse(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an defaultDimensions in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteDefaultDimensionsForEmployeeByDimensionIdByParentIdById(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteDefaultDimensionsForEmployeeByDimensionIdByParentIdById(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<void>): void;
  deleteDefaultDimensionsForEmployeeByDimensionIdByParentIdById(companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DefaultDimensions>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchDefaultDimensionsForEmployeeByDimensionIdByParentIdByIdWithHttpOperationResponse(body: models.BodyModelModel, companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DefaultDimensions>>;

  /**
   * @summary Lets the user patch the specified defaultDimensions
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionId] The dimensionId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionCode] The dimensionCode property for the
   * defaultDimensions entity
   *
   * @param {uuid} [body.dimensionValueId] The dimensionValueId property for the
   * defaultDimensions entity
   *
   * @param {string} [body.dimensionValueCode] The dimensionValueCode property
   * for the defaultDimensions entity
   *
   * @param {string} [body.postingValidation] The postingValidation property for
   * the defaultDimensions entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} defaultDimensionsParentId parentId for defaultDimensions
   *
   * @param {uuid} defaultDimensionsDimensionId dimensionId for defaultDimensions
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DefaultDimensions} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DefaultDimensions} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DefaultDimensions} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchDefaultDimensionsForEmployeeByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DefaultDimensions>;
  patchDefaultDimensionsForEmployeeByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, callback: ServiceCallback<models.DefaultDimensions>): void;
  patchDefaultDimensionsForEmployeeByDimensionIdByParentIdById(body: models.BodyModelModel, companyId: string, employeeId: string, defaultDimensionsParentId: string, defaultDimensionsDimensionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DefaultDimensions>): void;


  /**
   * @summary Returns a list of timeRegistrationEntries
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetTimeRegistrationEntriesForEmployeeOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTimeRegistrationEntriesForEmployeeWithHttpOperationResponse(companyId: string, employeeId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetTimeRegistrationEntriesForEmployeeOKResponse>>;

  /**
   * @summary Returns a list of timeRegistrationEntries
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetTimeRegistrationEntriesForEmployeeOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetTimeRegistrationEntriesForEmployeeOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      GetTimeRegistrationEntriesForEmployeeOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTimeRegistrationEntriesForEmployee(companyId: string, employeeId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetTimeRegistrationEntriesForEmployeeOKResponse>;
  getTimeRegistrationEntriesForEmployee(companyId: string, employeeId: string, callback: ServiceCallback<models.GetTimeRegistrationEntriesForEmployeeOKResponse>): void;
  getTimeRegistrationEntriesForEmployee(companyId: string, employeeId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetTimeRegistrationEntriesForEmployeeOKResponse>): void;


  /**
   * @summary Creates a timeRegistrationEntry in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the timeRegistrationEntry entity
   *
   * @param {uuid} [body.employeeId] The employeeId property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.employeeNumber] The employeeNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {date} [body.date] The date property for the timeRegistrationEntry
   * entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.status] The status property for the
   * timeRegistrationEntry entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * timeRegistrationEntry entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {date} [body.lastModfiedDateTime] The lastModfiedDateTime property
   * for the timeRegistrationEntry entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TimeRegistrationEntry>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postTimeRegistrationEntryForEmployeeWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TimeRegistrationEntry>>;

  /**
   * @summary Creates a timeRegistrationEntry in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the timeRegistrationEntry entity
   *
   * @param {uuid} [body.employeeId] The employeeId property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.employeeNumber] The employeeNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {date} [body.date] The date property for the timeRegistrationEntry
   * entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.status] The status property for the
   * timeRegistrationEntry entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * timeRegistrationEntry entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {date} [body.lastModfiedDateTime] The lastModfiedDateTime property
   * for the timeRegistrationEntry entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TimeRegistrationEntry} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TimeRegistrationEntry} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TimeRegistrationEntry} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postTimeRegistrationEntryForEmployee(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TimeRegistrationEntry>;
  postTimeRegistrationEntryForEmployee(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, callback: ServiceCallback<models.TimeRegistrationEntry>): void;
  postTimeRegistrationEntryForEmployee(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TimeRegistrationEntry>): void;


  /**
   * @summary Retrieve the properties and relationships of an
   * timeRegistrationEntry object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TimeRegistrationEntry>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTimeRegistrationEntryForEmployeeByIdWithHttpOperationResponse(companyId: string, employeeId: string, timeRegistrationEntryId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TimeRegistrationEntry>>;

  /**
   * @summary Retrieve the properties and relationships of an
   * timeRegistrationEntry object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TimeRegistrationEntry} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TimeRegistrationEntry} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TimeRegistrationEntry} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTimeRegistrationEntryForEmployeeById(companyId: string, employeeId: string, timeRegistrationEntryId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.TimeRegistrationEntry>;
  getTimeRegistrationEntryForEmployeeById(companyId: string, employeeId: string, timeRegistrationEntryId: string, callback: ServiceCallback<models.TimeRegistrationEntry>): void;
  getTimeRegistrationEntryForEmployeeById(companyId: string, employeeId: string, timeRegistrationEntryId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TimeRegistrationEntry>): void;


  /**
   * @summary Delete an timeRegistrationEntry in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteTimeRegistrationEntryForEmployeeByIdByIdWithHttpOperationResponse(companyId: string, employeeId: string, timeRegistrationEntryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an timeRegistrationEntry in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteTimeRegistrationEntryForEmployeeByIdById(companyId: string, employeeId: string, timeRegistrationEntryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteTimeRegistrationEntryForEmployeeByIdById(companyId: string, employeeId: string, timeRegistrationEntryId: string, callback: ServiceCallback<void>): void;
  deleteTimeRegistrationEntryForEmployeeByIdById(companyId: string, employeeId: string, timeRegistrationEntryId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified timeRegistrationEntry
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the timeRegistrationEntry entity
   *
   * @param {uuid} [body.employeeId] The employeeId property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.employeeNumber] The employeeNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {date} [body.date] The date property for the timeRegistrationEntry
   * entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.status] The status property for the
   * timeRegistrationEntry entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * timeRegistrationEntry entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {date} [body.lastModfiedDateTime] The lastModfiedDateTime property
   * for the timeRegistrationEntry entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TimeRegistrationEntry>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchTimeRegistrationEntryForEmployeeByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, timeRegistrationEntryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TimeRegistrationEntry>>;

  /**
   * @summary Lets the user patch the specified timeRegistrationEntry
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the timeRegistrationEntry entity
   *
   * @param {uuid} [body.employeeId] The employeeId property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.employeeNumber] The employeeNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {date} [body.date] The date property for the timeRegistrationEntry
   * entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.status] The status property for the
   * timeRegistrationEntry entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * timeRegistrationEntry entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {date} [body.lastModfiedDateTime] The lastModfiedDateTime property
   * for the timeRegistrationEntry entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} employeeId id for employee
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TimeRegistrationEntry} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TimeRegistrationEntry} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TimeRegistrationEntry} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchTimeRegistrationEntryForEmployeeByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, timeRegistrationEntryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TimeRegistrationEntry>;
  patchTimeRegistrationEntryForEmployeeByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, timeRegistrationEntryId: string, callback: ServiceCallback<models.TimeRegistrationEntry>): void;
  patchTimeRegistrationEntryForEmployeeByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, employeeId: string, timeRegistrationEntryId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TimeRegistrationEntry>): void;


  /**
   * @summary Returns a list of timeRegistrationEntries
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetTimeRegistrationEntriesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTimeRegistrationEntriesWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetTimeRegistrationEntriesOKResponse>>;

  /**
   * @summary Returns a list of timeRegistrationEntries
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetTimeRegistrationEntriesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetTimeRegistrationEntriesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetTimeRegistrationEntriesOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTimeRegistrationEntries(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetTimeRegistrationEntriesOKResponse>;
  getTimeRegistrationEntries(companyId: string, callback: ServiceCallback<models.GetTimeRegistrationEntriesOKResponse>): void;
  getTimeRegistrationEntries(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetTimeRegistrationEntriesOKResponse>): void;


  /**
   * @summary Creates a timeRegistrationEntry in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the timeRegistrationEntry entity
   *
   * @param {uuid} [body.employeeId] The employeeId property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.employeeNumber] The employeeNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {date} [body.date] The date property for the timeRegistrationEntry
   * entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.status] The status property for the
   * timeRegistrationEntry entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * timeRegistrationEntry entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {date} [body.lastModfiedDateTime] The lastModfiedDateTime property
   * for the timeRegistrationEntry entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TimeRegistrationEntry>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postTimeRegistrationEntryWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TimeRegistrationEntry>>;

  /**
   * @summary Creates a timeRegistrationEntry in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the timeRegistrationEntry entity
   *
   * @param {uuid} [body.employeeId] The employeeId property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.employeeNumber] The employeeNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {date} [body.date] The date property for the timeRegistrationEntry
   * entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.status] The status property for the
   * timeRegistrationEntry entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * timeRegistrationEntry entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {date} [body.lastModfiedDateTime] The lastModfiedDateTime property
   * for the timeRegistrationEntry entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TimeRegistrationEntry} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TimeRegistrationEntry} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TimeRegistrationEntry} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postTimeRegistrationEntry(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TimeRegistrationEntry>;
  postTimeRegistrationEntry(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.TimeRegistrationEntry>): void;
  postTimeRegistrationEntry(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TimeRegistrationEntry>): void;


  /**
   * @summary Retrieve the properties and relationships of an
   * timeRegistrationEntry object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TimeRegistrationEntry>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTimeRegistrationEntryByIdWithHttpOperationResponse(companyId: string, timeRegistrationEntryId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TimeRegistrationEntry>>;

  /**
   * @summary Retrieve the properties and relationships of an
   * timeRegistrationEntry object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TimeRegistrationEntry} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TimeRegistrationEntry} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TimeRegistrationEntry} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTimeRegistrationEntryById(companyId: string, timeRegistrationEntryId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.TimeRegistrationEntry>;
  getTimeRegistrationEntryById(companyId: string, timeRegistrationEntryId: string, callback: ServiceCallback<models.TimeRegistrationEntry>): void;
  getTimeRegistrationEntryById(companyId: string, timeRegistrationEntryId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TimeRegistrationEntry>): void;


  /**
   * @summary Delete an timeRegistrationEntry in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteTimeRegistrationEntryByIdWithHttpOperationResponse(companyId: string, timeRegistrationEntryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an timeRegistrationEntry in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteTimeRegistrationEntryById(companyId: string, timeRegistrationEntryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteTimeRegistrationEntryById(companyId: string, timeRegistrationEntryId: string, callback: ServiceCallback<void>): void;
  deleteTimeRegistrationEntryById(companyId: string, timeRegistrationEntryId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified timeRegistrationEntry
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the timeRegistrationEntry entity
   *
   * @param {uuid} [body.employeeId] The employeeId property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.employeeNumber] The employeeNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {date} [body.date] The date property for the timeRegistrationEntry
   * entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.status] The status property for the
   * timeRegistrationEntry entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * timeRegistrationEntry entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {date} [body.lastModfiedDateTime] The lastModfiedDateTime property
   * for the timeRegistrationEntry entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TimeRegistrationEntry>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchTimeRegistrationEntryByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, timeRegistrationEntryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TimeRegistrationEntry>>;

  /**
   * @summary Lets the user patch the specified timeRegistrationEntry
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the timeRegistrationEntry entity
   *
   * @param {uuid} [body.employeeId] The employeeId property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.employeeNumber] The employeeNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {number} [body.lineNumber] The lineNumber property for the
   * timeRegistrationEntry entity
   *
   * @param {date} [body.date] The date property for the timeRegistrationEntry
   * entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * timeRegistrationEntry entity
   *
   * @param {string} [body.status] The status property for the
   * timeRegistrationEntry entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * timeRegistrationEntry entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {date} [body.lastModfiedDateTime] The lastModfiedDateTime property
   * for the timeRegistrationEntry entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} timeRegistrationEntryId id for timeRegistrationEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TimeRegistrationEntry} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TimeRegistrationEntry} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TimeRegistrationEntry} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchTimeRegistrationEntryById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, timeRegistrationEntryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TimeRegistrationEntry>;
  patchTimeRegistrationEntryById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, timeRegistrationEntryId: string, callback: ServiceCallback<models.TimeRegistrationEntry>): void;
  patchTimeRegistrationEntryById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, timeRegistrationEntryId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TimeRegistrationEntry>): void;


  /**
   * @summary Returns a list of generalLedgerEntries
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetGeneralLedgerEntriesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getGeneralLedgerEntriesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetGeneralLedgerEntriesOKResponse>>;

  /**
   * @summary Returns a list of generalLedgerEntries
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetGeneralLedgerEntriesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetGeneralLedgerEntriesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetGeneralLedgerEntriesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getGeneralLedgerEntries(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetGeneralLedgerEntriesOKResponse>;
  getGeneralLedgerEntries(companyId: string, callback: ServiceCallback<models.GetGeneralLedgerEntriesOKResponse>): void;
  getGeneralLedgerEntries(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetGeneralLedgerEntriesOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an generalLedgerEntry
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} generalLedgerEntryId id for generalLedgerEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GeneralLedgerEntry>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getGeneralLedgerEntryByIdWithHttpOperationResponse(companyId: string, generalLedgerEntryId: number, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GeneralLedgerEntry>>;

  /**
   * @summary Retrieve the properties and relationships of an generalLedgerEntry
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} generalLedgerEntryId id for generalLedgerEntry
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GeneralLedgerEntry} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GeneralLedgerEntry} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GeneralLedgerEntry} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getGeneralLedgerEntryById(companyId: string, generalLedgerEntryId: number, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GeneralLedgerEntry>;
  getGeneralLedgerEntryById(companyId: string, generalLedgerEntryId: number, callback: ServiceCallback<models.GeneralLedgerEntry>): void;
  getGeneralLedgerEntryById(companyId: string, generalLedgerEntryId: number, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GeneralLedgerEntry>): void;


  /**
   * @summary Returns a list of currencies
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCurrenciesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCurrenciesWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCurrenciesOKResponse>>;

  /**
   * @summary Returns a list of currencies
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCurrenciesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCurrenciesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCurrenciesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCurrencies(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCurrenciesOKResponse>;
  getCurrencies(companyId: string, callback: ServiceCallback<models.GetCurrenciesOKResponse>): void;
  getCurrencies(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCurrenciesOKResponse>): void;


  /**
   * @summary Creates a currency in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the currency entity
   *
   * @param {string} [body.code] The code property for the currency entity
   *
   * @param {string} [body.displayName] The displayName property for the currency
   * entity
   *
   * @param {string} [body.symbol] The symbol property for the currency entity
   *
   * @param {string} [body.amountDecimalPlaces] The amountDecimalPlaces property
   * for the currency entity
   *
   * @param {number} [body.amountRoundingPrecision] The amountRoundingPrecision
   * property for the currency entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the currency entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Currency>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postCurrencyWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Currency>>;

  /**
   * @summary Creates a currency in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the currency entity
   *
   * @param {string} [body.code] The code property for the currency entity
   *
   * @param {string} [body.displayName] The displayName property for the currency
   * entity
   *
   * @param {string} [body.symbol] The symbol property for the currency entity
   *
   * @param {string} [body.amountDecimalPlaces] The amountDecimalPlaces property
   * for the currency entity
   *
   * @param {number} [body.amountRoundingPrecision] The amountRoundingPrecision
   * property for the currency entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the currency entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Currency} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Currency} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Currency} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postCurrency(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Currency>;
  postCurrency(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.Currency>): void;
  postCurrency(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Currency>): void;


  /**
   * @summary Retrieve the properties and relationships of an currency object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} currencyId id for currency
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Currency>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCurrencyByIdWithHttpOperationResponse(companyId: string, currencyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Currency>>;

  /**
   * @summary Retrieve the properties and relationships of an currency object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} currencyId id for currency
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Currency} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Currency} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Currency} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCurrencyById(companyId: string, currencyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Currency>;
  getCurrencyById(companyId: string, currencyId: string, callback: ServiceCallback<models.Currency>): void;
  getCurrencyById(companyId: string, currencyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Currency>): void;


  /**
   * @summary Delete an currency in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} currencyId id for currency
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteCurrencyByIdWithHttpOperationResponse(companyId: string, currencyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an currency in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} currencyId id for currency
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteCurrencyById(companyId: string, currencyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteCurrencyById(companyId: string, currencyId: string, callback: ServiceCallback<void>): void;
  deleteCurrencyById(companyId: string, currencyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified currency
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the currency entity
   *
   * @param {string} [body.code] The code property for the currency entity
   *
   * @param {string} [body.displayName] The displayName property for the currency
   * entity
   *
   * @param {string} [body.symbol] The symbol property for the currency entity
   *
   * @param {string} [body.amountDecimalPlaces] The amountDecimalPlaces property
   * for the currency entity
   *
   * @param {number} [body.amountRoundingPrecision] The amountRoundingPrecision
   * property for the currency entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the currency entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} currencyId id for currency
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Currency>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchCurrencyByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, currencyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Currency>>;

  /**
   * @summary Lets the user patch the specified currency
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the currency entity
   *
   * @param {string} [body.code] The code property for the currency entity
   *
   * @param {string} [body.displayName] The displayName property for the currency
   * entity
   *
   * @param {string} [body.symbol] The symbol property for the currency entity
   *
   * @param {string} [body.amountDecimalPlaces] The amountDecimalPlaces property
   * for the currency entity
   *
   * @param {number} [body.amountRoundingPrecision] The amountRoundingPrecision
   * property for the currency entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the currency entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} currencyId id for currency
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Currency} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Currency} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Currency} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchCurrencyById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, currencyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Currency>;
  patchCurrencyById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, currencyId: string, callback: ServiceCallback<models.Currency>): void;
  patchCurrencyById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, currencyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Currency>): void;


  /**
   * @summary Returns a list of paymentMethods
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPaymentMethodsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPaymentMethodsWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPaymentMethodsOKResponse>>;

  /**
   * @summary Returns a list of paymentMethods
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPaymentMethodsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPaymentMethodsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPaymentMethodsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPaymentMethods(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPaymentMethodsOKResponse>;
  getPaymentMethods(companyId: string, callback: ServiceCallback<models.GetPaymentMethodsOKResponse>): void;
  getPaymentMethods(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPaymentMethodsOKResponse>): void;


  /**
   * @summary Creates a paymentMethod in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the paymentMethod entity
   *
   * @param {string} [body.code] The code property for the paymentMethod entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * paymentMethod entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentMethod entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PaymentMethod>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postPaymentMethodWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaymentMethod>>;

  /**
   * @summary Creates a paymentMethod in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the paymentMethod entity
   *
   * @param {string} [body.code] The code property for the paymentMethod entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * paymentMethod entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentMethod entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PaymentMethod} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PaymentMethod} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PaymentMethod} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postPaymentMethod(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PaymentMethod>;
  postPaymentMethod(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.PaymentMethod>): void;
  postPaymentMethod(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaymentMethod>): void;


  /**
   * @summary Retrieve the properties and relationships of an paymentMethod
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentMethodId id for paymentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PaymentMethod>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPaymentMethodByIdWithHttpOperationResponse(companyId: string, paymentMethodId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaymentMethod>>;

  /**
   * @summary Retrieve the properties and relationships of an paymentMethod
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentMethodId id for paymentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PaymentMethod} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PaymentMethod} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PaymentMethod} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPaymentMethodById(companyId: string, paymentMethodId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PaymentMethod>;
  getPaymentMethodById(companyId: string, paymentMethodId: string, callback: ServiceCallback<models.PaymentMethod>): void;
  getPaymentMethodById(companyId: string, paymentMethodId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaymentMethod>): void;


  /**
   * @summary Delete an paymentMethod in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentMethodId id for paymentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePaymentMethodByIdWithHttpOperationResponse(companyId: string, paymentMethodId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an paymentMethod in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentMethodId id for paymentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePaymentMethodById(companyId: string, paymentMethodId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePaymentMethodById(companyId: string, paymentMethodId: string, callback: ServiceCallback<void>): void;
  deletePaymentMethodById(companyId: string, paymentMethodId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified paymentMethod
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the paymentMethod entity
   *
   * @param {string} [body.code] The code property for the paymentMethod entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * paymentMethod entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentMethod entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentMethodId id for paymentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PaymentMethod>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPaymentMethodByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, paymentMethodId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaymentMethod>>;

  /**
   * @summary Lets the user patch the specified paymentMethod
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the paymentMethod entity
   *
   * @param {string} [body.code] The code property for the paymentMethod entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * paymentMethod entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentMethod entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentMethodId id for paymentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PaymentMethod} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PaymentMethod} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PaymentMethod} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPaymentMethodById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, paymentMethodId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PaymentMethod>;
  patchPaymentMethodById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, paymentMethodId: string, callback: ServiceCallback<models.PaymentMethod>): void;
  patchPaymentMethodById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, paymentMethodId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaymentMethod>): void;


  /**
   * @summary Returns a list of dimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDimensionsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDimensionsWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDimensionsOKResponse>>;

  /**
   * @summary Returns a list of dimensions
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDimensionsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDimensionsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDimensionsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDimensions(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDimensionsOKResponse>;
  getDimensions(companyId: string, callback: ServiceCallback<models.GetDimensionsOKResponse>): void;
  getDimensions(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDimensionsOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an dimension object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionId id for dimension
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Dimension>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDimensionByIdWithHttpOperationResponse(companyId: string, dimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Dimension>>;

  /**
   * @summary Retrieve the properties and relationships of an dimension object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionId id for dimension
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Dimension} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Dimension} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link Dimension} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDimensionById(companyId: string, dimensionId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.Dimension>;
  getDimensionById(companyId: string, dimensionId: string, callback: ServiceCallback<models.Dimension>): void;
  getDimensionById(companyId: string, dimensionId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Dimension>): void;


  /**
   * @summary Returns a list of dimensionValues
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionId id for dimension
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDimensionValuesForDimensionOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDimensionValuesForDimensionWithHttpOperationResponse(companyId: string, dimensionId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDimensionValuesForDimensionOKResponse>>;

  /**
   * @summary Returns a list of dimensionValues
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionId id for dimension
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDimensionValuesForDimensionOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDimensionValuesForDimensionOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDimensionValuesForDimensionOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDimensionValuesForDimension(companyId: string, dimensionId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDimensionValuesForDimensionOKResponse>;
  getDimensionValuesForDimension(companyId: string, dimensionId: string, callback: ServiceCallback<models.GetDimensionValuesForDimensionOKResponse>): void;
  getDimensionValuesForDimension(companyId: string, dimensionId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDimensionValuesForDimensionOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an dimensionValue
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionId id for dimension
   *
   * @param {uuid} dimensionValueId id for dimensionValue
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DimensionValue>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDimensionValueForDimensionByIdWithHttpOperationResponse(companyId: string, dimensionId: string, dimensionValueId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DimensionValue>>;

  /**
   * @summary Retrieve the properties and relationships of an dimensionValue
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionId id for dimension
   *
   * @param {uuid} dimensionValueId id for dimensionValue
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DimensionValue} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DimensionValue} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DimensionValue} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDimensionValueForDimensionById(companyId: string, dimensionId: string, dimensionValueId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.DimensionValue>;
  getDimensionValueForDimensionById(companyId: string, dimensionId: string, dimensionValueId: string, callback: ServiceCallback<models.DimensionValue>): void;
  getDimensionValueForDimensionById(companyId: string, dimensionId: string, dimensionValueId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DimensionValue>): void;


  /**
   * @summary Returns a list of dimensionValues
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDimensionValuesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDimensionValuesWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDimensionValuesOKResponse>>;

  /**
   * @summary Returns a list of dimensionValues
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDimensionValuesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDimensionValuesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDimensionValuesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDimensionValues(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDimensionValuesOKResponse>;
  getDimensionValues(companyId: string, callback: ServiceCallback<models.GetDimensionValuesOKResponse>): void;
  getDimensionValues(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDimensionValuesOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an dimensionValue
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionValueId id for dimensionValue
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DimensionValue>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDimensionValueByIdWithHttpOperationResponse(companyId: string, dimensionValueId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DimensionValue>>;

  /**
   * @summary Retrieve the properties and relationships of an dimensionValue
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionValueId id for dimensionValue
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DimensionValue} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DimensionValue} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DimensionValue} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDimensionValueById(companyId: string, dimensionValueId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.DimensionValue>;
  getDimensionValueById(companyId: string, dimensionValueId: string, callback: ServiceCallback<models.DimensionValue>): void;
  getDimensionValueById(companyId: string, dimensionValueId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DimensionValue>): void;


  /**
   * @summary Returns a list of dimensionLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetDimensionLinesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDimensionLinesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetDimensionLinesOKResponse>>;

  /**
   * @summary Returns a list of dimensionLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetDimensionLinesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetDimensionLinesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetDimensionLinesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDimensionLines(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetDimensionLinesOKResponse>;
  getDimensionLines(companyId: string, callback: ServiceCallback<models.GetDimensionLinesOKResponse>): void;
  getDimensionLines(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetDimensionLinesOKResponse>): void;


  /**
   * @summary Creates a dimensionLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the dimensionLine
   * entity
   *
   * @param {uuid} [body.id] The id property for the dimensionLine entity
   *
   * @param {string} [body.code] The code property for the dimensionLine entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * dimensionLine entity
   *
   * @param {uuid} [body.valueId] The valueId property for the dimensionLine
   * entity
   *
   * @param {string} [body.valueCode] The valueCode property for the
   * dimensionLine entity
   *
   * @param {string} [body.valueDisplayName] The valueDisplayName property for
   * the dimensionLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DimensionLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postDimensionLineWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DimensionLine>>;

  /**
   * @summary Creates a dimensionLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the dimensionLine
   * entity
   *
   * @param {uuid} [body.id] The id property for the dimensionLine entity
   *
   * @param {string} [body.code] The code property for the dimensionLine entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * dimensionLine entity
   *
   * @param {uuid} [body.valueId] The valueId property for the dimensionLine
   * entity
   *
   * @param {string} [body.valueCode] The valueCode property for the
   * dimensionLine entity
   *
   * @param {string} [body.valueDisplayName] The valueDisplayName property for
   * the dimensionLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DimensionLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DimensionLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DimensionLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postDimensionLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DimensionLine>;
  postDimensionLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.DimensionLine>): void;
  postDimensionLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DimensionLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an dimensionLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionLineParentId parentId for dimensionLine
   *
   * @param {uuid} dimensionLineId id for dimensionLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DimensionLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getDimensionLineByIdByParentIdWithHttpOperationResponse(companyId: string, dimensionLineParentId: string, dimensionLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DimensionLine>>;

  /**
   * @summary Retrieve the properties and relationships of an dimensionLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionLineParentId parentId for dimensionLine
   *
   * @param {uuid} dimensionLineId id for dimensionLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DimensionLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DimensionLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DimensionLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getDimensionLineByIdByParentId(companyId: string, dimensionLineParentId: string, dimensionLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.DimensionLine>;
  getDimensionLineByIdByParentId(companyId: string, dimensionLineParentId: string, dimensionLineId: string, callback: ServiceCallback<models.DimensionLine>): void;
  getDimensionLineByIdByParentId(companyId: string, dimensionLineParentId: string, dimensionLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DimensionLine>): void;


  /**
   * @summary Delete an dimensionLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionLineParentId parentId for dimensionLine
   *
   * @param {uuid} dimensionLineId id for dimensionLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteDimensionLineByIdByParentIdWithHttpOperationResponse(companyId: string, dimensionLineParentId: string, dimensionLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an dimensionLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionLineParentId parentId for dimensionLine
   *
   * @param {uuid} dimensionLineId id for dimensionLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteDimensionLineByIdByParentId(companyId: string, dimensionLineParentId: string, dimensionLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteDimensionLineByIdByParentId(companyId: string, dimensionLineParentId: string, dimensionLineId: string, callback: ServiceCallback<void>): void;
  deleteDimensionLineByIdByParentId(companyId: string, dimensionLineParentId: string, dimensionLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified dimensionLine
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the dimensionLine
   * entity
   *
   * @param {uuid} [body.id] The id property for the dimensionLine entity
   *
   * @param {string} [body.code] The code property for the dimensionLine entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * dimensionLine entity
   *
   * @param {uuid} [body.valueId] The valueId property for the dimensionLine
   * entity
   *
   * @param {string} [body.valueCode] The valueCode property for the
   * dimensionLine entity
   *
   * @param {string} [body.valueDisplayName] The valueDisplayName property for
   * the dimensionLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionLineParentId parentId for dimensionLine
   *
   * @param {uuid} dimensionLineId id for dimensionLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<DimensionLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchDimensionLineByIdByParentIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, dimensionLineParentId: string, dimensionLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DimensionLine>>;

  /**
   * @summary Lets the user patch the specified dimensionLine
   *
   * @param {object} body
   *
   * @param {uuid} [body.parentId] The parentId property for the dimensionLine
   * entity
   *
   * @param {uuid} [body.id] The id property for the dimensionLine entity
   *
   * @param {string} [body.code] The code property for the dimensionLine entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * dimensionLine entity
   *
   * @param {uuid} [body.valueId] The valueId property for the dimensionLine
   * entity
   *
   * @param {string} [body.valueCode] The valueCode property for the
   * dimensionLine entity
   *
   * @param {string} [body.valueDisplayName] The valueDisplayName property for
   * the dimensionLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} dimensionLineParentId parentId for dimensionLine
   *
   * @param {uuid} dimensionLineId id for dimensionLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {DimensionLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {DimensionLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link DimensionLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchDimensionLineByIdByParentId(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, dimensionLineParentId: string, dimensionLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DimensionLine>;
  patchDimensionLineByIdByParentId(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, dimensionLineParentId: string, dimensionLineId: string, callback: ServiceCallback<models.DimensionLine>): void;
  patchDimensionLineByIdByParentId(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, dimensionLineParentId: string, dimensionLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DimensionLine>): void;


  /**
   * @summary Returns a list of paymentTerms
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPaymentTermsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPaymentTermsWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPaymentTermsOKResponse>>;

  /**
   * @summary Returns a list of paymentTerms
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPaymentTermsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPaymentTermsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPaymentTermsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPaymentTerms(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPaymentTermsOKResponse>;
  getPaymentTerms(companyId: string, callback: ServiceCallback<models.GetPaymentTermsOKResponse>): void;
  getPaymentTerms(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPaymentTermsOKResponse>): void;


  /**
   * @summary Creates a paymentTerm in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the paymentTerm entity
   *
   * @param {string} [body.code] The code property for the paymentTerm entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * paymentTerm entity
   *
   * @param {string} [body.dueDateCalculation] The dueDateCalculation property
   * for the paymentTerm entity
   *
   * @param {string} [body.discountDateCalculation] The discountDateCalculation
   * property for the paymentTerm entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * paymentTerm entity
   *
   * @param {boolean} [body.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentTerm entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PaymentTerm>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postPaymentTermWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaymentTerm>>;

  /**
   * @summary Creates a paymentTerm in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the paymentTerm entity
   *
   * @param {string} [body.code] The code property for the paymentTerm entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * paymentTerm entity
   *
   * @param {string} [body.dueDateCalculation] The dueDateCalculation property
   * for the paymentTerm entity
   *
   * @param {string} [body.discountDateCalculation] The discountDateCalculation
   * property for the paymentTerm entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * paymentTerm entity
   *
   * @param {boolean} [body.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentTerm entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PaymentTerm} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PaymentTerm} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PaymentTerm} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postPaymentTerm(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PaymentTerm>;
  postPaymentTerm(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.PaymentTerm>): void;
  postPaymentTerm(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaymentTerm>): void;


  /**
   * @summary Retrieve the properties and relationships of an paymentTerm object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentTermId id for paymentTerm
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PaymentTerm>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPaymentTermByIdWithHttpOperationResponse(companyId: string, paymentTermId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaymentTerm>>;

  /**
   * @summary Retrieve the properties and relationships of an paymentTerm object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentTermId id for paymentTerm
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PaymentTerm} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PaymentTerm} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PaymentTerm} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPaymentTermById(companyId: string, paymentTermId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PaymentTerm>;
  getPaymentTermById(companyId: string, paymentTermId: string, callback: ServiceCallback<models.PaymentTerm>): void;
  getPaymentTermById(companyId: string, paymentTermId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaymentTerm>): void;


  /**
   * @summary Delete an paymentTerm in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentTermId id for paymentTerm
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePaymentTermByIdWithHttpOperationResponse(companyId: string, paymentTermId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an paymentTerm in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentTermId id for paymentTerm
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePaymentTermById(companyId: string, paymentTermId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePaymentTermById(companyId: string, paymentTermId: string, callback: ServiceCallback<void>): void;
  deletePaymentTermById(companyId: string, paymentTermId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified paymentTerm
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the paymentTerm entity
   *
   * @param {string} [body.code] The code property for the paymentTerm entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * paymentTerm entity
   *
   * @param {string} [body.dueDateCalculation] The dueDateCalculation property
   * for the paymentTerm entity
   *
   * @param {string} [body.discountDateCalculation] The discountDateCalculation
   * property for the paymentTerm entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * paymentTerm entity
   *
   * @param {boolean} [body.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentTerm entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentTermId id for paymentTerm
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PaymentTerm>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPaymentTermByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, paymentTermId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaymentTerm>>;

  /**
   * @summary Lets the user patch the specified paymentTerm
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the paymentTerm entity
   *
   * @param {string} [body.code] The code property for the paymentTerm entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * paymentTerm entity
   *
   * @param {string} [body.dueDateCalculation] The dueDateCalculation property
   * for the paymentTerm entity
   *
   * @param {string} [body.discountDateCalculation] The discountDateCalculation
   * property for the paymentTerm entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * paymentTerm entity
   *
   * @param {boolean} [body.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentTerm entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} paymentTermId id for paymentTerm
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PaymentTerm} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PaymentTerm} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PaymentTerm} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPaymentTermById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, paymentTermId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PaymentTerm>;
  patchPaymentTermById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, paymentTermId: string, callback: ServiceCallback<models.PaymentTerm>): void;
  patchPaymentTermById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, paymentTermId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaymentTerm>): void;


  /**
   * @summary Returns a list of shipmentMethods
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetShipmentMethodsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getShipmentMethodsWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetShipmentMethodsOKResponse>>;

  /**
   * @summary Returns a list of shipmentMethods
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetShipmentMethodsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetShipmentMethodsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetShipmentMethodsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getShipmentMethods(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetShipmentMethodsOKResponse>;
  getShipmentMethods(companyId: string, callback: ServiceCallback<models.GetShipmentMethodsOKResponse>): void;
  getShipmentMethods(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetShipmentMethodsOKResponse>): void;


  /**
   * @summary Creates a shipmentMethod in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the shipmentMethod entity
   *
   * @param {string} [body.code] The code property for the shipmentMethod entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * shipmentMethod entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the shipmentMethod entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ShipmentMethod>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postShipmentMethodWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ShipmentMethod>>;

  /**
   * @summary Creates a shipmentMethod in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the shipmentMethod entity
   *
   * @param {string} [body.code] The code property for the shipmentMethod entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * shipmentMethod entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the shipmentMethod entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ShipmentMethod} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ShipmentMethod} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ShipmentMethod} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postShipmentMethod(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ShipmentMethod>;
  postShipmentMethod(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.ShipmentMethod>): void;
  postShipmentMethod(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ShipmentMethod>): void;


  /**
   * @summary Retrieve the properties and relationships of an shipmentMethod
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} shipmentMethodId id for shipmentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ShipmentMethod>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getShipmentMethodByIdWithHttpOperationResponse(companyId: string, shipmentMethodId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ShipmentMethod>>;

  /**
   * @summary Retrieve the properties and relationships of an shipmentMethod
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} shipmentMethodId id for shipmentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ShipmentMethod} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ShipmentMethod} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ShipmentMethod} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getShipmentMethodById(companyId: string, shipmentMethodId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.ShipmentMethod>;
  getShipmentMethodById(companyId: string, shipmentMethodId: string, callback: ServiceCallback<models.ShipmentMethod>): void;
  getShipmentMethodById(companyId: string, shipmentMethodId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ShipmentMethod>): void;


  /**
   * @summary Delete an shipmentMethod in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} shipmentMethodId id for shipmentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteShipmentMethodByIdWithHttpOperationResponse(companyId: string, shipmentMethodId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an shipmentMethod in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} shipmentMethodId id for shipmentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteShipmentMethodById(companyId: string, shipmentMethodId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteShipmentMethodById(companyId: string, shipmentMethodId: string, callback: ServiceCallback<void>): void;
  deleteShipmentMethodById(companyId: string, shipmentMethodId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified shipmentMethod
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the shipmentMethod entity
   *
   * @param {string} [body.code] The code property for the shipmentMethod entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * shipmentMethod entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the shipmentMethod entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} shipmentMethodId id for shipmentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ShipmentMethod>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchShipmentMethodByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, shipmentMethodId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ShipmentMethod>>;

  /**
   * @summary Lets the user patch the specified shipmentMethod
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the shipmentMethod entity
   *
   * @param {string} [body.code] The code property for the shipmentMethod entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * shipmentMethod entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the shipmentMethod entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} shipmentMethodId id for shipmentMethod
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ShipmentMethod} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ShipmentMethod} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ShipmentMethod} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchShipmentMethodById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, shipmentMethodId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ShipmentMethod>;
  patchShipmentMethodById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, shipmentMethodId: string, callback: ServiceCallback<models.ShipmentMethod>): void;
  patchShipmentMethodById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, shipmentMethodId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ShipmentMethod>): void;


  /**
   * @summary Returns a list of itemCategories
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetItemCategoriesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getItemCategoriesWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetItemCategoriesOKResponse>>;

  /**
   * @summary Returns a list of itemCategories
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetItemCategoriesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetItemCategoriesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetItemCategoriesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getItemCategories(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetItemCategoriesOKResponse>;
  getItemCategories(companyId: string, callback: ServiceCallback<models.GetItemCategoriesOKResponse>): void;
  getItemCategories(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetItemCategoriesOKResponse>): void;


  /**
   * @summary Creates a itemCategory in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the itemCategory entity
   *
   * @param {string} [body.code] The code property for the itemCategory entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * itemCategory entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the itemCategory entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ItemCategory>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postItemCategoryWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ItemCategory>>;

  /**
   * @summary Creates a itemCategory in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the itemCategory entity
   *
   * @param {string} [body.code] The code property for the itemCategory entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * itemCategory entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the itemCategory entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ItemCategory} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ItemCategory} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ItemCategory} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postItemCategory(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ItemCategory>;
  postItemCategory(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.ItemCategory>): void;
  postItemCategory(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ItemCategory>): void;


  /**
   * @summary Retrieve the properties and relationships of an itemCategory object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemCategoryId id for itemCategory
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ItemCategory>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getItemCategoryByIdWithHttpOperationResponse(companyId: string, itemCategoryId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ItemCategory>>;

  /**
   * @summary Retrieve the properties and relationships of an itemCategory object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemCategoryId id for itemCategory
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ItemCategory} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ItemCategory} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ItemCategory} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getItemCategoryById(companyId: string, itemCategoryId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.ItemCategory>;
  getItemCategoryById(companyId: string, itemCategoryId: string, callback: ServiceCallback<models.ItemCategory>): void;
  getItemCategoryById(companyId: string, itemCategoryId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ItemCategory>): void;


  /**
   * @summary Delete an itemCategory in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemCategoryId id for itemCategory
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteItemCategoryByIdWithHttpOperationResponse(companyId: string, itemCategoryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an itemCategory in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemCategoryId id for itemCategory
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteItemCategoryById(companyId: string, itemCategoryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteItemCategoryById(companyId: string, itemCategoryId: string, callback: ServiceCallback<void>): void;
  deleteItemCategoryById(companyId: string, itemCategoryId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified itemCategory
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the itemCategory entity
   *
   * @param {string} [body.code] The code property for the itemCategory entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * itemCategory entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the itemCategory entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemCategoryId id for itemCategory
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<ItemCategory>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchItemCategoryByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, itemCategoryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ItemCategory>>;

  /**
   * @summary Lets the user patch the specified itemCategory
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the itemCategory entity
   *
   * @param {string} [body.code] The code property for the itemCategory entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * itemCategory entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the itemCategory entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} itemCategoryId id for itemCategory
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {ItemCategory} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {ItemCategory} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link ItemCategory} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchItemCategoryById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, itemCategoryId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ItemCategory>;
  patchItemCategoryById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, itemCategoryId: string, callback: ServiceCallback<models.ItemCategory>): void;
  patchItemCategoryById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, itemCategoryId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ItemCategory>): void;


  /**
   * @summary Returns a list of cashFlowStatement
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCashFlowStatementOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCashFlowStatementWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCashFlowStatementOKResponse>>;

  /**
   * @summary Returns a list of cashFlowStatement
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCashFlowStatementOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCashFlowStatementOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCashFlowStatementOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCashFlowStatement(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCashFlowStatementOKResponse>;
  getCashFlowStatement(companyId: string, callback: ServiceCallback<models.GetCashFlowStatementOKResponse>): void;
  getCashFlowStatement(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCashFlowStatementOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an cashFlowStatement
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} cashFlowStatementLineNumber lineNumber for cashFlowStatement
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CashFlowStatement>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCashFlowStatementByLineNumberWithHttpOperationResponse(companyId: string, cashFlowStatementLineNumber: number, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CashFlowStatement>>;

  /**
   * @summary Retrieve the properties and relationships of an cashFlowStatement
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} cashFlowStatementLineNumber lineNumber for cashFlowStatement
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CashFlowStatement} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CashFlowStatement} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CashFlowStatement} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCashFlowStatementByLineNumber(companyId: string, cashFlowStatementLineNumber: number, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CashFlowStatement>;
  getCashFlowStatementByLineNumber(companyId: string, cashFlowStatementLineNumber: number, callback: ServiceCallback<models.CashFlowStatement>): void;
  getCashFlowStatementByLineNumber(companyId: string, cashFlowStatementLineNumber: number, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CashFlowStatement>): void;


  /**
   * @summary Returns a list of countriesRegions
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCountriesRegionsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCountriesRegionsWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCountriesRegionsOKResponse>>;

  /**
   * @summary Returns a list of countriesRegions
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCountriesRegionsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCountriesRegionsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCountriesRegionsOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCountriesRegions(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCountriesRegionsOKResponse>;
  getCountriesRegions(companyId: string, callback: ServiceCallback<models.GetCountriesRegionsOKResponse>): void;
  getCountriesRegions(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCountriesRegionsOKResponse>): void;


  /**
   * @summary Creates a countryRegion in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the countryRegion entity
   *
   * @param {string} [body.code] The code property for the countryRegion entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * countryRegion entity
   *
   * @param {string} [body.addressFormat] The addressFormat property for the
   * countryRegion entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the countryRegion entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CountryRegion>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postCountryRegionWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CountryRegion>>;

  /**
   * @summary Creates a countryRegion in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the countryRegion entity
   *
   * @param {string} [body.code] The code property for the countryRegion entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * countryRegion entity
   *
   * @param {string} [body.addressFormat] The addressFormat property for the
   * countryRegion entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the countryRegion entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CountryRegion} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CountryRegion} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CountryRegion} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postCountryRegion(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CountryRegion>;
  postCountryRegion(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.CountryRegion>): void;
  postCountryRegion(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CountryRegion>): void;


  /**
   * @summary Retrieve the properties and relationships of an countryRegion
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} countryRegionId id for countryRegion
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CountryRegion>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCountryRegionByIdWithHttpOperationResponse(companyId: string, countryRegionId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CountryRegion>>;

  /**
   * @summary Retrieve the properties and relationships of an countryRegion
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} countryRegionId id for countryRegion
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CountryRegion} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CountryRegion} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CountryRegion} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCountryRegionById(companyId: string, countryRegionId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CountryRegion>;
  getCountryRegionById(companyId: string, countryRegionId: string, callback: ServiceCallback<models.CountryRegion>): void;
  getCountryRegionById(companyId: string, countryRegionId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CountryRegion>): void;


  /**
   * @summary Delete an countryRegion in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} countryRegionId id for countryRegion
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteCountryRegionByIdWithHttpOperationResponse(companyId: string, countryRegionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an countryRegion in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} countryRegionId id for countryRegion
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteCountryRegionById(companyId: string, countryRegionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteCountryRegionById(companyId: string, countryRegionId: string, callback: ServiceCallback<void>): void;
  deleteCountryRegionById(companyId: string, countryRegionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified countryRegion
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the countryRegion entity
   *
   * @param {string} [body.code] The code property for the countryRegion entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * countryRegion entity
   *
   * @param {string} [body.addressFormat] The addressFormat property for the
   * countryRegion entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the countryRegion entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} countryRegionId id for countryRegion
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CountryRegion>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchCountryRegionByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, countryRegionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CountryRegion>>;

  /**
   * @summary Lets the user patch the specified countryRegion
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the countryRegion entity
   *
   * @param {string} [body.code] The code property for the countryRegion entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * countryRegion entity
   *
   * @param {string} [body.addressFormat] The addressFormat property for the
   * countryRegion entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the countryRegion entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} countryRegionId id for countryRegion
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CountryRegion} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CountryRegion} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CountryRegion} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchCountryRegionById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, countryRegionId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CountryRegion>;
  patchCountryRegionById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, countryRegionId: string, callback: ServiceCallback<models.CountryRegion>): void;
  patchCountryRegionById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, countryRegionId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CountryRegion>): void;


  /**
   * @summary Returns a list of salesOrders
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesOrdersOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesOrdersWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesOrdersOKResponse>>;

  /**
   * @summary Returns a list of salesOrders
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesOrdersOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesOrdersOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesOrdersOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesOrders(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesOrdersOKResponse>;
  getSalesOrders(companyId: string, callback: ServiceCallback<models.GetSalesOrdersOKResponse>): void;
  getSalesOrders(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesOrdersOKResponse>): void;


  /**
   * @summary Creates a salesOrder in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesOrder entity
   *
   * @param {string} [body.number] The number property for the salesOrder entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesOrder entity
   *
   * @param {date} [body.orderDate] The orderDate property for the salesOrder
   * entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesOrder
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesOrder
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesOrder entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesOrder entity
   *
   * @param {string} [body.billToName] The billToName property for the salesOrder
   * entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesOrder entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesOrder entity
   *
   * @param {string} [body.shipToName] The shipToName property for the salesOrder
   * entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesOrder entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesOrder
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesOrder entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesOrder entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesOrder entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesOrder entity
   *
   * @param {boolean} [body.partialShipping] The partialShipping property for the
   * salesOrder entity
   *
   * @param {date} [body.requestedDeliveryDate] The requestedDeliveryDate
   * property for the salesOrder entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrder entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrder entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesOrder entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrder entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesOrder entity
   *
   * @param {boolean} [body.fullyShipped] The fullyShipped property for the
   * salesOrder entity
   *
   * @param {string} [body.status] The status property for the salesOrder entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesOrder entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesOrder entity
   *
   * @param {string} [body.email] The email property for the salesOrder entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrder>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesOrderWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrder>>;

  /**
   * @summary Creates a salesOrder in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesOrder entity
   *
   * @param {string} [body.number] The number property for the salesOrder entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesOrder entity
   *
   * @param {date} [body.orderDate] The orderDate property for the salesOrder
   * entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesOrder
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesOrder
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesOrder entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesOrder entity
   *
   * @param {string} [body.billToName] The billToName property for the salesOrder
   * entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesOrder entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesOrder entity
   *
   * @param {string} [body.shipToName] The shipToName property for the salesOrder
   * entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesOrder entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesOrder
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesOrder entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesOrder entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesOrder entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesOrder entity
   *
   * @param {boolean} [body.partialShipping] The partialShipping property for the
   * salesOrder entity
   *
   * @param {date} [body.requestedDeliveryDate] The requestedDeliveryDate
   * property for the salesOrder entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrder entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrder entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesOrder entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrder entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesOrder entity
   *
   * @param {boolean} [body.fullyShipped] The fullyShipped property for the
   * salesOrder entity
   *
   * @param {string} [body.status] The status property for the salesOrder entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesOrder entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesOrder entity
   *
   * @param {string} [body.email] The email property for the salesOrder entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrder} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrder} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrder} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesOrder(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrder>;
  postSalesOrder(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.SalesOrder>): void;
  postSalesOrder(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrder>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesOrder object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrder>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesOrderByIdWithHttpOperationResponse(companyId: string, salesOrderId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrder>>;

  /**
   * @summary Retrieve the properties and relationships of an salesOrder object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrder} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrder} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrder} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesOrderById(companyId: string, salesOrderId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrder>;
  getSalesOrderById(companyId: string, salesOrderId: string, callback: ServiceCallback<models.SalesOrder>): void;
  getSalesOrderById(companyId: string, salesOrderId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrder>): void;


  /**
   * @summary Delete an salesOrder in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesOrderByIdWithHttpOperationResponse(companyId: string, salesOrderId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesOrder in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesOrderById(companyId: string, salesOrderId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesOrderById(companyId: string, salesOrderId: string, callback: ServiceCallback<void>): void;
  deleteSalesOrderById(companyId: string, salesOrderId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesOrder
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesOrder entity
   *
   * @param {string} [body.number] The number property for the salesOrder entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesOrder entity
   *
   * @param {date} [body.orderDate] The orderDate property for the salesOrder
   * entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesOrder
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesOrder
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesOrder entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesOrder entity
   *
   * @param {string} [body.billToName] The billToName property for the salesOrder
   * entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesOrder entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesOrder entity
   *
   * @param {string} [body.shipToName] The shipToName property for the salesOrder
   * entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesOrder entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesOrder
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesOrder entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesOrder entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesOrder entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesOrder entity
   *
   * @param {boolean} [body.partialShipping] The partialShipping property for the
   * salesOrder entity
   *
   * @param {date} [body.requestedDeliveryDate] The requestedDeliveryDate
   * property for the salesOrder entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrder entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrder entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesOrder entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrder entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesOrder entity
   *
   * @param {boolean} [body.fullyShipped] The fullyShipped property for the
   * salesOrder entity
   *
   * @param {string} [body.status] The status property for the salesOrder entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesOrder entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesOrder entity
   *
   * @param {string} [body.email] The email property for the salesOrder entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrder>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesOrderByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrder>>;

  /**
   * @summary Lets the user patch the specified salesOrder
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesOrder entity
   *
   * @param {string} [body.number] The number property for the salesOrder entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesOrder entity
   *
   * @param {date} [body.orderDate] The orderDate property for the salesOrder
   * entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesOrder
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesOrder
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesOrder entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesOrder entity
   *
   * @param {string} [body.billToName] The billToName property for the salesOrder
   * entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesOrder entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesOrder entity
   *
   * @param {string} [body.shipToName] The shipToName property for the salesOrder
   * entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesOrder entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesOrder
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesOrder entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesOrder entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesOrder entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesOrder entity
   *
   * @param {boolean} [body.partialShipping] The partialShipping property for the
   * salesOrder entity
   *
   * @param {date} [body.requestedDeliveryDate] The requestedDeliveryDate
   * property for the salesOrder entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrder entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrder entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesOrder entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrder entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesOrder entity
   *
   * @param {boolean} [body.fullyShipped] The fullyShipped property for the
   * salesOrder entity
   *
   * @param {string} [body.status] The status property for the salesOrder entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesOrder entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesOrder entity
   *
   * @param {string} [body.email] The email property for the salesOrder entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrder} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrder} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrder} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesOrderById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrder>;
  patchSalesOrderById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, callback: ServiceCallback<models.SalesOrder>): void;
  patchSalesOrderById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrder>): void;


  /**
   * @summary Returns a list of salesOrderLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesOrderLinesForSalesOrderOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesOrderLinesForSalesOrderWithHttpOperationResponse(companyId: string, salesOrderId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesOrderLinesForSalesOrderOKResponse>>;

  /**
   * @summary Returns a list of salesOrderLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesOrderLinesForSalesOrderOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesOrderLinesForSalesOrderOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesOrderLinesForSalesOrderOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesOrderLinesForSalesOrder(companyId: string, salesOrderId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesOrderLinesForSalesOrderOKResponse>;
  getSalesOrderLinesForSalesOrder(companyId: string, salesOrderId: string, callback: ServiceCallback<models.GetSalesOrderLinesForSalesOrderOKResponse>): void;
  getSalesOrderLinesForSalesOrder(companyId: string, salesOrderId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesOrderLinesForSalesOrderOKResponse>): void;


  /**
   * @summary Creates a salesOrderLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesOrderLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesOrderLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesOrderLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesOrderLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesOrderLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesOrderLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.quantity] The quantity property for the salesOrderLine
   * entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesOrderLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrderLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesOrderLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesOrderLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesOrderLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesOrderLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesOrderLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesOrderLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shippedQuantity] The shippedQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.invoicedQuantity] The invoicedQuantity property for
   * the salesOrderLine entity
   *
   * @param {number} [body.invoiceQuantity] The invoiceQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shipQuantity] The shipQuantity property for the
   * salesOrderLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrderLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesOrderLineForSalesOrderWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrderLine>>;

  /**
   * @summary Creates a salesOrderLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesOrderLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesOrderLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesOrderLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesOrderLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesOrderLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesOrderLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.quantity] The quantity property for the salesOrderLine
   * entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesOrderLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrderLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesOrderLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesOrderLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesOrderLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesOrderLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesOrderLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesOrderLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shippedQuantity] The shippedQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.invoicedQuantity] The invoicedQuantity property for
   * the salesOrderLine entity
   *
   * @param {number} [body.invoiceQuantity] The invoiceQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shipQuantity] The shipQuantity property for the
   * salesOrderLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrderLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrderLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrderLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesOrderLineForSalesOrder(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrderLine>;
  postSalesOrderLineForSalesOrder(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, callback: ServiceCallback<models.SalesOrderLine>): void;
  postSalesOrderLineForSalesOrder(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrderLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesOrderLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrderLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesOrderLineForSalesOrderByIdWithHttpOperationResponse(companyId: string, salesOrderId: string, salesOrderLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrderLine>>;

  /**
   * @summary Retrieve the properties and relationships of an salesOrderLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrderLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrderLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrderLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesOrderLineForSalesOrderById(companyId: string, salesOrderId: string, salesOrderLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrderLine>;
  getSalesOrderLineForSalesOrderById(companyId: string, salesOrderId: string, salesOrderLineId: string, callback: ServiceCallback<models.SalesOrderLine>): void;
  getSalesOrderLineForSalesOrderById(companyId: string, salesOrderId: string, salesOrderLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrderLine>): void;


  /**
   * @summary Delete an salesOrderLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesOrderLineForSalesOrderByIdByIdWithHttpOperationResponse(companyId: string, salesOrderId: string, salesOrderLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesOrderLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesOrderLineForSalesOrderByIdById(companyId: string, salesOrderId: string, salesOrderLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesOrderLineForSalesOrderByIdById(companyId: string, salesOrderId: string, salesOrderLineId: string, callback: ServiceCallback<void>): void;
  deleteSalesOrderLineForSalesOrderByIdById(companyId: string, salesOrderId: string, salesOrderLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesOrderLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesOrderLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesOrderLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesOrderLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesOrderLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesOrderLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesOrderLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.quantity] The quantity property for the salesOrderLine
   * entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesOrderLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrderLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesOrderLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesOrderLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesOrderLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesOrderLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesOrderLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesOrderLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shippedQuantity] The shippedQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.invoicedQuantity] The invoicedQuantity property for
   * the salesOrderLine entity
   *
   * @param {number} [body.invoiceQuantity] The invoiceQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shipQuantity] The shipQuantity property for the
   * salesOrderLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrderLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesOrderLineForSalesOrderByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, salesOrderLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrderLine>>;

  /**
   * @summary Lets the user patch the specified salesOrderLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesOrderLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesOrderLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesOrderLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesOrderLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesOrderLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesOrderLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.quantity] The quantity property for the salesOrderLine
   * entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesOrderLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrderLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesOrderLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesOrderLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesOrderLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesOrderLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesOrderLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesOrderLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shippedQuantity] The shippedQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.invoicedQuantity] The invoicedQuantity property for
   * the salesOrderLine entity
   *
   * @param {number} [body.invoiceQuantity] The invoiceQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shipQuantity] The shipQuantity property for the
   * salesOrderLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesOrderId id for salesOrder
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrderLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrderLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrderLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesOrderLineForSalesOrderByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, salesOrderLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrderLine>;
  patchSalesOrderLineForSalesOrderByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, salesOrderLineId: string, callback: ServiceCallback<models.SalesOrderLine>): void;
  patchSalesOrderLineForSalesOrderByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderId: string, salesOrderLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrderLine>): void;


  /**
   * @summary Returns a list of salesOrderLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesOrderLinesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesOrderLinesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesOrderLinesOKResponse>>;

  /**
   * @summary Returns a list of salesOrderLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesOrderLinesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesOrderLinesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesOrderLinesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesOrderLines(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesOrderLinesOKResponse>;
  getSalesOrderLines(companyId: string, callback: ServiceCallback<models.GetSalesOrderLinesOKResponse>): void;
  getSalesOrderLines(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesOrderLinesOKResponse>): void;


  /**
   * @summary Creates a salesOrderLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesOrderLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesOrderLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesOrderLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesOrderLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesOrderLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesOrderLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.quantity] The quantity property for the salesOrderLine
   * entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesOrderLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrderLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesOrderLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesOrderLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesOrderLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesOrderLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesOrderLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesOrderLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shippedQuantity] The shippedQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.invoicedQuantity] The invoicedQuantity property for
   * the salesOrderLine entity
   *
   * @param {number} [body.invoiceQuantity] The invoiceQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shipQuantity] The shipQuantity property for the
   * salesOrderLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrderLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesOrderLineWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrderLine>>;

  /**
   * @summary Creates a salesOrderLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesOrderLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesOrderLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesOrderLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesOrderLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesOrderLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesOrderLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.quantity] The quantity property for the salesOrderLine
   * entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesOrderLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrderLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesOrderLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesOrderLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesOrderLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesOrderLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesOrderLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesOrderLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shippedQuantity] The shippedQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.invoicedQuantity] The invoicedQuantity property for
   * the salesOrderLine entity
   *
   * @param {number} [body.invoiceQuantity] The invoiceQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shipQuantity] The shipQuantity property for the
   * salesOrderLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrderLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrderLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrderLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesOrderLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrderLine>;
  postSalesOrderLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.SalesOrderLine>): void;
  postSalesOrderLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrderLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesOrderLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrderLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesOrderLineByIdWithHttpOperationResponse(companyId: string, salesOrderLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrderLine>>;

  /**
   * @summary Retrieve the properties and relationships of an salesOrderLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrderLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrderLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrderLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesOrderLineById(companyId: string, salesOrderLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrderLine>;
  getSalesOrderLineById(companyId: string, salesOrderLineId: string, callback: ServiceCallback<models.SalesOrderLine>): void;
  getSalesOrderLineById(companyId: string, salesOrderLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrderLine>): void;


  /**
   * @summary Delete an salesOrderLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesOrderLineByIdWithHttpOperationResponse(companyId: string, salesOrderLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesOrderLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesOrderLineById(companyId: string, salesOrderLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesOrderLineById(companyId: string, salesOrderLineId: string, callback: ServiceCallback<void>): void;
  deleteSalesOrderLineById(companyId: string, salesOrderLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesOrderLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesOrderLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesOrderLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesOrderLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesOrderLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesOrderLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesOrderLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.quantity] The quantity property for the salesOrderLine
   * entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesOrderLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrderLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesOrderLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesOrderLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesOrderLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesOrderLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesOrderLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesOrderLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shippedQuantity] The shippedQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.invoicedQuantity] The invoicedQuantity property for
   * the salesOrderLine entity
   *
   * @param {number} [body.invoiceQuantity] The invoiceQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shipQuantity] The shipQuantity property for the
   * salesOrderLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesOrderLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesOrderLineByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesOrderLine>>;

  /**
   * @summary Lets the user patch the specified salesOrderLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesOrderLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesOrderLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesOrderLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesOrderLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesOrderLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesOrderLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesOrderLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.quantity] The quantity property for the salesOrderLine
   * entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesOrderLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesOrderLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesOrderLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesOrderLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesOrderLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesOrderLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesOrderLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesOrderLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesOrderLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shippedQuantity] The shippedQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.invoicedQuantity] The invoicedQuantity property for
   * the salesOrderLine entity
   *
   * @param {number} [body.invoiceQuantity] The invoiceQuantity property for the
   * salesOrderLine entity
   *
   * @param {number} [body.shipQuantity] The shipQuantity property for the
   * salesOrderLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesOrderLineId id for salesOrderLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesOrderLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesOrderLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesOrderLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesOrderLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesOrderLine>;
  patchSalesOrderLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderLineId: string, callback: ServiceCallback<models.SalesOrderLine>): void;
  patchSalesOrderLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesOrderLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesOrderLine>): void;


  /**
   * @summary Returns a list of retainedEarningsStatement
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetRetainedEarningsStatementOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getRetainedEarningsStatementWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetRetainedEarningsStatementOKResponse>>;

  /**
   * @summary Returns a list of retainedEarningsStatement
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetRetainedEarningsStatementOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetRetainedEarningsStatementOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetRetainedEarningsStatementOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getRetainedEarningsStatement(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetRetainedEarningsStatementOKResponse>;
  getRetainedEarningsStatement(companyId: string, callback: ServiceCallback<models.GetRetainedEarningsStatementOKResponse>): void;
  getRetainedEarningsStatement(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetRetainedEarningsStatementOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an
   * retainedEarningsStatement object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} retainedEarningsStatementLineNumber lineNumber for
   * retainedEarningsStatement
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<RetainedEarningsStatement>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getRetainedEarningsStatementByLineNumberWithHttpOperationResponse(companyId: string, retainedEarningsStatementLineNumber: number, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RetainedEarningsStatement>>;

  /**
   * @summary Retrieve the properties and relationships of an
   * retainedEarningsStatement object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} retainedEarningsStatementLineNumber lineNumber for
   * retainedEarningsStatement
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {RetainedEarningsStatement} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {RetainedEarningsStatement} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link RetainedEarningsStatement} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getRetainedEarningsStatementByLineNumber(companyId: string, retainedEarningsStatementLineNumber: number, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.RetainedEarningsStatement>;
  getRetainedEarningsStatementByLineNumber(companyId: string, retainedEarningsStatementLineNumber: number, callback: ServiceCallback<models.RetainedEarningsStatement>): void;
  getRetainedEarningsStatementByLineNumber(companyId: string, retainedEarningsStatementLineNumber: number, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RetainedEarningsStatement>): void;


  /**
   * @summary Returns a list of unitsOfMeasure
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetUnitsOfMeasureOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getUnitsOfMeasureWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetUnitsOfMeasureOKResponse>>;

  /**
   * @summary Returns a list of unitsOfMeasure
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetUnitsOfMeasureOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetUnitsOfMeasureOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetUnitsOfMeasureOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getUnitsOfMeasure(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetUnitsOfMeasureOKResponse>;
  getUnitsOfMeasure(companyId: string, callback: ServiceCallback<models.GetUnitsOfMeasureOKResponse>): void;
  getUnitsOfMeasure(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetUnitsOfMeasureOKResponse>): void;


  /**
   * @summary Creates a unitOfMeasure in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the unitOfMeasure entity
   *
   * @param {string} [body.code] The code property for the unitOfMeasure entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * unitOfMeasure entity
   *
   * @param {string} [body.internationalStandardCode] The
   * internationalStandardCode property for the unitOfMeasure entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the unitOfMeasure entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<UnitOfMeasure>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postUnitOfMeasureWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.UnitOfMeasure>>;

  /**
   * @summary Creates a unitOfMeasure in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the unitOfMeasure entity
   *
   * @param {string} [body.code] The code property for the unitOfMeasure entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * unitOfMeasure entity
   *
   * @param {string} [body.internationalStandardCode] The
   * internationalStandardCode property for the unitOfMeasure entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the unitOfMeasure entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {UnitOfMeasure} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {UnitOfMeasure} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link UnitOfMeasure} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postUnitOfMeasure(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.UnitOfMeasure>;
  postUnitOfMeasure(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.UnitOfMeasure>): void;
  postUnitOfMeasure(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UnitOfMeasure>): void;


  /**
   * @summary Retrieve the properties and relationships of an unitOfMeasure
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} unitOfMeasureId id for unitOfMeasure
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<UnitOfMeasure>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getUnitOfMeasureByIdWithHttpOperationResponse(companyId: string, unitOfMeasureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.UnitOfMeasure>>;

  /**
   * @summary Retrieve the properties and relationships of an unitOfMeasure
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} unitOfMeasureId id for unitOfMeasure
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {UnitOfMeasure} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {UnitOfMeasure} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link UnitOfMeasure} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getUnitOfMeasureById(companyId: string, unitOfMeasureId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.UnitOfMeasure>;
  getUnitOfMeasureById(companyId: string, unitOfMeasureId: string, callback: ServiceCallback<models.UnitOfMeasure>): void;
  getUnitOfMeasureById(companyId: string, unitOfMeasureId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UnitOfMeasure>): void;


  /**
   * @summary Delete an unitOfMeasure in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} unitOfMeasureId id for unitOfMeasure
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteUnitOfMeasureByIdWithHttpOperationResponse(companyId: string, unitOfMeasureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an unitOfMeasure in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} unitOfMeasureId id for unitOfMeasure
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteUnitOfMeasureById(companyId: string, unitOfMeasureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteUnitOfMeasureById(companyId: string, unitOfMeasureId: string, callback: ServiceCallback<void>): void;
  deleteUnitOfMeasureById(companyId: string, unitOfMeasureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified unitOfMeasure
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the unitOfMeasure entity
   *
   * @param {string} [body.code] The code property for the unitOfMeasure entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * unitOfMeasure entity
   *
   * @param {string} [body.internationalStandardCode] The
   * internationalStandardCode property for the unitOfMeasure entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the unitOfMeasure entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} unitOfMeasureId id for unitOfMeasure
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<UnitOfMeasure>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchUnitOfMeasureByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, unitOfMeasureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.UnitOfMeasure>>;

  /**
   * @summary Lets the user patch the specified unitOfMeasure
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the unitOfMeasure entity
   *
   * @param {string} [body.code] The code property for the unitOfMeasure entity
   *
   * @param {string} [body.displayName] The displayName property for the
   * unitOfMeasure entity
   *
   * @param {string} [body.internationalStandardCode] The
   * internationalStandardCode property for the unitOfMeasure entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the unitOfMeasure entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} unitOfMeasureId id for unitOfMeasure
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {UnitOfMeasure} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {UnitOfMeasure} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link UnitOfMeasure} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchUnitOfMeasureById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, unitOfMeasureId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.UnitOfMeasure>;
  patchUnitOfMeasureById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, unitOfMeasureId: string, callback: ServiceCallback<models.UnitOfMeasure>): void;
  patchUnitOfMeasureById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, unitOfMeasureId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UnitOfMeasure>): void;


  /**
   * @summary Returns a list of agedAccountsReceivable
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetAgedAccountsReceivableOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAgedAccountsReceivableWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetAgedAccountsReceivableOKResponse>>;

  /**
   * @summary Returns a list of agedAccountsReceivable
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetAgedAccountsReceivableOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetAgedAccountsReceivableOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetAgedAccountsReceivableOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAgedAccountsReceivable(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetAgedAccountsReceivableOKResponse>;
  getAgedAccountsReceivable(companyId: string, callback: ServiceCallback<models.GetAgedAccountsReceivableOKResponse>): void;
  getAgedAccountsReceivable(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetAgedAccountsReceivableOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an
   * agedAccountsReceivable object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} agedAccountsReceivableCustomerId customerId for
   * agedAccountsReceivable
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<AgedAccountsReceivable>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAgedAccountsReceivableByCustomerIdWithHttpOperationResponse(companyId: string, agedAccountsReceivableCustomerId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AgedAccountsReceivable>>;

  /**
   * @summary Retrieve the properties and relationships of an
   * agedAccountsReceivable object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} agedAccountsReceivableCustomerId customerId for
   * agedAccountsReceivable
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {AgedAccountsReceivable} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {AgedAccountsReceivable} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link AgedAccountsReceivable} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAgedAccountsReceivableByCustomerId(companyId: string, agedAccountsReceivableCustomerId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.AgedAccountsReceivable>;
  getAgedAccountsReceivableByCustomerId(companyId: string, agedAccountsReceivableCustomerId: string, callback: ServiceCallback<models.AgedAccountsReceivable>): void;
  getAgedAccountsReceivableByCustomerId(companyId: string, agedAccountsReceivableCustomerId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AgedAccountsReceivable>): void;


  /**
   * @summary Returns a list of agedAccountsPayable
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetAgedAccountsPayableOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAgedAccountsPayableWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetAgedAccountsPayableOKResponse>>;

  /**
   * @summary Returns a list of agedAccountsPayable
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetAgedAccountsPayableOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetAgedAccountsPayableOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetAgedAccountsPayableOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAgedAccountsPayable(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetAgedAccountsPayableOKResponse>;
  getAgedAccountsPayable(companyId: string, callback: ServiceCallback<models.GetAgedAccountsPayableOKResponse>): void;
  getAgedAccountsPayable(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetAgedAccountsPayableOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an agedAccountsPayable
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} agedAccountsPayableVendorId vendorId for agedAccountsPayable
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<AgedAccountsPayable>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getAgedAccountsPayableByVendorIdWithHttpOperationResponse(companyId: string, agedAccountsPayableVendorId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AgedAccountsPayable>>;

  /**
   * @summary Retrieve the properties and relationships of an agedAccountsPayable
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} agedAccountsPayableVendorId vendorId for agedAccountsPayable
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {AgedAccountsPayable} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {AgedAccountsPayable} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link AgedAccountsPayable} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getAgedAccountsPayableByVendorId(companyId: string, agedAccountsPayableVendorId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.AgedAccountsPayable>;
  getAgedAccountsPayableByVendorId(companyId: string, agedAccountsPayableVendorId: string, callback: ServiceCallback<models.AgedAccountsPayable>): void;
  getAgedAccountsPayableByVendorId(companyId: string, agedAccountsPayableVendorId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AgedAccountsPayable>): void;


  /**
   * @summary Returns a list of balanceSheet
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetBalanceSheetOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getBalanceSheetWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetBalanceSheetOKResponse>>;

  /**
   * @summary Returns a list of balanceSheet
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetBalanceSheetOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetBalanceSheetOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetBalanceSheetOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getBalanceSheet(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetBalanceSheetOKResponse>;
  getBalanceSheet(companyId: string, callback: ServiceCallback<models.GetBalanceSheetOKResponse>): void;
  getBalanceSheet(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetBalanceSheetOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an balanceSheet object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} balanceSheetLineNumber lineNumber for balanceSheet
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<BalanceSheet>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getBalanceSheetByLineNumberWithHttpOperationResponse(companyId: string, balanceSheetLineNumber: number, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BalanceSheet>>;

  /**
   * @summary Retrieve the properties and relationships of an balanceSheet object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} balanceSheetLineNumber lineNumber for balanceSheet
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {BalanceSheet} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {BalanceSheet} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link BalanceSheet} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getBalanceSheetByLineNumber(companyId: string, balanceSheetLineNumber: number, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.BalanceSheet>;
  getBalanceSheetByLineNumber(companyId: string, balanceSheetLineNumber: number, callback: ServiceCallback<models.BalanceSheet>): void;
  getBalanceSheetByLineNumber(companyId: string, balanceSheetLineNumber: number, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BalanceSheet>): void;


  /**
   * @summary Returns a list of trialBalance
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetTrialBalanceOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTrialBalanceWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetTrialBalanceOKResponse>>;

  /**
   * @summary Returns a list of trialBalance
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetTrialBalanceOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetTrialBalanceOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetTrialBalanceOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTrialBalance(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetTrialBalanceOKResponse>;
  getTrialBalance(companyId: string, callback: ServiceCallback<models.GetTrialBalanceOKResponse>): void;
  getTrialBalance(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetTrialBalanceOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an trialBalance object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} trialBalanceNumber number for trialBalance
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TrialBalance>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTrialBalanceByNumberWithHttpOperationResponse(companyId: string, trialBalanceNumber: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TrialBalance>>;

  /**
   * @summary Retrieve the properties and relationships of an trialBalance object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} trialBalanceNumber number for trialBalance
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TrialBalance} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TrialBalance} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TrialBalance} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTrialBalanceByNumber(companyId: string, trialBalanceNumber: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.TrialBalance>;
  getTrialBalanceByNumber(companyId: string, trialBalanceNumber: string, callback: ServiceCallback<models.TrialBalance>): void;
  getTrialBalanceByNumber(companyId: string, trialBalanceNumber: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TrialBalance>): void;


  /**
   * @summary Returns a list of incomeStatement
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetIncomeStatementOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getIncomeStatementWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetIncomeStatementOKResponse>>;

  /**
   * @summary Returns a list of incomeStatement
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetIncomeStatementOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetIncomeStatementOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetIncomeStatementOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getIncomeStatement(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetIncomeStatementOKResponse>;
  getIncomeStatement(companyId: string, callback: ServiceCallback<models.GetIncomeStatementOKResponse>): void;
  getIncomeStatement(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetIncomeStatementOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an incomeStatement
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} incomeStatementLineNumber lineNumber for incomeStatement
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<IncomeStatement>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getIncomeStatementByLineNumberWithHttpOperationResponse(companyId: string, incomeStatementLineNumber: number, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IncomeStatement>>;

  /**
   * @summary Retrieve the properties and relationships of an incomeStatement
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} incomeStatementLineNumber lineNumber for incomeStatement
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {IncomeStatement} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {IncomeStatement} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link IncomeStatement} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getIncomeStatementByLineNumber(companyId: string, incomeStatementLineNumber: number, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.IncomeStatement>;
  getIncomeStatementByLineNumber(companyId: string, incomeStatementLineNumber: number, callback: ServiceCallback<models.IncomeStatement>): void;
  getIncomeStatementByLineNumber(companyId: string, incomeStatementLineNumber: number, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IncomeStatement>): void;


  /**
   * @summary Returns a list of taxAreas
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetTaxAreasOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTaxAreasWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetTaxAreasOKResponse>>;

  /**
   * @summary Returns a list of taxAreas
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetTaxAreasOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetTaxAreasOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetTaxAreasOKResponse} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTaxAreas(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetTaxAreasOKResponse>;
  getTaxAreas(companyId: string, callback: ServiceCallback<models.GetTaxAreasOKResponse>): void;
  getTaxAreas(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetTaxAreasOKResponse>): void;


  /**
   * @summary Creates a taxArea in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the taxArea entity
   *
   * @param {string} [body.code] The code property for the taxArea entity
   *
   * @param {string} [body.displayName] The displayName property for the taxArea
   * entity
   *
   * @param {string} [body.taxType] The taxType property for the taxArea entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the taxArea entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TaxArea>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postTaxAreaWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TaxArea>>;

  /**
   * @summary Creates a taxArea in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the taxArea entity
   *
   * @param {string} [body.code] The code property for the taxArea entity
   *
   * @param {string} [body.displayName] The displayName property for the taxArea
   * entity
   *
   * @param {string} [body.taxType] The taxType property for the taxArea entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the taxArea entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TaxArea} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TaxArea} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TaxArea} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postTaxArea(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TaxArea>;
  postTaxArea(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.TaxArea>): void;
  postTaxArea(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TaxArea>): void;


  /**
   * @summary Retrieve the properties and relationships of an taxArea object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxAreaId id for taxArea
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TaxArea>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getTaxAreaByIdWithHttpOperationResponse(companyId: string, taxAreaId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TaxArea>>;

  /**
   * @summary Retrieve the properties and relationships of an taxArea object for
   * Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxAreaId id for taxArea
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TaxArea} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TaxArea} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TaxArea} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getTaxAreaById(companyId: string, taxAreaId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.TaxArea>;
  getTaxAreaById(companyId: string, taxAreaId: string, callback: ServiceCallback<models.TaxArea>): void;
  getTaxAreaById(companyId: string, taxAreaId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TaxArea>): void;


  /**
   * @summary Delete an taxArea in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxAreaId id for taxArea
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteTaxAreaByIdWithHttpOperationResponse(companyId: string, taxAreaId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an taxArea in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxAreaId id for taxArea
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteTaxAreaById(companyId: string, taxAreaId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteTaxAreaById(companyId: string, taxAreaId: string, callback: ServiceCallback<void>): void;
  deleteTaxAreaById(companyId: string, taxAreaId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified taxArea
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the taxArea entity
   *
   * @param {string} [body.code] The code property for the taxArea entity
   *
   * @param {string} [body.displayName] The displayName property for the taxArea
   * entity
   *
   * @param {string} [body.taxType] The taxType property for the taxArea entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the taxArea entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxAreaId id for taxArea
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<TaxArea>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchTaxAreaByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, taxAreaId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TaxArea>>;

  /**
   * @summary Lets the user patch the specified taxArea
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the taxArea entity
   *
   * @param {string} [body.code] The code property for the taxArea entity
   *
   * @param {string} [body.displayName] The displayName property for the taxArea
   * entity
   *
   * @param {string} [body.taxType] The taxType property for the taxArea entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the taxArea entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} taxAreaId id for taxArea
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {TaxArea} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {TaxArea} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link TaxArea} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchTaxAreaById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, taxAreaId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TaxArea>;
  patchTaxAreaById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, taxAreaId: string, callback: ServiceCallback<models.TaxArea>): void;
  patchTaxAreaById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, taxAreaId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TaxArea>): void;


  /**
   * @summary Returns a list of salesQuotes
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesQuotesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesQuotesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesQuotesOKResponse>>;

  /**
   * @summary Returns a list of salesQuotes
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesQuotesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesQuotesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesQuotesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesQuotes(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesQuotesOKResponse>;
  getSalesQuotes(companyId: string, callback: ServiceCallback<models.GetSalesQuotesOKResponse>): void;
  getSalesQuotes(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesQuotesOKResponse>): void;


  /**
   * @summary Creates a salesQuote in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesQuote entity
   *
   * @param {string} [body.number] The number property for the salesQuote entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesQuote entity
   *
   * @param {date} [body.documentDate] The documentDate property for the
   * salesQuote entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesQuote entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesQuote
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesQuote
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesQuote entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesQuote entity
   *
   * @param {string} [body.billToName] The billToName property for the salesQuote
   * entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesQuote entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesQuote entity
   *
   * @param {string} [body.shipToName] The shipToName property for the salesQuote
   * entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesQuote entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesQuote
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesQuote entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesQuote entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * salesQuote entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesQuote entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuote entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesQuote entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuote entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesQuote entity
   *
   * @param {string} [body.status] The status property for the salesQuote entity
   *
   * @param {date} [body.sentDate] The sentDate property for the salesQuote
   * entity
   *
   * @param {date} [body.validUntilDate] The validUntilDate property for the
   * salesQuote entity
   *
   * @param {date} [body.acceptedDate] The acceptedDate property for the
   * salesQuote entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesQuote entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesQuote entity
   *
   * @param {string} [body.email] The email property for the salesQuote entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuote>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesQuoteWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuote>>;

  /**
   * @summary Creates a salesQuote in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesQuote entity
   *
   * @param {string} [body.number] The number property for the salesQuote entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesQuote entity
   *
   * @param {date} [body.documentDate] The documentDate property for the
   * salesQuote entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesQuote entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesQuote
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesQuote
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesQuote entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesQuote entity
   *
   * @param {string} [body.billToName] The billToName property for the salesQuote
   * entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesQuote entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesQuote entity
   *
   * @param {string} [body.shipToName] The shipToName property for the salesQuote
   * entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesQuote entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesQuote
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesQuote entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesQuote entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * salesQuote entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesQuote entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuote entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesQuote entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuote entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesQuote entity
   *
   * @param {string} [body.status] The status property for the salesQuote entity
   *
   * @param {date} [body.sentDate] The sentDate property for the salesQuote
   * entity
   *
   * @param {date} [body.validUntilDate] The validUntilDate property for the
   * salesQuote entity
   *
   * @param {date} [body.acceptedDate] The acceptedDate property for the
   * salesQuote entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesQuote entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesQuote entity
   *
   * @param {string} [body.email] The email property for the salesQuote entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuote} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuote} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuote} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesQuote(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuote>;
  postSalesQuote(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.SalesQuote>): void;
  postSalesQuote(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuote>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesQuote object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuote>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesQuoteByIdWithHttpOperationResponse(companyId: string, salesQuoteId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuote>>;

  /**
   * @summary Retrieve the properties and relationships of an salesQuote object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuote} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuote} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuote} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesQuoteById(companyId: string, salesQuoteId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuote>;
  getSalesQuoteById(companyId: string, salesQuoteId: string, callback: ServiceCallback<models.SalesQuote>): void;
  getSalesQuoteById(companyId: string, salesQuoteId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuote>): void;


  /**
   * @summary Delete an salesQuote in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesQuoteByIdWithHttpOperationResponse(companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesQuote in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesQuoteById(companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesQuoteById(companyId: string, salesQuoteId: string, callback: ServiceCallback<void>): void;
  deleteSalesQuoteById(companyId: string, salesQuoteId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesQuote
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesQuote entity
   *
   * @param {string} [body.number] The number property for the salesQuote entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesQuote entity
   *
   * @param {date} [body.documentDate] The documentDate property for the
   * salesQuote entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesQuote entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesQuote
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesQuote
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesQuote entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesQuote entity
   *
   * @param {string} [body.billToName] The billToName property for the salesQuote
   * entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesQuote entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesQuote entity
   *
   * @param {string} [body.shipToName] The shipToName property for the salesQuote
   * entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesQuote entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesQuote
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesQuote entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesQuote entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * salesQuote entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesQuote entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuote entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesQuote entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuote entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesQuote entity
   *
   * @param {string} [body.status] The status property for the salesQuote entity
   *
   * @param {date} [body.sentDate] The sentDate property for the salesQuote
   * entity
   *
   * @param {date} [body.validUntilDate] The validUntilDate property for the
   * salesQuote entity
   *
   * @param {date} [body.acceptedDate] The acceptedDate property for the
   * salesQuote entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesQuote entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesQuote entity
   *
   * @param {string} [body.email] The email property for the salesQuote entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuote>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesQuoteByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuote>>;

  /**
   * @summary Lets the user patch the specified salesQuote
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesQuote entity
   *
   * @param {string} [body.number] The number property for the salesQuote entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesQuote entity
   *
   * @param {date} [body.documentDate] The documentDate property for the
   * salesQuote entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesQuote entity
   *
   * @param {uuid} [body.customerId] The customerId property for the salesQuote
   * entity
   *
   * @param {string} [body.contactId] The contactId property for the salesQuote
   * entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesQuote entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesQuote entity
   *
   * @param {string} [body.billToName] The billToName property for the salesQuote
   * entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesQuote entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesQuote entity
   *
   * @param {string} [body.shipToName] The shipToName property for the salesQuote
   * entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * salesQuote entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {object} [body.shippingPostalAddress]
   *
   * @param {string} [body.shippingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.state] The state property for
   * the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.shippingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.shippingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.shippingPostalAddress.picture]
   *
   * @param {array} [body.shippingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.shippingPostalAddress.currency]
   *
   * @param {uuid} [body.shippingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.shippingPostalAddress.currency.amountDecimalPlaces]
   * The amountDecimalPlaces property for the currency entity
   *
   * @param {number}
   * [body.shippingPostalAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shippingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shippingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentTerm.id] The id property
   * for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.shippingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.shippingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shippingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shippingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shippingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shippingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shippingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.shippingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.shippingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date}
   * [body.shippingPostalAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the salesQuote
   * entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesQuote entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesQuote entity
   *
   * @param {uuid} [body.shipmentMethodId] The shipmentMethodId property for the
   * salesQuote entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesQuote entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuote entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesQuote entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuote entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesQuote entity
   *
   * @param {string} [body.status] The status property for the salesQuote entity
   *
   * @param {date} [body.sentDate] The sentDate property for the salesQuote
   * entity
   *
   * @param {date} [body.validUntilDate] The validUntilDate property for the
   * salesQuote entity
   *
   * @param {date} [body.acceptedDate] The acceptedDate property for the
   * salesQuote entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesQuote entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesQuote entity
   *
   * @param {string} [body.email] The email property for the salesQuote entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuote} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuote} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuote} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesQuoteById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuote>;
  patchSalesQuoteById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, callback: ServiceCallback<models.SalesQuote>): void;
  patchSalesQuoteById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuote>): void;


  /**
   * @summary Performs the makeInvoice action for salesQuotes entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  makeInvoiceActionSalesQuotesWithHttpOperationResponse(companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the makeInvoice action for salesQuotes entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  makeInvoiceActionSalesQuotes(companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  makeInvoiceActionSalesQuotes(companyId: string, salesQuoteId: string, callback: ServiceCallback<void>): void;
  makeInvoiceActionSalesQuotes(companyId: string, salesQuoteId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Performs the send action for salesQuotes entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  sendActionSalesQuotesWithHttpOperationResponse(companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the send action for salesQuotes entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  sendActionSalesQuotes(companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  sendActionSalesQuotes(companyId: string, salesQuoteId: string, callback: ServiceCallback<void>): void;
  sendActionSalesQuotes(companyId: string, salesQuoteId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Returns a list of salesQuoteLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesQuoteLinesForSalesQuoteOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesQuoteLinesForSalesQuoteWithHttpOperationResponse(companyId: string, salesQuoteId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesQuoteLinesForSalesQuoteOKResponse>>;

  /**
   * @summary Returns a list of salesQuoteLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesQuoteLinesForSalesQuoteOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesQuoteLinesForSalesQuoteOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesQuoteLinesForSalesQuoteOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesQuoteLinesForSalesQuote(companyId: string, salesQuoteId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesQuoteLinesForSalesQuoteOKResponse>;
  getSalesQuoteLinesForSalesQuote(companyId: string, salesQuoteId: string, callback: ServiceCallback<models.GetSalesQuoteLinesForSalesQuoteOKResponse>): void;
  getSalesQuoteLinesForSalesQuote(companyId: string, salesQuoteId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesQuoteLinesForSalesQuoteOKResponse>): void;


  /**
   * @summary Creates a salesQuoteLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesQuoteLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesQuoteLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesQuoteLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesQuoteLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesQuoteLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.quantity] The quantity property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesQuoteLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesQuoteLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesQuoteLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesQuoteLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesQuoteLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuoteLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesQuoteLineForSalesQuoteWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuoteLine>>;

  /**
   * @summary Creates a salesQuoteLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesQuoteLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesQuoteLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesQuoteLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesQuoteLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesQuoteLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.quantity] The quantity property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesQuoteLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesQuoteLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesQuoteLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesQuoteLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesQuoteLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuoteLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuoteLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuoteLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesQuoteLineForSalesQuote(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuoteLine>;
  postSalesQuoteLineForSalesQuote(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, callback: ServiceCallback<models.SalesQuoteLine>): void;
  postSalesQuoteLineForSalesQuote(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuoteLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesQuoteLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuoteLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesQuoteLineForSalesQuoteByIdWithHttpOperationResponse(companyId: string, salesQuoteId: string, salesQuoteLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuoteLine>>;

  /**
   * @summary Retrieve the properties and relationships of an salesQuoteLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuoteLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuoteLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuoteLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesQuoteLineForSalesQuoteById(companyId: string, salesQuoteId: string, salesQuoteLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuoteLine>;
  getSalesQuoteLineForSalesQuoteById(companyId: string, salesQuoteId: string, salesQuoteLineId: string, callback: ServiceCallback<models.SalesQuoteLine>): void;
  getSalesQuoteLineForSalesQuoteById(companyId: string, salesQuoteId: string, salesQuoteLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuoteLine>): void;


  /**
   * @summary Delete an salesQuoteLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesQuoteLineForSalesQuoteByIdByIdWithHttpOperationResponse(companyId: string, salesQuoteId: string, salesQuoteLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesQuoteLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesQuoteLineForSalesQuoteByIdById(companyId: string, salesQuoteId: string, salesQuoteLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesQuoteLineForSalesQuoteByIdById(companyId: string, salesQuoteId: string, salesQuoteLineId: string, callback: ServiceCallback<void>): void;
  deleteSalesQuoteLineForSalesQuoteByIdById(companyId: string, salesQuoteId: string, salesQuoteLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesQuoteLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesQuoteLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesQuoteLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesQuoteLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesQuoteLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesQuoteLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.quantity] The quantity property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesQuoteLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesQuoteLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesQuoteLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesQuoteLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesQuoteLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuoteLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesQuoteLineForSalesQuoteByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, salesQuoteLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuoteLine>>;

  /**
   * @summary Lets the user patch the specified salesQuoteLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesQuoteLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesQuoteLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesQuoteLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesQuoteLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesQuoteLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.quantity] The quantity property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesQuoteLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesQuoteLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesQuoteLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesQuoteLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesQuoteLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuoteLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuoteLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuoteLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesQuoteLineForSalesQuoteByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, salesQuoteLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuoteLine>;
  patchSalesQuoteLineForSalesQuoteByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, salesQuoteLineId: string, callback: ServiceCallback<models.SalesQuoteLine>): void;
  patchSalesQuoteLineForSalesQuoteByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteId: string, salesQuoteLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuoteLine>): void;


  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPdfDocumentForSalesQuoteOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentForSalesQuoteWithHttpOperationResponse(companyId: string, salesQuoteId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPdfDocumentForSalesQuoteOKResponse>>;

  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPdfDocumentForSalesQuoteOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPdfDocumentForSalesQuoteOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPdfDocumentForSalesQuoteOKResponse} for
   *                      more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentForSalesQuote(companyId: string, salesQuoteId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPdfDocumentForSalesQuoteOKResponse>;
  getPdfDocumentForSalesQuote(companyId: string, salesQuoteId: string, callback: ServiceCallback<models.GetPdfDocumentForSalesQuoteOKResponse>): void;
  getPdfDocumentForSalesQuote(companyId: string, salesQuoteId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPdfDocumentForSalesQuoteOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PdfDocument>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentForSalesQuoteByIdWithHttpOperationResponse(companyId: string, salesQuoteId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PdfDocument>>;

  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesQuoteId id for salesQuote
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PdfDocument} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PdfDocument} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PdfDocument} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentForSalesQuoteById(companyId: string, salesQuoteId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PdfDocument>;
  getPdfDocumentForSalesQuoteById(companyId: string, salesQuoteId: string, pdfDocumentId: string, callback: ServiceCallback<models.PdfDocument>): void;
  getPdfDocumentForSalesQuoteById(companyId: string, salesQuoteId: string, pdfDocumentId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PdfDocument>): void;


  /**
   * @summary Returns a list of salesQuoteLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesQuoteLinesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesQuoteLinesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesQuoteLinesOKResponse>>;

  /**
   * @summary Returns a list of salesQuoteLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesQuoteLinesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesQuoteLinesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesQuoteLinesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesQuoteLines(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesQuoteLinesOKResponse>;
  getSalesQuoteLines(companyId: string, callback: ServiceCallback<models.GetSalesQuoteLinesOKResponse>): void;
  getSalesQuoteLines(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesQuoteLinesOKResponse>): void;


  /**
   * @summary Creates a salesQuoteLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesQuoteLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesQuoteLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesQuoteLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesQuoteLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesQuoteLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.quantity] The quantity property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesQuoteLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesQuoteLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesQuoteLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesQuoteLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesQuoteLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuoteLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesQuoteLineWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuoteLine>>;

  /**
   * @summary Creates a salesQuoteLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesQuoteLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesQuoteLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesQuoteLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesQuoteLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesQuoteLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.quantity] The quantity property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesQuoteLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesQuoteLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesQuoteLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesQuoteLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesQuoteLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuoteLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuoteLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuoteLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesQuoteLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuoteLine>;
  postSalesQuoteLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.SalesQuoteLine>): void;
  postSalesQuoteLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuoteLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesQuoteLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuoteLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesQuoteLineByIdWithHttpOperationResponse(companyId: string, salesQuoteLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuoteLine>>;

  /**
   * @summary Retrieve the properties and relationships of an salesQuoteLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuoteLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuoteLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuoteLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesQuoteLineById(companyId: string, salesQuoteLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuoteLine>;
  getSalesQuoteLineById(companyId: string, salesQuoteLineId: string, callback: ServiceCallback<models.SalesQuoteLine>): void;
  getSalesQuoteLineById(companyId: string, salesQuoteLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuoteLine>): void;


  /**
   * @summary Delete an salesQuoteLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesQuoteLineByIdWithHttpOperationResponse(companyId: string, salesQuoteLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesQuoteLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesQuoteLineById(companyId: string, salesQuoteLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesQuoteLineById(companyId: string, salesQuoteLineId: string, callback: ServiceCallback<void>): void;
  deleteSalesQuoteLineById(companyId: string, salesQuoteLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesQuoteLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesQuoteLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesQuoteLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesQuoteLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesQuoteLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesQuoteLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.quantity] The quantity property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesQuoteLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesQuoteLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesQuoteLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesQuoteLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesQuoteLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesQuoteLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesQuoteLineByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesQuoteLine>>;

  /**
   * @summary Lets the user patch the specified salesQuoteLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesQuoteLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.sequence] The sequence property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesQuoteLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the salesQuoteLine
   * entity
   *
   * @param {string} [body.lineType] The lineType property for the salesQuoteLine
   * entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesQuoteLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesQuoteLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.quantity] The quantity property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesQuoteLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesQuoteLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesQuoteLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the salesQuoteLine
   * entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesQuoteLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesQuoteLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesQuoteLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesQuoteLineId id for salesQuoteLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesQuoteLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesQuoteLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesQuoteLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesQuoteLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesQuoteLine>;
  patchSalesQuoteLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteLineId: string, callback: ServiceCallback<models.SalesQuoteLine>): void;
  patchSalesQuoteLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesQuoteLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesQuoteLine>): void;


  /**
   * @summary Returns a list of salesCreditMemos
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesCreditMemosOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesCreditMemosWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesCreditMemosOKResponse>>;

  /**
   * @summary Returns a list of salesCreditMemos
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesCreditMemosOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesCreditMemosOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesCreditMemosOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesCreditMemos(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesCreditMemosOKResponse>;
  getSalesCreditMemos(companyId: string, callback: ServiceCallback<models.GetSalesCreditMemosOKResponse>): void;
  getSalesCreditMemos(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesCreditMemosOKResponse>): void;


  /**
   * @summary Creates a salesCreditMemo in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesCreditMemo entity
   *
   * @param {string} [body.number] The number property for the salesCreditMemo
   * entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesCreditMemo entity
   *
   * @param {date} [body.creditMemoDate] The creditMemoDate property for the
   * salesCreditMemo entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesCreditMemo
   * entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.billToName] The billToName property for the
   * salesCreditMemo entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesCreditMemo entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {string} [body.billingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.billingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.billingPostalAddress.picture]
   *
   * @param {array} [body.billingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.billingPostalAddress.currency]
   *
   * @param {uuid} [body.billingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.billingPostalAddress.currency.amountRoundingPrecision]
   * The amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.billingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.billingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.billingPostalAddress.paymentTerm.id] The id property for
   * the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.billingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.billingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.billingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.billingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.billingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.billingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.billingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.billingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.billingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.billingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.billingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.billingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.billingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date} [body.billingPostalAddress.paymentMethod.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesCreditMemo entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesCreditMemo entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesCreditMemo entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemo entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemo entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesCreditMemo entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemo entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesCreditMemo entity
   *
   * @param {string} [body.status] The status property for the salesCreditMemo
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesCreditMemo entity
   *
   * @param {uuid} [body.invoiceId] The invoiceId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.invoiceNumber] The invoiceNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.email] The email property for the salesCreditMemo
   * entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemo>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesCreditMemoWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemo>>;

  /**
   * @summary Creates a salesCreditMemo in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesCreditMemo entity
   *
   * @param {string} [body.number] The number property for the salesCreditMemo
   * entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesCreditMemo entity
   *
   * @param {date} [body.creditMemoDate] The creditMemoDate property for the
   * salesCreditMemo entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesCreditMemo
   * entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.billToName] The billToName property for the
   * salesCreditMemo entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesCreditMemo entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {string} [body.billingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.billingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.billingPostalAddress.picture]
   *
   * @param {array} [body.billingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.billingPostalAddress.currency]
   *
   * @param {uuid} [body.billingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.billingPostalAddress.currency.amountRoundingPrecision]
   * The amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.billingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.billingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.billingPostalAddress.paymentTerm.id] The id property for
   * the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.billingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.billingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.billingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.billingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.billingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.billingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.billingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.billingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.billingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.billingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.billingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.billingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.billingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date} [body.billingPostalAddress.paymentMethod.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesCreditMemo entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesCreditMemo entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesCreditMemo entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemo entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemo entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesCreditMemo entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemo entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesCreditMemo entity
   *
   * @param {string} [body.status] The status property for the salesCreditMemo
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesCreditMemo entity
   *
   * @param {uuid} [body.invoiceId] The invoiceId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.invoiceNumber] The invoiceNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.email] The email property for the salesCreditMemo
   * entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemo} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemo} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemo} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesCreditMemo(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemo>;
  postSalesCreditMemo(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.SalesCreditMemo>): void;
  postSalesCreditMemo(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemo>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesCreditMemo
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemo>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesCreditMemoByIdWithHttpOperationResponse(companyId: string, salesCreditMemoId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemo>>;

  /**
   * @summary Retrieve the properties and relationships of an salesCreditMemo
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemo} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemo} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemo} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesCreditMemoById(companyId: string, salesCreditMemoId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemo>;
  getSalesCreditMemoById(companyId: string, salesCreditMemoId: string, callback: ServiceCallback<models.SalesCreditMemo>): void;
  getSalesCreditMemoById(companyId: string, salesCreditMemoId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemo>): void;


  /**
   * @summary Delete an salesCreditMemo in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesCreditMemoByIdWithHttpOperationResponse(companyId: string, salesCreditMemoId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesCreditMemo in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesCreditMemoById(companyId: string, salesCreditMemoId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesCreditMemoById(companyId: string, salesCreditMemoId: string, callback: ServiceCallback<void>): void;
  deleteSalesCreditMemoById(companyId: string, salesCreditMemoId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesCreditMemo
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesCreditMemo entity
   *
   * @param {string} [body.number] The number property for the salesCreditMemo
   * entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesCreditMemo entity
   *
   * @param {date} [body.creditMemoDate] The creditMemoDate property for the
   * salesCreditMemo entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesCreditMemo
   * entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.billToName] The billToName property for the
   * salesCreditMemo entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesCreditMemo entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {string} [body.billingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.billingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.billingPostalAddress.picture]
   *
   * @param {array} [body.billingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.billingPostalAddress.currency]
   *
   * @param {uuid} [body.billingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.billingPostalAddress.currency.amountRoundingPrecision]
   * The amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.billingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.billingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.billingPostalAddress.paymentTerm.id] The id property for
   * the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.billingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.billingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.billingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.billingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.billingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.billingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.billingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.billingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.billingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.billingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.billingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.billingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.billingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date} [body.billingPostalAddress.paymentMethod.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesCreditMemo entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesCreditMemo entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesCreditMemo entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemo entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemo entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesCreditMemo entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemo entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesCreditMemo entity
   *
   * @param {string} [body.status] The status property for the salesCreditMemo
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesCreditMemo entity
   *
   * @param {uuid} [body.invoiceId] The invoiceId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.invoiceNumber] The invoiceNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.email] The email property for the salesCreditMemo
   * entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemo>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesCreditMemoByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemo>>;

  /**
   * @summary Lets the user patch the specified salesCreditMemo
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the salesCreditMemo entity
   *
   * @param {string} [body.number] The number property for the salesCreditMemo
   * entity
   *
   * @param {string} [body.externalDocumentNumber] The externalDocumentNumber
   * property for the salesCreditMemo entity
   *
   * @param {date} [body.creditMemoDate] The creditMemoDate property for the
   * salesCreditMemo entity
   *
   * @param {date} [body.dueDate] The dueDate property for the salesCreditMemo
   * entity
   *
   * @param {uuid} [body.customerId] The customerId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.contactId] The contactId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.customerNumber] The customerNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.customerName] The customerName property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.billToName] The billToName property for the
   * salesCreditMemo entity
   *
   * @param {uuid} [body.billToCustomerId] The billToCustomerId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.billToCustomerNumber] The billToCustomerNumber
   * property for the salesCreditMemo entity
   *
   * @param {object} [body.sellingPostalAddress]
   *
   * @param {object} [body.billingPostalAddress]
   *
   * @param {string} [body.billingPostalAddress.street] The street property for
   * the postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   *
   * @param {string} [body.billingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   *
   * @param {array} [body.billingPostalAddress.customerFinancialDetails]
   *
   * @param {array} [body.billingPostalAddress.picture]
   *
   * @param {array} [body.billingPostalAddress.defaultDimensions]
   *
   * @param {object} [body.billingPostalAddress.currency]
   *
   * @param {uuid} [body.billingPostalAddress.currency.id] The id property for
   * the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.code] The code property
   * for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   *
   * @param {string} [body.billingPostalAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.billingPostalAddress.currency.amountRoundingPrecision]
   * The amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.billingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.billingPostalAddress.paymentTerm]
   *
   * @param {uuid} [body.billingPostalAddress.paymentTerm.id] The id property for
   * the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   *
   * @param {string} [body.billingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   *
   * @param {string}
   * [body.billingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.billingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.billingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.billingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.billingPostalAddress.shipmentMethod]
   *
   * @param {uuid} [body.billingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   *
   * @param {string} [body.billingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   *
   * @param {string} [body.billingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date}
   * [body.billingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.billingPostalAddress.paymentMethod]
   *
   * @param {uuid} [body.billingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   *
   * @param {string} [body.billingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   *
   * @param {string} [body.billingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date} [body.billingPostalAddress.paymentMethod.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * salesCreditMemo entity
   *
   * @param {uuid} [body.paymentTermsId] The paymentTermsId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.salesperson] The salesperson property for the
   * salesCreditMemo entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the salesCreditMemo entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemo entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemo entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesCreditMemo entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemo entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesCreditMemo entity
   *
   * @param {string} [body.status] The status property for the salesCreditMemo
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesCreditMemo entity
   *
   * @param {uuid} [body.invoiceId] The invoiceId property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.invoiceNumber] The invoiceNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.phoneNumber] The phoneNumber property for the
   * salesCreditMemo entity
   *
   * @param {string} [body.email] The email property for the salesCreditMemo
   * entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemo} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemo} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemo} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesCreditMemoById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemo>;
  patchSalesCreditMemoById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, callback: ServiceCallback<models.SalesCreditMemo>): void;
  patchSalesCreditMemoById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemo>): void;


  /**
   * @summary Returns a list of salesCreditMemoLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesCreditMemoLinesForSalesCreditMemoOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesCreditMemoLinesForSalesCreditMemoWithHttpOperationResponse(companyId: string, salesCreditMemoId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesCreditMemoLinesForSalesCreditMemoOKResponse>>;

  /**
   * @summary Returns a list of salesCreditMemoLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesCreditMemoLinesForSalesCreditMemoOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesCreditMemoLinesForSalesCreditMemoOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      GetSalesCreditMemoLinesForSalesCreditMemoOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesCreditMemoLinesForSalesCreditMemo(companyId: string, salesCreditMemoId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesCreditMemoLinesForSalesCreditMemoOKResponse>;
  getSalesCreditMemoLinesForSalesCreditMemo(companyId: string, salesCreditMemoId: string, callback: ServiceCallback<models.GetSalesCreditMemoLinesForSalesCreditMemoOKResponse>): void;
  getSalesCreditMemoLinesForSalesCreditMemo(companyId: string, salesCreditMemoId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesCreditMemoLinesForSalesCreditMemoOKResponse>): void;


  /**
   * @summary Creates a salesCreditMemoLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesCreditMemoLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesCreditMemoLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesCreditMemoLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemoLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesCreditMemoLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesCreditMemoLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemoLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesCreditMemoLineForSalesCreditMemoWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemoLine>>;

  /**
   * @summary Creates a salesCreditMemoLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesCreditMemoLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesCreditMemoLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesCreditMemoLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemoLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesCreditMemoLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesCreditMemoLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemoLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemoLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemoLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesCreditMemoLineForSalesCreditMemo(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemoLine>;
  postSalesCreditMemoLineForSalesCreditMemo(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, callback: ServiceCallback<models.SalesCreditMemoLine>): void;
  postSalesCreditMemoLineForSalesCreditMemo(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemoLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesCreditMemoLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemoLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesCreditMemoLineForSalesCreditMemoByIdWithHttpOperationResponse(companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemoLine>>;

  /**
   * @summary Retrieve the properties and relationships of an salesCreditMemoLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemoLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemoLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemoLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesCreditMemoLineForSalesCreditMemoById(companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemoLine>;
  getSalesCreditMemoLineForSalesCreditMemoById(companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, callback: ServiceCallback<models.SalesCreditMemoLine>): void;
  getSalesCreditMemoLineForSalesCreditMemoById(companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemoLine>): void;


  /**
   * @summary Delete an salesCreditMemoLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesCreditMemoLineForSalesCreditMemoByIdByIdWithHttpOperationResponse(companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesCreditMemoLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesCreditMemoLineForSalesCreditMemoByIdById(companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesCreditMemoLineForSalesCreditMemoByIdById(companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, callback: ServiceCallback<void>): void;
  deleteSalesCreditMemoLineForSalesCreditMemoByIdById(companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesCreditMemoLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesCreditMemoLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesCreditMemoLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesCreditMemoLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemoLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesCreditMemoLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesCreditMemoLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemoLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesCreditMemoLineForSalesCreditMemoByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemoLine>>;

  /**
   * @summary Lets the user patch the specified salesCreditMemoLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesCreditMemoLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesCreditMemoLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesCreditMemoLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemoLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesCreditMemoLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesCreditMemoLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemoLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemoLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemoLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesCreditMemoLineForSalesCreditMemoByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemoLine>;
  patchSalesCreditMemoLineForSalesCreditMemoByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, callback: ServiceCallback<models.SalesCreditMemoLine>): void;
  patchSalesCreditMemoLineForSalesCreditMemoByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoId: string, salesCreditMemoLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemoLine>): void;


  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPdfDocumentForSalesCreditMemoOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentForSalesCreditMemoWithHttpOperationResponse(companyId: string, salesCreditMemoId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPdfDocumentForSalesCreditMemoOKResponse>>;

  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPdfDocumentForSalesCreditMemoOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPdfDocumentForSalesCreditMemoOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPdfDocumentForSalesCreditMemoOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentForSalesCreditMemo(companyId: string, salesCreditMemoId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPdfDocumentForSalesCreditMemoOKResponse>;
  getPdfDocumentForSalesCreditMemo(companyId: string, salesCreditMemoId: string, callback: ServiceCallback<models.GetPdfDocumentForSalesCreditMemoOKResponse>): void;
  getPdfDocumentForSalesCreditMemo(companyId: string, salesCreditMemoId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPdfDocumentForSalesCreditMemoOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PdfDocument>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentForSalesCreditMemoByIdWithHttpOperationResponse(companyId: string, salesCreditMemoId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PdfDocument>>;

  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} salesCreditMemoId id for salesCreditMemo
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PdfDocument} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PdfDocument} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PdfDocument} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentForSalesCreditMemoById(companyId: string, salesCreditMemoId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PdfDocument>;
  getPdfDocumentForSalesCreditMemoById(companyId: string, salesCreditMemoId: string, pdfDocumentId: string, callback: ServiceCallback<models.PdfDocument>): void;
  getPdfDocumentForSalesCreditMemoById(companyId: string, salesCreditMemoId: string, pdfDocumentId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PdfDocument>): void;


  /**
   * @summary Returns a list of salesCreditMemoLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetSalesCreditMemoLinesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesCreditMemoLinesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetSalesCreditMemoLinesOKResponse>>;

  /**
   * @summary Returns a list of salesCreditMemoLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetSalesCreditMemoLinesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetSalesCreditMemoLinesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetSalesCreditMemoLinesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesCreditMemoLines(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetSalesCreditMemoLinesOKResponse>;
  getSalesCreditMemoLines(companyId: string, callback: ServiceCallback<models.GetSalesCreditMemoLinesOKResponse>): void;
  getSalesCreditMemoLines(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetSalesCreditMemoLinesOKResponse>): void;


  /**
   * @summary Creates a salesCreditMemoLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesCreditMemoLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesCreditMemoLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesCreditMemoLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemoLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesCreditMemoLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesCreditMemoLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemoLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postSalesCreditMemoLineWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemoLine>>;

  /**
   * @summary Creates a salesCreditMemoLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesCreditMemoLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesCreditMemoLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesCreditMemoLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemoLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesCreditMemoLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesCreditMemoLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemoLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemoLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemoLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postSalesCreditMemoLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemoLine>;
  postSalesCreditMemoLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.SalesCreditMemoLine>): void;
  postSalesCreditMemoLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemoLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an salesCreditMemoLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemoLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getSalesCreditMemoLineByIdWithHttpOperationResponse(companyId: string, salesCreditMemoLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemoLine>>;

  /**
   * @summary Retrieve the properties and relationships of an salesCreditMemoLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemoLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemoLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemoLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getSalesCreditMemoLineById(companyId: string, salesCreditMemoLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemoLine>;
  getSalesCreditMemoLineById(companyId: string, salesCreditMemoLineId: string, callback: ServiceCallback<models.SalesCreditMemoLine>): void;
  getSalesCreditMemoLineById(companyId: string, salesCreditMemoLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemoLine>): void;


  /**
   * @summary Delete an salesCreditMemoLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteSalesCreditMemoLineByIdWithHttpOperationResponse(companyId: string, salesCreditMemoLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an salesCreditMemoLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteSalesCreditMemoLineById(companyId: string, salesCreditMemoLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteSalesCreditMemoLineById(companyId: string, salesCreditMemoLineId: string, callback: ServiceCallback<void>): void;
  deleteSalesCreditMemoLineById(companyId: string, salesCreditMemoLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified salesCreditMemoLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesCreditMemoLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesCreditMemoLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesCreditMemoLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemoLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesCreditMemoLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesCreditMemoLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SalesCreditMemoLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchSalesCreditMemoLineByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SalesCreditMemoLine>>;

  /**
   * @summary Lets the user patch the specified salesCreditMemoLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the salesCreditMemoLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the salesCreditMemoLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * salesCreditMemoLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} [body.unitOfMeasureId] The unitOfMeasureId property for the
   * salesCreditMemoLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitPrice] The unitPrice property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemoLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the salesCreditMemoLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the salesCreditMemoLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * salesCreditMemoLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the salesCreditMemoLine entity
   *
   * @param {date} [body.shipmentDate] The shipmentDate property for the
   * salesCreditMemoLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} salesCreditMemoLineId id for salesCreditMemoLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SalesCreditMemoLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SalesCreditMemoLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SalesCreditMemoLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchSalesCreditMemoLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SalesCreditMemoLine>;
  patchSalesCreditMemoLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoLineId: string, callback: ServiceCallback<models.SalesCreditMemoLine>): void;
  patchSalesCreditMemoLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, salesCreditMemoLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SalesCreditMemoLine>): void;


  /**
   * @summary Returns a list of generalLedgerEntryAttachments
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetGeneralLedgerEntryAttachmentsOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getGeneralLedgerEntryAttachmentsWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetGeneralLedgerEntryAttachmentsOKResponse>>;

  /**
   * @summary Returns a list of generalLedgerEntryAttachments
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetGeneralLedgerEntryAttachmentsOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetGeneralLedgerEntryAttachmentsOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetGeneralLedgerEntryAttachmentsOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getGeneralLedgerEntryAttachments(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetGeneralLedgerEntryAttachmentsOKResponse>;
  getGeneralLedgerEntryAttachments(companyId: string, callback: ServiceCallback<models.GetGeneralLedgerEntryAttachmentsOKResponse>): void;
  getGeneralLedgerEntryAttachments(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetGeneralLedgerEntryAttachmentsOKResponse>): void;


  /**
   * @summary Creates a generalLedgerEntryAttachments in Dynamics 365 Business
   * Central
   *
   * @param {object} body
   *
   * @param {number} [body.generalLedgerEntryNumber] The generalLedgerEntryNumber
   * property for the generalLedgerEntryAttachments entity
   *
   * @param {uuid} [body.id] The id property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {string} [body.fileName] The fileName property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {number} [body.byteSize] The byteSize property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {string} [body.content] The content property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {date} [body.createdDateTime] The createdDateTime property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GeneralLedgerEntryAttachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postGeneralLedgerEntryAttachmentsWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GeneralLedgerEntryAttachments>>;

  /**
   * @summary Creates a generalLedgerEntryAttachments in Dynamics 365 Business
   * Central
   *
   * @param {object} body
   *
   * @param {number} [body.generalLedgerEntryNumber] The generalLedgerEntryNumber
   * property for the generalLedgerEntryAttachments entity
   *
   * @param {uuid} [body.id] The id property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {string} [body.fileName] The fileName property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {number} [body.byteSize] The byteSize property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {string} [body.content] The content property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {date} [body.createdDateTime] The createdDateTime property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GeneralLedgerEntryAttachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GeneralLedgerEntryAttachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GeneralLedgerEntryAttachments} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postGeneralLedgerEntryAttachments(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.GeneralLedgerEntryAttachments>;
  postGeneralLedgerEntryAttachments(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.GeneralLedgerEntryAttachments>): void;
  postGeneralLedgerEntryAttachments(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GeneralLedgerEntryAttachments>): void;


  /**
   * @summary Retrieve the properties and relationships of an
   * generalLedgerEntryAttachments object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} generalLedgerEntryAttachmentsGeneralLedgerEntryNumber
   * generalLedgerEntryNumber for generalLedgerEntryAttachments
   *
   * @param {uuid} generalLedgerEntryAttachmentsId id for
   * generalLedgerEntryAttachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GeneralLedgerEntryAttachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumberWithHttpOperationResponse(companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GeneralLedgerEntryAttachments>>;

  /**
   * @summary Retrieve the properties and relationships of an
   * generalLedgerEntryAttachments object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} generalLedgerEntryAttachmentsGeneralLedgerEntryNumber
   * generalLedgerEntryNumber for generalLedgerEntryAttachments
   *
   * @param {uuid} generalLedgerEntryAttachmentsId id for
   * generalLedgerEntryAttachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GeneralLedgerEntryAttachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GeneralLedgerEntryAttachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GeneralLedgerEntryAttachments} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GeneralLedgerEntryAttachments>;
  getGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, callback: ServiceCallback<models.GeneralLedgerEntryAttachments>): void;
  getGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GeneralLedgerEntryAttachments>): void;


  /**
   * @summary Delete an generalLedgerEntryAttachments in Dynamics 365 Business
   * Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} generalLedgerEntryAttachmentsGeneralLedgerEntryNumber
   * generalLedgerEntryNumber for generalLedgerEntryAttachments
   *
   * @param {uuid} generalLedgerEntryAttachmentsId id for
   * generalLedgerEntryAttachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deleteGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumberWithHttpOperationResponse(companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an generalLedgerEntryAttachments in Dynamics 365 Business
   * Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} generalLedgerEntryAttachmentsGeneralLedgerEntryNumber
   * generalLedgerEntryNumber for generalLedgerEntryAttachments
   *
   * @param {uuid} generalLedgerEntryAttachmentsId id for
   * generalLedgerEntryAttachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deleteGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deleteGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, callback: ServiceCallback<void>): void;
  deleteGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified generalLedgerEntryAttachments
   *
   * @param {object} body
   *
   * @param {number} [body.generalLedgerEntryNumber] The generalLedgerEntryNumber
   * property for the generalLedgerEntryAttachments entity
   *
   * @param {uuid} [body.id] The id property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {string} [body.fileName] The fileName property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {number} [body.byteSize] The byteSize property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {string} [body.content] The content property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {date} [body.createdDateTime] The createdDateTime property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} generalLedgerEntryAttachmentsGeneralLedgerEntryNumber
   * generalLedgerEntryNumber for generalLedgerEntryAttachments
   *
   * @param {uuid} generalLedgerEntryAttachmentsId id for
   * generalLedgerEntryAttachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GeneralLedgerEntryAttachments>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumberWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GeneralLedgerEntryAttachments>>;

  /**
   * @summary Lets the user patch the specified generalLedgerEntryAttachments
   *
   * @param {object} body
   *
   * @param {number} [body.generalLedgerEntryNumber] The generalLedgerEntryNumber
   * property for the generalLedgerEntryAttachments entity
   *
   * @param {uuid} [body.id] The id property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {string} [body.fileName] The fileName property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {number} [body.byteSize] The byteSize property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {string} [body.content] The content property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {date} [body.createdDateTime] The createdDateTime property for the
   * generalLedgerEntryAttachments entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {number} generalLedgerEntryAttachmentsGeneralLedgerEntryNumber
   * generalLedgerEntryNumber for generalLedgerEntryAttachments
   *
   * @param {uuid} generalLedgerEntryAttachmentsId id for
   * generalLedgerEntryAttachments
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GeneralLedgerEntryAttachments} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GeneralLedgerEntryAttachments} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GeneralLedgerEntryAttachments} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.GeneralLedgerEntryAttachments>;
  patchGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, callback: ServiceCallback<models.GeneralLedgerEntryAttachments>): void;
  patchGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, generalLedgerEntryAttachmentsGeneralLedgerEntryNumber: number, generalLedgerEntryAttachmentsId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GeneralLedgerEntryAttachments>): void;


  /**
   * @summary Returns a list of purchaseInvoices
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPurchaseInvoicesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPurchaseInvoicesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPurchaseInvoicesOKResponse>>;

  /**
   * @summary Returns a list of purchaseInvoices
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPurchaseInvoicesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPurchaseInvoicesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPurchaseInvoicesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPurchaseInvoices(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPurchaseInvoicesOKResponse>;
  getPurchaseInvoices(companyId: string, callback: ServiceCallback<models.GetPurchaseInvoicesOKResponse>): void;
  getPurchaseInvoices(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPurchaseInvoicesOKResponse>): void;


  /**
   * @summary Creates a purchaseInvoice in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the purchaseInvoice entity
   *
   * @param {string} [body.number] The number property for the purchaseInvoice
   * entity
   *
   * @param {date} [body.invoiceDate] The invoiceDate property for the
   * purchaseInvoice entity
   *
   * @param {date} [body.dueDate] The dueDate property for the purchaseInvoice
   * entity
   *
   * @param {string} [body.vendorInvoiceNumber] The vendorInvoiceNumber property
   * for the purchaseInvoice entity
   *
   * @param {uuid} [body.vendorId] The vendorId property for the purchaseInvoice
   * entity
   *
   * @param {string} [body.vendorNumber] The vendorNumber property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.vendorName] The vendorName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToName] The payToName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToContact] The payToContact property for the
   * purchaseInvoice entity
   *
   * @param {uuid} [body.payToVendorId] The payToVendorId property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToVendorNumber] The payToVendorNumber property for
   * the purchaseInvoice entity
   *
   * @param {string} [body.shipToName] The shipToName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * purchaseInvoice entity
   *
   * @param {object} [body.buyFromAddress]
   *
   * @param {object} [body.payToAddress]
   *
   * @param {object} [body.shipToAddress]
   *
   * @param {string} [body.shipToAddress.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.postalCode] The postalCode property for
   * the postaladdresstype entity
   *
   * @param {array} [body.shipToAddress.customerFinancialDetails]
   *
   * @param {array} [body.shipToAddress.picture]
   *
   * @param {array} [body.shipToAddress.defaultDimensions]
   *
   * @param {object} [body.shipToAddress.currency]
   *
   * @param {uuid} [body.shipToAddress.currency.id] The id property for the
   * currency entity
   *
   * @param {string} [body.shipToAddress.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.shipToAddress.currency.displayName] The displayName
   * property for the currency entity
   *
   * @param {string} [body.shipToAddress.currency.symbol] The symbol property for
   * the currency entity
   *
   * @param {string} [body.shipToAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.shipToAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shipToAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shipToAddress.paymentTerm]
   *
   * @param {uuid} [body.shipToAddress.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.code] The code property for
   * the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shipToAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shipToAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shipToAddress.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shipToAddress.shipmentMethod]
   *
   * @param {uuid} [body.shipToAddress.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.shipToAddress.shipmentMethod.code] The code property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shipToAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date} [body.shipToAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shipToAddress.paymentMethod]
   *
   * @param {uuid} [body.shipToAddress.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.shipToAddress.paymentMethod.code] The code property
   * for the paymentMethod entity
   *
   * @param {string} [body.shipToAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date} [body.shipToAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * purchaseInvoice entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the purchaseInvoice entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoice entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoice entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the purchaseInvoice entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoice entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the purchaseInvoice entity
   *
   * @param {string} [body.status] The status property for the purchaseInvoice
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the purchaseInvoice entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoice>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postPurchaseInvoiceWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoice>>;

  /**
   * @summary Creates a purchaseInvoice in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the purchaseInvoice entity
   *
   * @param {string} [body.number] The number property for the purchaseInvoice
   * entity
   *
   * @param {date} [body.invoiceDate] The invoiceDate property for the
   * purchaseInvoice entity
   *
   * @param {date} [body.dueDate] The dueDate property for the purchaseInvoice
   * entity
   *
   * @param {string} [body.vendorInvoiceNumber] The vendorInvoiceNumber property
   * for the purchaseInvoice entity
   *
   * @param {uuid} [body.vendorId] The vendorId property for the purchaseInvoice
   * entity
   *
   * @param {string} [body.vendorNumber] The vendorNumber property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.vendorName] The vendorName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToName] The payToName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToContact] The payToContact property for the
   * purchaseInvoice entity
   *
   * @param {uuid} [body.payToVendorId] The payToVendorId property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToVendorNumber] The payToVendorNumber property for
   * the purchaseInvoice entity
   *
   * @param {string} [body.shipToName] The shipToName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * purchaseInvoice entity
   *
   * @param {object} [body.buyFromAddress]
   *
   * @param {object} [body.payToAddress]
   *
   * @param {object} [body.shipToAddress]
   *
   * @param {string} [body.shipToAddress.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.postalCode] The postalCode property for
   * the postaladdresstype entity
   *
   * @param {array} [body.shipToAddress.customerFinancialDetails]
   *
   * @param {array} [body.shipToAddress.picture]
   *
   * @param {array} [body.shipToAddress.defaultDimensions]
   *
   * @param {object} [body.shipToAddress.currency]
   *
   * @param {uuid} [body.shipToAddress.currency.id] The id property for the
   * currency entity
   *
   * @param {string} [body.shipToAddress.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.shipToAddress.currency.displayName] The displayName
   * property for the currency entity
   *
   * @param {string} [body.shipToAddress.currency.symbol] The symbol property for
   * the currency entity
   *
   * @param {string} [body.shipToAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.shipToAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shipToAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shipToAddress.paymentTerm]
   *
   * @param {uuid} [body.shipToAddress.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.code] The code property for
   * the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shipToAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shipToAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shipToAddress.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shipToAddress.shipmentMethod]
   *
   * @param {uuid} [body.shipToAddress.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.shipToAddress.shipmentMethod.code] The code property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shipToAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date} [body.shipToAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shipToAddress.paymentMethod]
   *
   * @param {uuid} [body.shipToAddress.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.shipToAddress.paymentMethod.code] The code property
   * for the paymentMethod entity
   *
   * @param {string} [body.shipToAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date} [body.shipToAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * purchaseInvoice entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the purchaseInvoice entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoice entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoice entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the purchaseInvoice entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoice entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the purchaseInvoice entity
   *
   * @param {string} [body.status] The status property for the purchaseInvoice
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the purchaseInvoice entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoice} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoice} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoice} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postPurchaseInvoice(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoice>;
  postPurchaseInvoice(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.PurchaseInvoice>): void;
  postPurchaseInvoice(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoice>): void;


  /**
   * @summary Retrieve the properties and relationships of an purchaseInvoice
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoice>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPurchaseInvoiceByIdWithHttpOperationResponse(companyId: string, purchaseInvoiceId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoice>>;

  /**
   * @summary Retrieve the properties and relationships of an purchaseInvoice
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoice} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoice} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoice} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoice>;
  getPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, callback: ServiceCallback<models.PurchaseInvoice>): void;
  getPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoice>): void;


  /**
   * @summary Delete an purchaseInvoice in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePurchaseInvoiceByIdWithHttpOperationResponse(companyId: string, purchaseInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an purchaseInvoice in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, callback: ServiceCallback<void>): void;
  deletePurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified purchaseInvoice
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the purchaseInvoice entity
   *
   * @param {string} [body.number] The number property for the purchaseInvoice
   * entity
   *
   * @param {date} [body.invoiceDate] The invoiceDate property for the
   * purchaseInvoice entity
   *
   * @param {date} [body.dueDate] The dueDate property for the purchaseInvoice
   * entity
   *
   * @param {string} [body.vendorInvoiceNumber] The vendorInvoiceNumber property
   * for the purchaseInvoice entity
   *
   * @param {uuid} [body.vendorId] The vendorId property for the purchaseInvoice
   * entity
   *
   * @param {string} [body.vendorNumber] The vendorNumber property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.vendorName] The vendorName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToName] The payToName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToContact] The payToContact property for the
   * purchaseInvoice entity
   *
   * @param {uuid} [body.payToVendorId] The payToVendorId property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToVendorNumber] The payToVendorNumber property for
   * the purchaseInvoice entity
   *
   * @param {string} [body.shipToName] The shipToName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * purchaseInvoice entity
   *
   * @param {object} [body.buyFromAddress]
   *
   * @param {object} [body.payToAddress]
   *
   * @param {object} [body.shipToAddress]
   *
   * @param {string} [body.shipToAddress.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.postalCode] The postalCode property for
   * the postaladdresstype entity
   *
   * @param {array} [body.shipToAddress.customerFinancialDetails]
   *
   * @param {array} [body.shipToAddress.picture]
   *
   * @param {array} [body.shipToAddress.defaultDimensions]
   *
   * @param {object} [body.shipToAddress.currency]
   *
   * @param {uuid} [body.shipToAddress.currency.id] The id property for the
   * currency entity
   *
   * @param {string} [body.shipToAddress.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.shipToAddress.currency.displayName] The displayName
   * property for the currency entity
   *
   * @param {string} [body.shipToAddress.currency.symbol] The symbol property for
   * the currency entity
   *
   * @param {string} [body.shipToAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.shipToAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shipToAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shipToAddress.paymentTerm]
   *
   * @param {uuid} [body.shipToAddress.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.code] The code property for
   * the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shipToAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shipToAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shipToAddress.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shipToAddress.shipmentMethod]
   *
   * @param {uuid} [body.shipToAddress.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.shipToAddress.shipmentMethod.code] The code property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shipToAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date} [body.shipToAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shipToAddress.paymentMethod]
   *
   * @param {uuid} [body.shipToAddress.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.shipToAddress.paymentMethod.code] The code property
   * for the paymentMethod entity
   *
   * @param {string} [body.shipToAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date} [body.shipToAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * purchaseInvoice entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the purchaseInvoice entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoice entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoice entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the purchaseInvoice entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoice entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the purchaseInvoice entity
   *
   * @param {string} [body.status] The status property for the purchaseInvoice
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the purchaseInvoice entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoice>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPurchaseInvoiceByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoice>>;

  /**
   * @summary Lets the user patch the specified purchaseInvoice
   *
   * @param {object} body
   *
   * @param {uuid} [body.id] The id property for the purchaseInvoice entity
   *
   * @param {string} [body.number] The number property for the purchaseInvoice
   * entity
   *
   * @param {date} [body.invoiceDate] The invoiceDate property for the
   * purchaseInvoice entity
   *
   * @param {date} [body.dueDate] The dueDate property for the purchaseInvoice
   * entity
   *
   * @param {string} [body.vendorInvoiceNumber] The vendorInvoiceNumber property
   * for the purchaseInvoice entity
   *
   * @param {uuid} [body.vendorId] The vendorId property for the purchaseInvoice
   * entity
   *
   * @param {string} [body.vendorNumber] The vendorNumber property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.vendorName] The vendorName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToName] The payToName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToContact] The payToContact property for the
   * purchaseInvoice entity
   *
   * @param {uuid} [body.payToVendorId] The payToVendorId property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.payToVendorNumber] The payToVendorNumber property for
   * the purchaseInvoice entity
   *
   * @param {string} [body.shipToName] The shipToName property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.shipToContact] The shipToContact property for the
   * purchaseInvoice entity
   *
   * @param {object} [body.buyFromAddress]
   *
   * @param {object} [body.payToAddress]
   *
   * @param {object} [body.shipToAddress]
   *
   * @param {string} [body.shipToAddress.street] The street property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.city] The city property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.state] The state property for the
   * postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   *
   * @param {string} [body.shipToAddress.postalCode] The postalCode property for
   * the postaladdresstype entity
   *
   * @param {array} [body.shipToAddress.customerFinancialDetails]
   *
   * @param {array} [body.shipToAddress.picture]
   *
   * @param {array} [body.shipToAddress.defaultDimensions]
   *
   * @param {object} [body.shipToAddress.currency]
   *
   * @param {uuid} [body.shipToAddress.currency.id] The id property for the
   * currency entity
   *
   * @param {string} [body.shipToAddress.currency.code] The code property for the
   * currency entity
   *
   * @param {string} [body.shipToAddress.currency.displayName] The displayName
   * property for the currency entity
   *
   * @param {string} [body.shipToAddress.currency.symbol] The symbol property for
   * the currency entity
   *
   * @param {string} [body.shipToAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   *
   * @param {number} [body.shipToAddress.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   *
   * @param {date} [body.shipToAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   *
   * @param {object} [body.shipToAddress.paymentTerm]
   *
   * @param {uuid} [body.shipToAddress.paymentTerm.id] The id property for the
   * paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.code] The code property for
   * the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   *
   * @param {string} [body.shipToAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   *
   * @param {number} [body.shipToAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   *
   * @param {boolean}
   * [body.shipToAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   *
   * @param {date} [body.shipToAddress.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   *
   * @param {object} [body.shipToAddress.shipmentMethod]
   *
   * @param {uuid} [body.shipToAddress.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   *
   * @param {string} [body.shipToAddress.shipmentMethod.code] The code property
   * for the shipmentMethod entity
   *
   * @param {string} [body.shipToAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   *
   * @param {date} [body.shipToAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   *
   * @param {object} [body.shipToAddress.paymentMethod]
   *
   * @param {uuid} [body.shipToAddress.paymentMethod.id] The id property for the
   * paymentMethod entity
   *
   * @param {string} [body.shipToAddress.paymentMethod.code] The code property
   * for the paymentMethod entity
   *
   * @param {string} [body.shipToAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   *
   * @param {date} [body.shipToAddress.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   *
   * @param {uuid} [body.currencyId] The currencyId property for the
   * purchaseInvoice entity
   *
   * @param {string} [body.currencyCode] The currencyCode property for the
   * purchaseInvoice entity
   *
   * @param {boolean} [body.pricesIncludeTax] The pricesIncludeTax property for
   * the purchaseInvoice entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoice entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoice entity
   *
   * @param {number} [body.totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the purchaseInvoice entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoice entity
   *
   * @param {number} [body.totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the purchaseInvoice entity
   *
   * @param {string} [body.status] The status property for the purchaseInvoice
   * entity
   *
   * @param {date} [body.lastModifiedDateTime] The lastModifiedDateTime property
   * for the purchaseInvoice entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoice} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoice} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoice} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPurchaseInvoiceById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoice>;
  patchPurchaseInvoiceById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, callback: ServiceCallback<models.PurchaseInvoice>): void;
  patchPurchaseInvoiceById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoice>): void;


  /**
   * @summary Performs the post action for purchaseInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postActionPurchaseInvoicesWithHttpOperationResponse(companyId: string, purchaseInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Performs the post action for purchaseInvoices entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postActionPurchaseInvoices(companyId: string, purchaseInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  postActionPurchaseInvoices(companyId: string, purchaseInvoiceId: string, callback: ServiceCallback<void>): void;
  postActionPurchaseInvoices(companyId: string, purchaseInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Returns a list of purchaseInvoiceLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPurchaseInvoiceLinesForPurchaseInvoiceOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPurchaseInvoiceLinesForPurchaseInvoiceWithHttpOperationResponse(companyId: string, purchaseInvoiceId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPurchaseInvoiceLinesForPurchaseInvoiceOKResponse>>;

  /**
   * @summary Returns a list of purchaseInvoiceLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPurchaseInvoiceLinesForPurchaseInvoiceOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPurchaseInvoiceLinesForPurchaseInvoiceOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      GetPurchaseInvoiceLinesForPurchaseInvoiceOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPurchaseInvoiceLinesForPurchaseInvoice(companyId: string, purchaseInvoiceId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPurchaseInvoiceLinesForPurchaseInvoiceOKResponse>;
  getPurchaseInvoiceLinesForPurchaseInvoice(companyId: string, purchaseInvoiceId: string, callback: ServiceCallback<models.GetPurchaseInvoiceLinesForPurchaseInvoiceOKResponse>): void;
  getPurchaseInvoiceLinesForPurchaseInvoice(companyId: string, purchaseInvoiceId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPurchaseInvoiceLinesForPurchaseInvoiceOKResponse>): void;


  /**
   * @summary Creates a purchaseInvoiceLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the purchaseInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * purchaseInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the purchaseInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * purchaseInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitCost] The unitCost property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the purchaseInvoiceLine entity
   *
   * @param {date} [body.expectedReceiptDate] The expectedReceiptDate property
   * for the purchaseInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postPurchaseInvoiceLineForPurchaseInvoiceWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoiceLine>>;

  /**
   * @summary Creates a purchaseInvoiceLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the purchaseInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * purchaseInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the purchaseInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * purchaseInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitCost] The unitCost property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the purchaseInvoiceLine entity
   *
   * @param {date} [body.expectedReceiptDate] The expectedReceiptDate property
   * for the purchaseInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postPurchaseInvoiceLineForPurchaseInvoice(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoiceLine>;
  postPurchaseInvoiceLineForPurchaseInvoice(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;
  postPurchaseInvoiceLineForPurchaseInvoice(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an purchaseInvoiceLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPurchaseInvoiceLineForPurchaseInvoiceByIdWithHttpOperationResponse(companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoiceLine>>;

  /**
   * @summary Retrieve the properties and relationships of an purchaseInvoiceLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPurchaseInvoiceLineForPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoiceLine>;
  getPurchaseInvoiceLineForPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;
  getPurchaseInvoiceLineForPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;


  /**
   * @summary Delete an purchaseInvoiceLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePurchaseInvoiceLineForPurchaseInvoiceByIdByIdWithHttpOperationResponse(companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an purchaseInvoiceLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePurchaseInvoiceLineForPurchaseInvoiceByIdById(companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePurchaseInvoiceLineForPurchaseInvoiceByIdById(companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, callback: ServiceCallback<void>): void;
  deletePurchaseInvoiceLineForPurchaseInvoiceByIdById(companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified purchaseInvoiceLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the purchaseInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * purchaseInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the purchaseInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * purchaseInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitCost] The unitCost property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the purchaseInvoiceLine entity
   *
   * @param {date} [body.expectedReceiptDate] The expectedReceiptDate property
   * for the purchaseInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPurchaseInvoiceLineForPurchaseInvoiceByIdByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoiceLine>>;

  /**
   * @summary Lets the user patch the specified purchaseInvoiceLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the purchaseInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * purchaseInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the purchaseInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * purchaseInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitCost] The unitCost property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the purchaseInvoiceLine entity
   *
   * @param {date} [body.expectedReceiptDate] The expectedReceiptDate property
   * for the purchaseInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPurchaseInvoiceLineForPurchaseInvoiceByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoiceLine>;
  patchPurchaseInvoiceLineForPurchaseInvoiceByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;
  patchPurchaseInvoiceLineForPurchaseInvoiceByIdById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceId: string, purchaseInvoiceLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;


  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPdfDocumentForPurchaseInvoiceOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentForPurchaseInvoiceWithHttpOperationResponse(companyId: string, purchaseInvoiceId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPdfDocumentForPurchaseInvoiceOKResponse>>;

  /**
   * @summary Returns a list of pdfDocument
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPdfDocumentForPurchaseInvoiceOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPdfDocumentForPurchaseInvoiceOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPdfDocumentForPurchaseInvoiceOKResponse}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentForPurchaseInvoice(companyId: string, purchaseInvoiceId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPdfDocumentForPurchaseInvoiceOKResponse>;
  getPdfDocumentForPurchaseInvoice(companyId: string, purchaseInvoiceId: string, callback: ServiceCallback<models.GetPdfDocumentForPurchaseInvoiceOKResponse>): void;
  getPdfDocumentForPurchaseInvoice(companyId: string, purchaseInvoiceId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPdfDocumentForPurchaseInvoiceOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PdfDocument>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPdfDocumentForPurchaseInvoiceByIdWithHttpOperationResponse(companyId: string, purchaseInvoiceId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PdfDocument>>;

  /**
   * @summary Retrieve the properties and relationships of an pdfDocument object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} purchaseInvoiceId id for purchaseInvoice
   *
   * @param {uuid} pdfDocumentId id for pdfDocument
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PdfDocument} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PdfDocument} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PdfDocument} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPdfDocumentForPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, pdfDocumentId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PdfDocument>;
  getPdfDocumentForPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, pdfDocumentId: string, callback: ServiceCallback<models.PdfDocument>): void;
  getPdfDocumentForPurchaseInvoiceById(companyId: string, purchaseInvoiceId: string, pdfDocumentId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PdfDocument>): void;


  /**
   * @summary Returns a list of purchaseInvoiceLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetPurchaseInvoiceLinesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPurchaseInvoiceLinesWithHttpOperationResponse(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetPurchaseInvoiceLinesOKResponse>>;

  /**
   * @summary Returns a list of purchaseInvoiceLines
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetPurchaseInvoiceLinesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetPurchaseInvoiceLinesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetPurchaseInvoiceLinesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPurchaseInvoiceLines(companyId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetPurchaseInvoiceLinesOKResponse>;
  getPurchaseInvoiceLines(companyId: string, callback: ServiceCallback<models.GetPurchaseInvoiceLinesOKResponse>): void;
  getPurchaseInvoiceLines(companyId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetPurchaseInvoiceLinesOKResponse>): void;


  /**
   * @summary Creates a purchaseInvoiceLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the purchaseInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * purchaseInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the purchaseInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * purchaseInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitCost] The unitCost property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the purchaseInvoiceLine entity
   *
   * @param {date} [body.expectedReceiptDate] The expectedReceiptDate property
   * for the purchaseInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  postPurchaseInvoiceLineWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoiceLine>>;

  /**
   * @summary Creates a purchaseInvoiceLine in Dynamics 365 Business Central
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the purchaseInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * purchaseInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the purchaseInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * purchaseInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitCost] The unitCost property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the purchaseInvoiceLine entity
   *
   * @param {date} [body.expectedReceiptDate] The expectedReceiptDate property
   * for the purchaseInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  postPurchaseInvoiceLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoiceLine>;
  postPurchaseInvoiceLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;
  postPurchaseInvoiceLine(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;


  /**
   * @summary Retrieve the properties and relationships of an purchaseInvoiceLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getPurchaseInvoiceLineByIdWithHttpOperationResponse(companyId: string, purchaseInvoiceLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoiceLine>>;

  /**
   * @summary Retrieve the properties and relationships of an purchaseInvoiceLine
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.expand] Entities to expand
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getPurchaseInvoiceLineById(companyId: string, purchaseInvoiceLineId: string, options?: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoiceLine>;
  getPurchaseInvoiceLineById(companyId: string, purchaseInvoiceLineId: string, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;
  getPurchaseInvoiceLineById(companyId: string, purchaseInvoiceLineId: string, options: { expand? : string[], select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;


  /**
   * @summary Delete an purchaseInvoiceLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  deletePurchaseInvoiceLineByIdWithHttpOperationResponse(companyId: string, purchaseInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

  /**
   * @summary Delete an purchaseInvoiceLine in Dynamics 365 Business Central
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  deletePurchaseInvoiceLineById(companyId: string, purchaseInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
  deletePurchaseInvoiceLineById(companyId: string, purchaseInvoiceLineId: string, callback: ServiceCallback<void>): void;
  deletePurchaseInvoiceLineById(companyId: string, purchaseInvoiceLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


  /**
   * @summary Lets the user patch the specified purchaseInvoiceLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the purchaseInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * purchaseInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the purchaseInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * purchaseInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitCost] The unitCost property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the purchaseInvoiceLine entity
   *
   * @param {date} [body.expectedReceiptDate] The expectedReceiptDate property
   * for the purchaseInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<PurchaseInvoiceLine>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  patchPurchaseInvoiceLineByIdWithHttpOperationResponse(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PurchaseInvoiceLine>>;

  /**
   * @summary Lets the user patch the specified purchaseInvoiceLine
   *
   * @param {object} body
   *
   * @param {string} [body.id] The id property for the purchaseInvoiceLine entity
   *
   * @param {uuid} [body.documentId] The documentId property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.sequence] The sequence property for the
   * purchaseInvoiceLine entity
   *
   * @param {uuid} [body.itemId] The itemId property for the purchaseInvoiceLine
   * entity
   *
   * @param {uuid} [body.accountId] The accountId property for the
   * purchaseInvoiceLine entity
   *
   * @param {string} [body.lineType] The lineType property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.lineDetails]
   *
   * @param {string} [body.lineDetails.number] The number property for the
   * documentlineobjectdetailstype entity
   *
   * @param {string} [body.lineDetails.displayName] The displayName property for
   * the documentlineobjectdetailstype entity
   *
   * @param {object} [body.lineDetails.item]
   *
   * @param {uuid} [body.lineDetails.item.id] The id property for the item entity
   *
   * @param {string} [body.lineDetails.item.number] The number property for the
   * item entity
   *
   * @param {string} [body.lineDetails.item.displayName] The displayName property
   * for the item entity
   *
   * @param {string} [body.lineDetails.item.type] The type property for the item
   * entity
   *
   * @param {uuid} [body.lineDetails.item.itemCategoryId] The itemCategoryId
   * property for the item entity
   *
   * @param {string} [body.lineDetails.item.itemCategoryCode] The
   * itemCategoryCode property for the item entity
   *
   * @param {boolean} [body.lineDetails.item.blocked] The blocked property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.baseUnitOfMeasureId] The
   * baseUnitOfMeasureId property for the item entity
   *
   * @param {object} [body.lineDetails.item.baseUnitOfMeasure]
   *
   * @param {string} [body.lineDetails.item.gtin] The gtin property for the item
   * entity
   *
   * @param {number} [body.lineDetails.item.inventory] The inventory property for
   * the item entity
   *
   * @param {number} [body.lineDetails.item.unitPrice] The unitPrice property for
   * the item entity
   *
   * @param {boolean} [body.lineDetails.item.priceIncludesTax] The
   * priceIncludesTax property for the item entity
   *
   * @param {number} [body.lineDetails.item.unitCost] The unitCost property for
   * the item entity
   *
   * @param {uuid} [body.lineDetails.item.taxGroupId] The taxGroupId property for
   * the item entity
   *
   * @param {string} [body.lineDetails.item.taxGroupCode] The taxGroupCode
   * property for the item entity
   *
   * @param {date} [body.lineDetails.item.lastModifiedDateTime] The
   * lastModifiedDateTime property for the item entity
   *
   * @param {array} [body.lineDetails.item.picture]
   *
   * @param {array} [body.lineDetails.item.defaultDimensions]
   *
   * @param {object} [body.lineDetails.item.itemCategory]
   *
   * @param {object} [body.lineDetails.account]
   *
   * @param {uuid} [body.lineDetails.account.id] The id property for the account
   * entity
   *
   * @param {string} [body.lineDetails.account.number] The number property for
   * the account entity
   *
   * @param {string} [body.lineDetails.account.displayName] The displayName
   * property for the account entity
   *
   * @param {string} [body.lineDetails.account.category] The category property
   * for the account entity
   *
   * @param {string} [body.lineDetails.account.subCategory] The subCategory
   * property for the account entity
   *
   * @param {boolean} [body.lineDetails.account.blocked] The blocked property for
   * the account entity
   *
   * @param {date} [body.lineDetails.account.lastModifiedDateTime] The
   * lastModifiedDateTime property for the account entity
   *
   * @param {string} [body.description] The description property for the
   * purchaseInvoiceLine entity
   *
   * @param {object} [body.unitOfMeasure]
   *
   * @param {string} [body.unitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.displayName] The displayName property
   * for the unitofmeasuretype entity
   *
   * @param {string} [body.unitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   *
   * @param {object} [body.unitOfMeasure.unitConversion]
   *
   * @param {string} [body.unitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   *
   * @param {number} [body.unitOfMeasure.unitConversion.fromToConversionRate] The
   * fromToConversionRate property for the itemunitofmeasureconversiontype entity
   *
   * @param {array} [body.unitOfMeasure.unitConversion.picture]
   *
   * @param {array} [body.unitOfMeasure.unitConversion.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.unitConversion.itemCategory]
   *
   * @param {array} [body.unitOfMeasure.picture]
   *
   * @param {array} [body.unitOfMeasure.defaultDimensions]
   *
   * @param {object} [body.unitOfMeasure.itemCategory]
   *
   * @param {uuid} [body.unitOfMeasure.itemCategory.id] The id property for the
   * itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.code] The code property for
   * the itemCategory entity
   *
   * @param {string} [body.unitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   *
   * @param {date} [body.unitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   *
   * @param {number} [body.unitCost] The unitCost property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.quantity] The quantity property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountAmount] The discountAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.discountPercent] The discountPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {boolean} [body.discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.amountExcludingTax] The amountExcludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {string} [body.taxCode] The taxCode property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.taxPercent] The taxPercent property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.totalTaxAmount] The totalTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.amountIncludingTax] The amountIncludingTax property
   * for the purchaseInvoiceLine entity
   *
   * @param {number} [body.invoiceDiscountAllocation] The
   * invoiceDiscountAllocation property for the purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmount] The netAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netTaxAmount] The netTaxAmount property for the
   * purchaseInvoiceLine entity
   *
   * @param {number} [body.netAmountIncludingTax] The netAmountIncludingTax
   * property for the purchaseInvoiceLine entity
   *
   * @param {date} [body.expectedReceiptDate] The expectedReceiptDate property
   * for the purchaseInvoiceLine entity
   *
   * @param {uuid} companyId id for company
   *
   * @param {string} purchaseInvoiceLineId id for purchaseInvoiceLine
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {PurchaseInvoiceLine} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {PurchaseInvoiceLine} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link PurchaseInvoiceLine} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  patchPurchaseInvoiceLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceLineId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PurchaseInvoiceLine>;
  patchPurchaseInvoiceLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceLineId: string, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;
  patchPurchaseInvoiceLineById(body: models.BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, companyId: string, purchaseInvoiceLineId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PurchaseInvoiceLine>): void;


  /**
   * @summary Returns a list of customerSales
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetCustomerSalesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerSalesWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetCustomerSalesOKResponse>>;

  /**
   * @summary Returns a list of customerSales
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetCustomerSalesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetCustomerSalesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetCustomerSalesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerSales(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetCustomerSalesOKResponse>;
  getCustomerSales(companyId: string, callback: ServiceCallback<models.GetCustomerSalesOKResponse>): void;
  getCustomerSales(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetCustomerSalesOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an customerSale object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerSaleCustomerId customerId for customerSale
   *
   * @param {string} customerSaleCustomerNumber customerNumber for customerSale
   *
   * @param {string} customerSaleName name for customerSale
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CustomerSale>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getCustomerSaleByNameByCustomerNumberByCustomerIdWithHttpOperationResponse(companyId: string, customerSaleCustomerId: string, customerSaleCustomerNumber: string, customerSaleName: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CustomerSale>>;

  /**
   * @summary Retrieve the properties and relationships of an customerSale object
   * for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} customerSaleCustomerId customerId for customerSale
   *
   * @param {string} customerSaleCustomerNumber customerNumber for customerSale
   *
   * @param {string} customerSaleName name for customerSale
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CustomerSale} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CustomerSale} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CustomerSale} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getCustomerSaleByNameByCustomerNumberByCustomerId(companyId: string, customerSaleCustomerId: string, customerSaleCustomerNumber: string, customerSaleName: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CustomerSale>;
  getCustomerSaleByNameByCustomerNumberByCustomerId(companyId: string, customerSaleCustomerId: string, customerSaleCustomerNumber: string, customerSaleName: string, callback: ServiceCallback<models.CustomerSale>): void;
  getCustomerSaleByNameByCustomerNumberByCustomerId(companyId: string, customerSaleCustomerId: string, customerSaleCustomerNumber: string, customerSaleName: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomerSale>): void;


  /**
   * @summary Returns a list of vendorPurchases
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<GetVendorPurchasesOKResponse>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getVendorPurchasesWithHttpOperationResponse(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GetVendorPurchasesOKResponse>>;

  /**
   * @summary Returns a list of vendorPurchases
   *
   * @param {uuid} companyId id for company
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {GetVendorPurchasesOKResponse} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {GetVendorPurchasesOKResponse} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link GetVendorPurchasesOKResponse} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getVendorPurchases(companyId: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.GetVendorPurchasesOKResponse>;
  getVendorPurchases(companyId: string, callback: ServiceCallback<models.GetVendorPurchasesOKResponse>): void;
  getVendorPurchases(companyId: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GetVendorPurchasesOKResponse>): void;


  /**
   * @summary Retrieve the properties and relationships of an vendorPurchase
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorPurchaseVendorId vendorId for vendorPurchase
   *
   * @param {string} vendorPurchaseVendorNumber vendorNumber for vendorPurchase
   *
   * @param {string} vendorPurchaseName name for vendorPurchase
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<VendorPurchase>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getVendorPurchaseByNameByVendorNumberByVendorIdWithHttpOperationResponse(companyId: string, vendorPurchaseVendorId: string, vendorPurchaseVendorNumber: string, vendorPurchaseName: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VendorPurchase>>;

  /**
   * @summary Retrieve the properties and relationships of an vendorPurchase
   * object for Dynamics 365 Business Central.
   *
   * @param {uuid} companyId id for company
   *
   * @param {uuid} vendorPurchaseVendorId vendorId for vendorPurchase
   *
   * @param {string} vendorPurchaseVendorNumber vendorNumber for vendorPurchase
   *
   * @param {string} vendorPurchaseName name for vendorPurchase
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {array} [options.select] Selected properties to be retrieved
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {VendorPurchase} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {VendorPurchase} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link VendorPurchase} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getVendorPurchaseByNameByVendorNumberByVendorId(companyId: string, vendorPurchaseVendorId: string, vendorPurchaseVendorNumber: string, vendorPurchaseName: string, options?: { select? : string[], customHeaders? : { [headerName: string]: string; } }): Promise<models.VendorPurchase>;
  getVendorPurchaseByNameByVendorNumberByVendorId(companyId: string, vendorPurchaseVendorId: string, vendorPurchaseVendorNumber: string, vendorPurchaseName: string, callback: ServiceCallback<models.VendorPurchase>): void;
  getVendorPurchaseByNameByVendorNumberByVendorId(companyId: string, vendorPurchaseVendorId: string, vendorPurchaseVendorNumber: string, vendorPurchaseName: string, options: { select? : string[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VendorPurchase>): void;
}

export { Dynamics365BusinessCentral, models as Dynamics365BusinessCentralModels };
