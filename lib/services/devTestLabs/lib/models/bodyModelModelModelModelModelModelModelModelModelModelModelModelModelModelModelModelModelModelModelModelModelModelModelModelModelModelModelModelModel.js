/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel.
 */
class BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel {
  /**
   * Create a BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel.
   * @property {uuid} [id] The id property for the salesCreditMemo entity
   * @property {string} [number] The number property for the salesCreditMemo
   * entity
   * @property {string} [externalDocumentNumber] The externalDocumentNumber
   * property for the salesCreditMemo entity
   * @property {date} [creditMemoDate] The creditMemoDate property for the
   * salesCreditMemo entity
   * @property {date} [dueDate] The dueDate property for the salesCreditMemo
   * entity
   * @property {uuid} [customerId] The customerId property for the
   * salesCreditMemo entity
   * @property {string} [contactId] The contactId property for the
   * salesCreditMemo entity
   * @property {string} [customerNumber] The customerNumber property for the
   * salesCreditMemo entity
   * @property {string} [customerName] The customerName property for the
   * salesCreditMemo entity
   * @property {string} [billToName] The billToName property for the
   * salesCreditMemo entity
   * @property {uuid} [billToCustomerId] The billToCustomerId property for the
   * salesCreditMemo entity
   * @property {string} [billToCustomerNumber] The billToCustomerNumber
   * property for the salesCreditMemo entity
   * @property {object} [sellingPostalAddress]
   * @property {string} [sellingPostalAddress.street] The street property for
   * the postaladdresstype entity
   * @property {string} [sellingPostalAddress.city] The city property for the
   * postaladdresstype entity
   * @property {string} [sellingPostalAddress.state] The state property for the
   * postaladdresstype entity
   * @property {string} [sellingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   * @property {string} [sellingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   * @property {array} [sellingPostalAddress.customerFinancialDetails]
   * @property {array} [sellingPostalAddress.picture]
   * @property {array} [sellingPostalAddress.defaultDimensions]
   * @property {object} [sellingPostalAddress.currency]
   * @property {uuid} [sellingPostalAddress.currency.id] The id property for
   * the currency entity
   * @property {string} [sellingPostalAddress.currency.code] The code property
   * for the currency entity
   * @property {string} [sellingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   * @property {string} [sellingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   * @property {string} [sellingPostalAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   * @property {number} [sellingPostalAddress.currency.amountRoundingPrecision]
   * The amountRoundingPrecision property for the currency entity
   * @property {date} [sellingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   * @property {object} [sellingPostalAddress.paymentTerm]
   * @property {uuid} [sellingPostalAddress.paymentTerm.id] The id property for
   * the paymentTerm entity
   * @property {string} [sellingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   * @property {string} [sellingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   * @property {string} [sellingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   * @property {string}
   * [sellingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   * @property {number} [sellingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   * @property {boolean}
   * [sellingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   * @property {date} [sellingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   * @property {object} [sellingPostalAddress.shipmentMethod]
   * @property {uuid} [sellingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   * @property {string} [sellingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   * @property {string} [sellingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   * @property {date}
   * [sellingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   * @property {object} [sellingPostalAddress.paymentMethod]
   * @property {uuid} [sellingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   * @property {string} [sellingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   * @property {string} [sellingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   * @property {date} [sellingPostalAddress.paymentMethod.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentMethod entity
   * @property {object} [billingPostalAddress]
   * @property {string} [billingPostalAddress.street] The street property for
   * the postaladdresstype entity
   * @property {string} [billingPostalAddress.city] The city property for the
   * postaladdresstype entity
   * @property {string} [billingPostalAddress.state] The state property for the
   * postaladdresstype entity
   * @property {string} [billingPostalAddress.countryLetterCode] The
   * countryLetterCode property for the postaladdresstype entity
   * @property {string} [billingPostalAddress.postalCode] The postalCode
   * property for the postaladdresstype entity
   * @property {array} [billingPostalAddress.customerFinancialDetails]
   * @property {array} [billingPostalAddress.picture]
   * @property {array} [billingPostalAddress.defaultDimensions]
   * @property {object} [billingPostalAddress.currency]
   * @property {uuid} [billingPostalAddress.currency.id] The id property for
   * the currency entity
   * @property {string} [billingPostalAddress.currency.code] The code property
   * for the currency entity
   * @property {string} [billingPostalAddress.currency.displayName] The
   * displayName property for the currency entity
   * @property {string} [billingPostalAddress.currency.symbol] The symbol
   * property for the currency entity
   * @property {string} [billingPostalAddress.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   * @property {number} [billingPostalAddress.currency.amountRoundingPrecision]
   * The amountRoundingPrecision property for the currency entity
   * @property {date} [billingPostalAddress.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   * @property {object} [billingPostalAddress.paymentTerm]
   * @property {uuid} [billingPostalAddress.paymentTerm.id] The id property for
   * the paymentTerm entity
   * @property {string} [billingPostalAddress.paymentTerm.code] The code
   * property for the paymentTerm entity
   * @property {string} [billingPostalAddress.paymentTerm.displayName] The
   * displayName property for the paymentTerm entity
   * @property {string} [billingPostalAddress.paymentTerm.dueDateCalculation]
   * The dueDateCalculation property for the paymentTerm entity
   * @property {string}
   * [billingPostalAddress.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   * @property {number} [billingPostalAddress.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   * @property {boolean}
   * [billingPostalAddress.paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   * @property {date} [billingPostalAddress.paymentTerm.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentTerm entity
   * @property {object} [billingPostalAddress.shipmentMethod]
   * @property {uuid} [billingPostalAddress.shipmentMethod.id] The id property
   * for the shipmentMethod entity
   * @property {string} [billingPostalAddress.shipmentMethod.code] The code
   * property for the shipmentMethod entity
   * @property {string} [billingPostalAddress.shipmentMethod.displayName] The
   * displayName property for the shipmentMethod entity
   * @property {date}
   * [billingPostalAddress.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   * @property {object} [billingPostalAddress.paymentMethod]
   * @property {uuid} [billingPostalAddress.paymentMethod.id] The id property
   * for the paymentMethod entity
   * @property {string} [billingPostalAddress.paymentMethod.code] The code
   * property for the paymentMethod entity
   * @property {string} [billingPostalAddress.paymentMethod.displayName] The
   * displayName property for the paymentMethod entity
   * @property {date} [billingPostalAddress.paymentMethod.lastModifiedDateTime]
   * The lastModifiedDateTime property for the paymentMethod entity
   * @property {uuid} [currencyId] The currencyId property for the
   * salesCreditMemo entity
   * @property {string} [currencyCode] The currencyCode property for the
   * salesCreditMemo entity
   * @property {uuid} [paymentTermsId] The paymentTermsId property for the
   * salesCreditMemo entity
   * @property {string} [salesperson] The salesperson property for the
   * salesCreditMemo entity
   * @property {boolean} [pricesIncludeTax] The pricesIncludeTax property for
   * the salesCreditMemo entity
   * @property {number} [discountAmount] The discountAmount property for the
   * salesCreditMemo entity
   * @property {boolean} [discountAppliedBeforeTax] The
   * discountAppliedBeforeTax property for the salesCreditMemo entity
   * @property {number} [totalAmountExcludingTax] The totalAmountExcludingTax
   * property for the salesCreditMemo entity
   * @property {number} [totalTaxAmount] The totalTaxAmount property for the
   * salesCreditMemo entity
   * @property {number} [totalAmountIncludingTax] The totalAmountIncludingTax
   * property for the salesCreditMemo entity
   * @property {string} [status] The status property for the salesCreditMemo
   * entity
   * @property {date} [lastModifiedDateTime] The lastModifiedDateTime property
   * for the salesCreditMemo entity
   * @property {uuid} [invoiceId] The invoiceId property for the
   * salesCreditMemo entity
   * @property {string} [invoiceNumber] The invoiceNumber property for the
   * salesCreditMemo entity
   * @property {string} [phoneNumber] The phoneNumber property for the
   * salesCreditMemo entity
   * @property {string} [email] The email property for the salesCreditMemo
   * entity
   */
  constructor() {
  }

  /**
   * Defines the metadata of BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel
   *
   * @returns {object} metadata of BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'body',
      type: {
        name: 'Composite',
        className: 'BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          number: {
            required: false,
            serializedName: 'number',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          externalDocumentNumber: {
            required: false,
            serializedName: 'externalDocumentNumber',
            constraints: {
              MaxLength: 35
            },
            type: {
              name: 'String'
            }
          },
          creditMemoDate: {
            required: false,
            serializedName: 'creditMemoDate',
            type: {
              name: 'DateTime'
            }
          },
          dueDate: {
            required: false,
            serializedName: 'dueDate',
            type: {
              name: 'DateTime'
            }
          },
          customerId: {
            required: false,
            serializedName: 'customerId',
            type: {
              name: 'String'
            }
          },
          contactId: {
            required: false,
            serializedName: 'contactId',
            constraints: {
              MaxLength: 250
            },
            type: {
              name: 'String'
            }
          },
          customerNumber: {
            required: false,
            serializedName: 'customerNumber',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          customerName: {
            required: false,
            serializedName: 'customerName',
            constraints: {
              MaxLength: 100
            },
            type: {
              name: 'String'
            }
          },
          billToName: {
            required: false,
            serializedName: 'billToName',
            constraints: {
              MaxLength: 100
            },
            type: {
              name: 'String'
            }
          },
          billToCustomerId: {
            required: false,
            serializedName: 'billToCustomerId',
            type: {
              name: 'String'
            }
          },
          billToCustomerNumber: {
            required: false,
            serializedName: 'billToCustomerNumber',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          sellingPostalAddress: {
            required: false,
            serializedName: 'sellingPostalAddress',
            type: {
              name: 'Composite',
              className: 'Postaladdresstype'
            }
          },
          billingPostalAddress: {
            required: false,
            serializedName: 'billingPostalAddress',
            type: {
              name: 'Composite',
              className: 'Postaladdresstype'
            }
          },
          currencyId: {
            required: false,
            serializedName: 'currencyId',
            type: {
              name: 'String'
            }
          },
          currencyCode: {
            required: false,
            serializedName: 'currencyCode',
            type: {
              name: 'String'
            }
          },
          paymentTermsId: {
            required: false,
            serializedName: 'paymentTermsId',
            type: {
              name: 'String'
            }
          },
          salesperson: {
            required: false,
            serializedName: 'salesperson',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          pricesIncludeTax: {
            required: false,
            serializedName: 'pricesIncludeTax',
            type: {
              name: 'Boolean'
            }
          },
          discountAmount: {
            required: false,
            serializedName: 'discountAmount',
            type: {
              name: 'Number'
            }
          },
          discountAppliedBeforeTax: {
            required: false,
            serializedName: 'discountAppliedBeforeTax',
            type: {
              name: 'Boolean'
            }
          },
          totalAmountExcludingTax: {
            required: false,
            serializedName: 'totalAmountExcludingTax',
            type: {
              name: 'Number'
            }
          },
          totalTaxAmount: {
            required: false,
            serializedName: 'totalTaxAmount',
            type: {
              name: 'Number'
            }
          },
          totalAmountIncludingTax: {
            required: false,
            serializedName: 'totalAmountIncludingTax',
            type: {
              name: 'Number'
            }
          },
          status: {
            required: false,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          lastModifiedDateTime: {
            required: false,
            serializedName: 'lastModifiedDateTime',
            type: {
              name: 'DateTime'
            }
          },
          invoiceId: {
            required: false,
            serializedName: 'invoiceId',
            type: {
              name: 'String'
            }
          },
          invoiceNumber: {
            required: false,
            serializedName: 'invoiceNumber',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          phoneNumber: {
            required: false,
            serializedName: 'phoneNumber',
            constraints: {
              MaxLength: 30
            },
            type: {
              name: 'String'
            }
          },
          email: {
            required: false,
            serializedName: 'email',
            constraints: {
              MaxLength: 80
            },
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel;
