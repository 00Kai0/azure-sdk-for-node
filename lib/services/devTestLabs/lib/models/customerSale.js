/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a CustomerSale.
 */
class CustomerSale {
  /**
   * Create a CustomerSale.
   * @property {uuid} [customerId] The customerId property for the customerSale
   * entity
   * @property {string} [customerNumber] The customerNumber property for the
   * customerSale entity
   * @property {string} [name] The name property for the customerSale entity
   * @property {number} [totalSalesAmount] The totalSalesAmount property for
   * the customerSale entity
   * @property {date} [dateFilterFilterOnly] The dateFilter_FilterOnly property
   * for the customerSale entity
   */
  constructor() {
  }

  /**
   * Defines the metadata of CustomerSale
   *
   * @returns {object} metadata of CustomerSale
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'customerSale',
      type: {
        name: 'Composite',
        className: 'CustomerSale',
        modelProperties: {
          customerId: {
            required: false,
            serializedName: 'customerId',
            type: {
              name: 'String'
            }
          },
          customerNumber: {
            required: false,
            serializedName: 'customerNumber',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            constraints: {
              MaxLength: 100
            },
            type: {
              name: 'String'
            }
          },
          totalSalesAmount: {
            required: false,
            serializedName: 'totalSalesAmount',
            type: {
              name: 'Number'
            }
          },
          dateFilterFilterOnly: {
            required: false,
            serializedName: 'dateFilter_FilterOnly',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = CustomerSale;
