/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a Customer.
 */
class Customer {
  /**
   * Create a Customer.
   * @property {uuid} [id] The id property for the customer entity
   * @property {string} [number] The number property for the customer entity
   * @property {string} [displayName] The displayName property for the customer
   * entity
   * @property {string} [type] The type property for the customer entity
   * @property {object} [address]
   * @property {string} [address.street] The street property for the
   * postaladdresstype entity
   * @property {string} [address.city] The city property for the
   * postaladdresstype entity
   * @property {string} [address.state] The state property for the
   * postaladdresstype entity
   * @property {string} [address.countryLetterCode] The countryLetterCode
   * property for the postaladdresstype entity
   * @property {string} [address.postalCode] The postalCode property for the
   * postaladdresstype entity
   * @property {array} [address.customerFinancialDetails]
   * @property {array} [address.picture]
   * @property {array} [address.defaultDimensions]
   * @property {object} [address.currency]
   * @property {uuid} [address.currency.id] The id property for the currency
   * entity
   * @property {string} [address.currency.code] The code property for the
   * currency entity
   * @property {string} [address.currency.displayName] The displayName property
   * for the currency entity
   * @property {string} [address.currency.symbol] The symbol property for the
   * currency entity
   * @property {string} [address.currency.amountDecimalPlaces] The
   * amountDecimalPlaces property for the currency entity
   * @property {number} [address.currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   * @property {date} [address.currency.lastModifiedDateTime] The
   * lastModifiedDateTime property for the currency entity
   * @property {object} [address.paymentTerm]
   * @property {uuid} [address.paymentTerm.id] The id property for the
   * paymentTerm entity
   * @property {string} [address.paymentTerm.code] The code property for the
   * paymentTerm entity
   * @property {string} [address.paymentTerm.displayName] The displayName
   * property for the paymentTerm entity
   * @property {string} [address.paymentTerm.dueDateCalculation] The
   * dueDateCalculation property for the paymentTerm entity
   * @property {string} [address.paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   * @property {number} [address.paymentTerm.discountPercent] The
   * discountPercent property for the paymentTerm entity
   * @property {boolean} [address.paymentTerm.calculateDiscountOnCreditMemos]
   * The calculateDiscountOnCreditMemos property for the paymentTerm entity
   * @property {date} [address.paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   * @property {object} [address.shipmentMethod]
   * @property {uuid} [address.shipmentMethod.id] The id property for the
   * shipmentMethod entity
   * @property {string} [address.shipmentMethod.code] The code property for the
   * shipmentMethod entity
   * @property {string} [address.shipmentMethod.displayName] The displayName
   * property for the shipmentMethod entity
   * @property {date} [address.shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   * @property {object} [address.paymentMethod]
   * @property {uuid} [address.paymentMethod.id] The id property for the
   * paymentMethod entity
   * @property {string} [address.paymentMethod.code] The code property for the
   * paymentMethod entity
   * @property {string} [address.paymentMethod.displayName] The displayName
   * property for the paymentMethod entity
   * @property {date} [address.paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   * @property {string} [phoneNumber] The phoneNumber property for the customer
   * entity
   * @property {string} [email] The email property for the customer entity
   * @property {string} [website] The website property for the customer entity
   * @property {boolean} [taxLiable] The taxLiable property for the customer
   * entity
   * @property {uuid} [taxAreaId] The taxAreaId property for the customer
   * entity
   * @property {string} [taxAreaDisplayName] The taxAreaDisplayName property
   * for the customer entity
   * @property {string} [taxRegistrationNumber] The taxRegistrationNumber
   * property for the customer entity
   * @property {uuid} [currencyId] The currencyId property for the customer
   * entity
   * @property {string} [currencyCode] The currencyCode property for the
   * customer entity
   * @property {uuid} [paymentTermsId] The paymentTermsId property for the
   * customer entity
   * @property {uuid} [shipmentMethodId] The shipmentMethodId property for the
   * customer entity
   * @property {uuid} [paymentMethodId] The paymentMethodId property for the
   * customer entity
   * @property {string} [blocked] The blocked property for the customer entity
   * @property {date} [lastModifiedDateTime] The lastModifiedDateTime property
   * for the customer entity
   * @property {array} [customerFinancialDetails]
   * @property {array} [picture]
   * @property {array} [defaultDimensions]
   * @property {object} [currency]
   * @property {uuid} [currency.id] The id property for the currency entity
   * @property {string} [currency.code] The code property for the currency
   * entity
   * @property {string} [currency.displayName] The displayName property for the
   * currency entity
   * @property {string} [currency.symbol] The symbol property for the currency
   * entity
   * @property {string} [currency.amountDecimalPlaces] The amountDecimalPlaces
   * property for the currency entity
   * @property {number} [currency.amountRoundingPrecision] The
   * amountRoundingPrecision property for the currency entity
   * @property {date} [currency.lastModifiedDateTime] The lastModifiedDateTime
   * property for the currency entity
   * @property {object} [paymentTerm]
   * @property {uuid} [paymentTerm.id] The id property for the paymentTerm
   * entity
   * @property {string} [paymentTerm.code] The code property for the
   * paymentTerm entity
   * @property {string} [paymentTerm.displayName] The displayName property for
   * the paymentTerm entity
   * @property {string} [paymentTerm.dueDateCalculation] The dueDateCalculation
   * property for the paymentTerm entity
   * @property {string} [paymentTerm.discountDateCalculation] The
   * discountDateCalculation property for the paymentTerm entity
   * @property {number} [paymentTerm.discountPercent] The discountPercent
   * property for the paymentTerm entity
   * @property {boolean} [paymentTerm.calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   * @property {date} [paymentTerm.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentTerm entity
   * @property {object} [shipmentMethod]
   * @property {uuid} [shipmentMethod.id] The id property for the
   * shipmentMethod entity
   * @property {string} [shipmentMethod.code] The code property for the
   * shipmentMethod entity
   * @property {string} [shipmentMethod.displayName] The displayName property
   * for the shipmentMethod entity
   * @property {date} [shipmentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the shipmentMethod entity
   * @property {object} [paymentMethod]
   * @property {uuid} [paymentMethod.id] The id property for the paymentMethod
   * entity
   * @property {string} [paymentMethod.code] The code property for the
   * paymentMethod entity
   * @property {string} [paymentMethod.displayName] The displayName property
   * for the paymentMethod entity
   * @property {date} [paymentMethod.lastModifiedDateTime] The
   * lastModifiedDateTime property for the paymentMethod entity
   */
  constructor() {
  }

  /**
   * Defines the metadata of Customer
   *
   * @returns {object} metadata of Customer
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'customer',
      type: {
        name: 'Composite',
        className: 'Customer',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          number: {
            required: false,
            serializedName: 'number',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            constraints: {
              MaxLength: 100
            },
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          address: {
            required: false,
            serializedName: 'address',
            type: {
              name: 'Composite',
              className: 'Postaladdresstype'
            }
          },
          phoneNumber: {
            required: false,
            serializedName: 'phoneNumber',
            constraints: {
              MaxLength: 30
            },
            type: {
              name: 'String'
            }
          },
          email: {
            required: false,
            serializedName: 'email',
            constraints: {
              MaxLength: 80
            },
            type: {
              name: 'String'
            }
          },
          website: {
            required: false,
            serializedName: 'website',
            constraints: {
              MaxLength: 80
            },
            type: {
              name: 'String'
            }
          },
          taxLiable: {
            required: false,
            serializedName: 'taxLiable',
            type: {
              name: 'Boolean'
            }
          },
          taxAreaId: {
            required: false,
            serializedName: 'taxAreaId',
            type: {
              name: 'String'
            }
          },
          taxAreaDisplayName: {
            required: false,
            serializedName: 'taxAreaDisplayName',
            type: {
              name: 'String'
            }
          },
          taxRegistrationNumber: {
            required: false,
            serializedName: 'taxRegistrationNumber',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          currencyId: {
            required: false,
            serializedName: 'currencyId',
            type: {
              name: 'String'
            }
          },
          currencyCode: {
            required: false,
            serializedName: 'currencyCode',
            type: {
              name: 'String'
            }
          },
          paymentTermsId: {
            required: false,
            serializedName: 'paymentTermsId',
            type: {
              name: 'String'
            }
          },
          shipmentMethodId: {
            required: false,
            serializedName: 'shipmentMethodId',
            type: {
              name: 'String'
            }
          },
          paymentMethodId: {
            required: false,
            serializedName: 'paymentMethodId',
            type: {
              name: 'String'
            }
          },
          blocked: {
            required: false,
            serializedName: 'blocked',
            type: {
              name: 'String'
            }
          },
          lastModifiedDateTime: {
            required: false,
            serializedName: 'lastModifiedDateTime',
            type: {
              name: 'DateTime'
            }
          },
          customerFinancialDetails: {
            required: false,
            serializedName: 'customerFinancialDetails',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CustomerFinancialDetailElementType',
                  type: {
                    name: 'Composite',
                    className: 'CustomerFinancialDetail'
                  }
              }
            }
          },
          picture: {
            required: false,
            serializedName: 'picture',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PictureElementType',
                  type: {
                    name: 'Composite',
                    className: 'Picture'
                  }
              }
            }
          },
          defaultDimensions: {
            required: false,
            serializedName: 'defaultDimensions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DefaultDimensionsElementType',
                  type: {
                    name: 'Composite',
                    className: 'DefaultDimensions'
                  }
              }
            }
          },
          currency: {
            required: false,
            serializedName: 'currency',
            type: {
              name: 'Composite',
              className: 'Currency'
            }
          },
          paymentTerm: {
            required: false,
            serializedName: 'paymentTerm',
            type: {
              name: 'Composite',
              className: 'PaymentTerm'
            }
          },
          shipmentMethod: {
            required: false,
            serializedName: 'shipmentMethod',
            type: {
              name: 'Composite',
              className: 'ShipmentMethod'
            }
          },
          paymentMethod: {
            required: false,
            serializedName: 'paymentMethod',
            type: {
              name: 'Composite',
              className: 'PaymentMethod'
            }
          }
        }
      }
    };
  }
}

module.exports = Customer;
