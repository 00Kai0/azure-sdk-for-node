/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a Account.
 */
class Account {
  /**
   * Create a Account.
   * @property {uuid} [id] The id property for the account entity
   * @property {string} [number] The number property for the account entity
   * @property {string} [displayName] The displayName property for the account
   * entity
   * @property {string} [category] The category property for the account entity
   * @property {string} [subCategory] The subCategory property for the account
   * entity
   * @property {boolean} [blocked] The blocked property for the account entity
   * @property {date} [lastModifiedDateTime] The lastModifiedDateTime property
   * for the account entity
   */
  constructor() {
  }

  /**
   * Defines the metadata of Account
   *
   * @returns {object} metadata of Account
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'account',
      type: {
        name: 'Composite',
        className: 'Account',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          number: {
            required: false,
            serializedName: 'number',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            constraints: {
              MaxLength: 100
            },
            type: {
              name: 'String'
            }
          },
          category: {
            required: false,
            serializedName: 'category',
            type: {
              name: 'String'
            }
          },
          subCategory: {
            required: false,
            serializedName: 'subCategory',
            constraints: {
              MaxLength: 80
            },
            type: {
              name: 'String'
            }
          },
          blocked: {
            required: false,
            serializedName: 'blocked',
            type: {
              name: 'Boolean'
            }
          },
          lastModifiedDateTime: {
            required: false,
            serializedName: 'lastModifiedDateTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = Account;
