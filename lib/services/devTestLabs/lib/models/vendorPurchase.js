/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a VendorPurchase.
 */
class VendorPurchase {
  /**
   * Create a VendorPurchase.
   * @property {uuid} [vendorId] The vendorId property for the vendorPurchase
   * entity
   * @property {string} [vendorNumber] The vendorNumber property for the
   * vendorPurchase entity
   * @property {string} [name] The name property for the vendorPurchase entity
   * @property {number} [totalPurchaseAmount] The totalPurchaseAmount property
   * for the vendorPurchase entity
   * @property {date} [dateFilterFilterOnly] The dateFilter_FilterOnly property
   * for the vendorPurchase entity
   */
  constructor() {
  }

  /**
   * Defines the metadata of VendorPurchase
   *
   * @returns {object} metadata of VendorPurchase
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'vendorPurchase',
      type: {
        name: 'Composite',
        className: 'VendorPurchase',
        modelProperties: {
          vendorId: {
            required: false,
            serializedName: 'vendorId',
            type: {
              name: 'String'
            }
          },
          vendorNumber: {
            required: false,
            serializedName: 'vendorNumber',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            constraints: {
              MaxLength: 100
            },
            type: {
              name: 'String'
            }
          },
          totalPurchaseAmount: {
            required: false,
            serializedName: 'totalPurchaseAmount',
            type: {
              name: 'Number'
            }
          },
          dateFilterFilterOnly: {
            required: false,
            serializedName: 'dateFilter_FilterOnly',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = VendorPurchase;
