/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a Item.
 */
class Item {
  /**
   * Create a Item.
   * @property {uuid} [id] The id property for the item entity
   * @property {string} [number] The number property for the item entity
   * @property {string} [displayName] The displayName property for the item
   * entity
   * @property {string} [type] The type property for the item entity
   * @property {uuid} [itemCategoryId] The itemCategoryId property for the item
   * entity
   * @property {string} [itemCategoryCode] The itemCategoryCode property for
   * the item entity
   * @property {boolean} [blocked] The blocked property for the item entity
   * @property {uuid} [baseUnitOfMeasureId] The baseUnitOfMeasureId property
   * for the item entity
   * @property {object} [baseUnitOfMeasure]
   * @property {string} [baseUnitOfMeasure.code] The code property for the
   * unitofmeasuretype entity
   * @property {string} [baseUnitOfMeasure.displayName] The displayName
   * property for the unitofmeasuretype entity
   * @property {string} [baseUnitOfMeasure.symbol] The symbol property for the
   * unitofmeasuretype entity
   * @property {object} [baseUnitOfMeasure.unitConversion]
   * @property {string} [baseUnitOfMeasure.unitConversion.toUnitOfMeasure] The
   * toUnitOfMeasure property for the itemunitofmeasureconversiontype entity
   * @property {number} [baseUnitOfMeasure.unitConversion.fromToConversionRate]
   * The fromToConversionRate property for the itemunitofmeasureconversiontype
   * entity
   * @property {array} [baseUnitOfMeasure.unitConversion.picture]
   * @property {array} [baseUnitOfMeasure.unitConversion.defaultDimensions]
   * @property {object} [baseUnitOfMeasure.unitConversion.itemCategory]
   * @property {uuid} [baseUnitOfMeasure.unitConversion.itemCategory.id] The id
   * property for the itemCategory entity
   * @property {string} [baseUnitOfMeasure.unitConversion.itemCategory.code]
   * The code property for the itemCategory entity
   * @property {string}
   * [baseUnitOfMeasure.unitConversion.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   * @property {date}
   * [baseUnitOfMeasure.unitConversion.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   * @property {array} [baseUnitOfMeasure.picture]
   * @property {array} [baseUnitOfMeasure.defaultDimensions]
   * @property {object} [baseUnitOfMeasure.itemCategory]
   * @property {uuid} [baseUnitOfMeasure.itemCategory.id] The id property for
   * the itemCategory entity
   * @property {string} [baseUnitOfMeasure.itemCategory.code] The code property
   * for the itemCategory entity
   * @property {string} [baseUnitOfMeasure.itemCategory.displayName] The
   * displayName property for the itemCategory entity
   * @property {date} [baseUnitOfMeasure.itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   * @property {string} [gtin] The gtin property for the item entity
   * @property {number} [inventory] The inventory property for the item entity
   * @property {number} [unitPrice] The unitPrice property for the item entity
   * @property {boolean} [priceIncludesTax] The priceIncludesTax property for
   * the item entity
   * @property {number} [unitCost] The unitCost property for the item entity
   * @property {uuid} [taxGroupId] The taxGroupId property for the item entity
   * @property {string} [taxGroupCode] The taxGroupCode property for the item
   * entity
   * @property {date} [lastModifiedDateTime] The lastModifiedDateTime property
   * for the item entity
   * @property {array} [picture]
   * @property {array} [defaultDimensions]
   * @property {object} [itemCategory]
   * @property {uuid} [itemCategory.id] The id property for the itemCategory
   * entity
   * @property {string} [itemCategory.code] The code property for the
   * itemCategory entity
   * @property {string} [itemCategory.displayName] The displayName property for
   * the itemCategory entity
   * @property {date} [itemCategory.lastModifiedDateTime] The
   * lastModifiedDateTime property for the itemCategory entity
   */
  constructor() {
  }

  /**
   * Defines the metadata of Item
   *
   * @returns {object} metadata of Item
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'item',
      type: {
        name: 'Composite',
        className: 'Item',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          number: {
            required: false,
            serializedName: 'number',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            constraints: {
              MaxLength: 100
            },
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          itemCategoryId: {
            required: false,
            serializedName: 'itemCategoryId',
            type: {
              name: 'String'
            }
          },
          itemCategoryCode: {
            required: false,
            serializedName: 'itemCategoryCode',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          blocked: {
            required: false,
            serializedName: 'blocked',
            type: {
              name: 'Boolean'
            }
          },
          baseUnitOfMeasureId: {
            required: false,
            serializedName: 'baseUnitOfMeasureId',
            type: {
              name: 'String'
            }
          },
          baseUnitOfMeasure: {
            required: false,
            serializedName: 'baseUnitOfMeasure',
            type: {
              name: 'Composite',
              className: 'Unitofmeasuretype'
            }
          },
          gtin: {
            required: false,
            serializedName: 'gtin',
            constraints: {
              MaxLength: 14
            },
            type: {
              name: 'String'
            }
          },
          inventory: {
            required: false,
            serializedName: 'inventory',
            type: {
              name: 'Number'
            }
          },
          unitPrice: {
            required: false,
            serializedName: 'unitPrice',
            type: {
              name: 'Number'
            }
          },
          priceIncludesTax: {
            required: false,
            serializedName: 'priceIncludesTax',
            type: {
              name: 'Boolean'
            }
          },
          unitCost: {
            required: false,
            serializedName: 'unitCost',
            type: {
              name: 'Number'
            }
          },
          taxGroupId: {
            required: false,
            serializedName: 'taxGroupId',
            type: {
              name: 'String'
            }
          },
          taxGroupCode: {
            required: false,
            serializedName: 'taxGroupCode',
            constraints: {
              MaxLength: 20
            },
            type: {
              name: 'String'
            }
          },
          lastModifiedDateTime: {
            required: false,
            serializedName: 'lastModifiedDateTime',
            type: {
              name: 'DateTime'
            }
          },
          picture: {
            required: false,
            serializedName: 'picture',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PictureElementType',
                  type: {
                    name: 'Composite',
                    className: 'Picture'
                  }
              }
            }
          },
          defaultDimensions: {
            required: false,
            serializedName: 'defaultDimensions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DefaultDimensionsElementType',
                  type: {
                    name: 'Composite',
                    className: 'DefaultDimensions'
                  }
              }
            }
          },
          itemCategory: {
            required: false,
            serializedName: 'itemCategory',
            type: {
              name: 'Composite',
              className: 'ItemCategory'
            }
          }
        }
      }
    };
  }
}

module.exports = Item;
