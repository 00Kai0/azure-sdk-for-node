/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a PaymentTerm.
 */
class PaymentTerm {
  /**
   * Create a PaymentTerm.
   * @property {uuid} [id] The id property for the paymentTerm entity
   * @property {string} [code] The code property for the paymentTerm entity
   * @property {string} [displayName] The displayName property for the
   * paymentTerm entity
   * @property {string} [dueDateCalculation] The dueDateCalculation property
   * for the paymentTerm entity
   * @property {string} [discountDateCalculation] The discountDateCalculation
   * property for the paymentTerm entity
   * @property {number} [discountPercent] The discountPercent property for the
   * paymentTerm entity
   * @property {boolean} [calculateDiscountOnCreditMemos] The
   * calculateDiscountOnCreditMemos property for the paymentTerm entity
   * @property {date} [lastModifiedDateTime] The lastModifiedDateTime property
   * for the paymentTerm entity
   */
  constructor() {
  }

  /**
   * Defines the metadata of PaymentTerm
   *
   * @returns {object} metadata of PaymentTerm
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'paymentTerm',
      type: {
        name: 'Composite',
        className: 'PaymentTerm',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          code: {
            required: false,
            serializedName: 'code',
            constraints: {
              MaxLength: 10
            },
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            constraints: {
              MaxLength: 100
            },
            type: {
              name: 'String'
            }
          },
          dueDateCalculation: {
            required: false,
            serializedName: 'dueDateCalculation',
            type: {
              name: 'String'
            }
          },
          discountDateCalculation: {
            required: false,
            serializedName: 'discountDateCalculation',
            type: {
              name: 'String'
            }
          },
          discountPercent: {
            required: false,
            serializedName: 'discountPercent',
            type: {
              name: 'Number'
            }
          },
          calculateDiscountOnCreditMemos: {
            required: false,
            serializedName: 'calculateDiscountOnCreditMemos',
            type: {
              name: 'Boolean'
            }
          },
          lastModifiedDateTime: {
            required: false,
            serializedName: 'lastModifiedDateTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = PaymentTerm;
