/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * Sku parameters supplied to the create redis operation.
 * @member {string} name What type of redis cache to deploy. Valid values:
 * (Basic, Standard, Premium). Possible values for this property include:
 * 'Basic', 'Standard', 'Premium'.
 * 
 * @member {string} family Which family to use. Valid values: (C, P). Possible
 * values for this property include: 'C', 'P'.
 * 
 * @member {number} capacity What size of redis cache to deploy. Valid values:
 * for C family (0, 1, 2, 3, 4, 5, 6), for P family (1, 2, 3, 4)
 * 
 */
function Sku(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.name !== undefined) {
      this.name = parameters.name;
    }
    if (parameters.family !== undefined) {
      this.family = parameters.family;
    }
    if (parameters.capacity !== undefined) {
      this.capacity = parameters.capacity;
    }
  }    
}


/**
 * Validate the payload against the Sku schema
 *
 * @param {JSON} payload
 *
 */
Sku.prototype.serialize = function () {
  var payload = {};
  if (this['name'] === null || this['name'] === undefined || typeof this['name'].valueOf() !== 'string') {
    throw new Error('this[\'name\'] cannot be null or undefined and it must be of type string.');
  }
  payload['name'] = this['name'];

  if (this['family'] === null || this['family'] === undefined || typeof this['family'].valueOf() !== 'string') {
    throw new Error('this[\'family\'] cannot be null or undefined and it must be of type string.');
  }
  payload['family'] = this['family'];

  if (this['capacity'] === null || this['capacity'] === undefined || typeof this['capacity'] !== 'number') {
    throw new Error('this[\'capacity\'] cannot be null or undefined and it must be of type number.');
  }
  payload['capacity'] = this['capacity'];

  return payload;
};

/**
 * Deserialize the instance to Sku schema
 *
 * @param {JSON} instance
 *
 */
Sku.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['name'] !== undefined) {
      this['name'] = instance['name'];
    }

    if (instance['family'] !== undefined) {
      this['family'] = instance['family'];
    }

    if (instance['capacity'] !== undefined) {
      this['capacity'] = instance['capacity'];
    }
  }

  return this;
};

module.exports = Sku;
