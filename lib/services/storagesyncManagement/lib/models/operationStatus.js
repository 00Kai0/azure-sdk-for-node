/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Operation status object
 *
 */
class OperationStatus {
  /**
   * Create a OperationStatus.
   * @property {string} [name] Operation Id
   * @property {string} [status] Operation status
   * @property {date} [startTime] Start time of the operation
   * @property {date} [endTime] End time of the operation
   * @property {object} [error] Error details.
   * @property {string} [error.code] Error code of the given entry.
   * @property {string} [error.message] Error message of the given entry.
   * @property {string} [error.target] Target of the given error entry.
   * @property {object} [error.details] Error details of the given entry.
   * @property {string} [error.details.code] Error code of the given entry.
   * @property {string} [error.details.message] Error message of the given
   * entry.
   * @property {string} [error.details.target] Target of the given entry.
   */
  constructor() {
  }

  /**
   * Defines the metadata of OperationStatus
   *
   * @returns {object} metadata of OperationStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OperationStatus',
      type: {
        name: 'Composite',
        className: 'OperationStatus',
        modelProperties: {
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            readOnly: true,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            readOnly: true,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            readOnly: true,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          error: {
            required: false,
            readOnly: true,
            serializedName: 'error',
            type: {
              name: 'Composite',
              className: 'StorageSyncApiError'
            }
          }
        }
      }
    };
  }
}

module.exports = OperationStatus;
