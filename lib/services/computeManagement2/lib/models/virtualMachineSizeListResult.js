/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.12.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the VirtualMachineSizeListResult class.
 * @constructor
 * The List Virtual Machine operation response.
 * @member {array} [value] Gets or sets the list of virtual machine sizes.
 * 
 */
function VirtualMachineSizeListResult(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.value) {
      var tempParametersvalue = [];
      parameters.value.forEach(function(element) {
        if (element) {
          element = new models['VirtualMachineSize'](element);
        }
        tempParametersvalue.push(element);
      });
      this.value = tempParametersvalue;
    }
  }    
}


/**
 * Validate the payload against the VirtualMachineSizeListResult schema
 *
 * @param {JSON} payload
 *
 */
VirtualMachineSizeListResult.prototype.serialize = function () {
  var payload = {};
  if (util.isArray(this['value'])) {
    payload['value'] = [];
    for (var i = 0; i < this['value'].length; i++) {
      if (this['value'][i]) {
        if (payload['value'] === null || payload['value'] === undefined) {
          payload['value'] = {};
        }
        payload['value'][i] = this['value'][i].serialize();
      }
    }
  }

  return payload;
};

/**
 * Deserialize the instance to VirtualMachineSizeListResult schema
 *
 * @param {JSON} instance
 *
 */
VirtualMachineSizeListResult.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['value']) {
      var tempInstancevalue = [];
      instance['value'].forEach(function(element1) {
        if (element1) {
          element1 = new models['VirtualMachineSize']().deserialize(element1);
        }
        tempInstancevalue.push(element1);
      });
      this['value'] = tempInstancevalue;
    }
  }

  return this;
};

module.exports = VirtualMachineSizeListResult;
