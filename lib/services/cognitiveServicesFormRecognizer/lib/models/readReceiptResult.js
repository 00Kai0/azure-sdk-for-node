/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Analysis result of the 'Batch Read Receipt' operation.
 *
 */
class ReadReceiptResult {
  /**
   * Create a ReadReceiptResult.
   * @property {string} [status] Status of the read operation. Possible values
   * include: 'Not Started', 'Running', 'Failed', 'Succeeded'
   * @property {array} [recognitionResults] Text recognition result of the
   * 'Batch Read Receipt' operation.
   * @property {array} [understandingResults] Semantic understanding result of
   * the 'Batch Read Receipt' operation.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ReadReceiptResult
   *
   * @returns {object} metadata of ReadReceiptResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'readReceiptResult',
      type: {
        name: 'Composite',
        className: 'ReadReceiptResult',
        modelProperties: {
          status: {
            required: false,
            nullable: false,
            serializedName: 'status',
            type: {
              name: 'Enum',
              allowedValues: [ 'Not Started', 'Running', 'Failed', 'Succeeded' ]
            }
          },
          recognitionResults: {
            required: false,
            serializedName: 'recognitionResults',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TextRecognitionResultElementType',
                  type: {
                    name: 'Composite',
                    className: 'TextRecognitionResult'
                  }
              }
            }
          },
          understandingResults: {
            required: false,
            serializedName: 'understandingResults',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UnderstandingResultElementType',
                  type: {
                    name: 'Composite',
                    className: 'UnderstandingResult'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ReadReceiptResult;
