/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Canonical representation of single extracted text.
 *
 */
class ExtractedToken {
  /**
   * Create a ExtractedToken.
   * @property {string} [text] String value of the extracted text.
   * @property {array} [boundingBox] Bounding box of the extracted text.
   * Represents the
   * location of the extracted text as a pair of
   * cartesian co-ordinates. The co-ordinate pairs are arranged by
   * top-left, top-right, bottom-right and bottom-left endpoints box
   * with origin reference from the bottom-left of the page.
   * @property {number} [confidence] A measure of accuracy of the extracted
   * text.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ExtractedToken
   *
   * @returns {object} metadata of ExtractedToken
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ExtractedToken',
      type: {
        name: 'Composite',
        className: 'ExtractedToken',
        modelProperties: {
          text: {
            required: false,
            serializedName: 'text',
            type: {
              name: 'String'
            }
          },
          boundingBox: {
            required: false,
            serializedName: 'boundingBox',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'NumberElementType',
                  type: {
                    name: 'Number'
                  }
              }
            }
          },
          confidence: {
            required: false,
            serializedName: 'confidence',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = ExtractedToken;
