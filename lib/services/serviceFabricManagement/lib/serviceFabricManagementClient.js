/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

/* jshint latedef:false */
/* jshint forin:false */
/* jshint noempty:false */

'use strict';

const msRest = require('ms-rest');
const msRestAzure = require('ms-rest-azure');
const ServiceClient = msRestAzure.AzureServiceClient;

const models = require('./models');
const operations = require('./operations');


/** Class representing a ServiceFabricManagementClient. */
class ServiceFabricManagementClient extends ServiceClient {
  /**
   * Create a ServiceFabricManagementClient.
   * @param {credentials} credentials - Credentials needed for the client to connect to Azure.
   * @param {string} applicationName - The name of the application resource.
   * @param {string} applicationTypeName - The name of the application type name resource
   * @param {string} serviceName - The name of the service resource in the format of {applicationName}~{serviceName}.
   * @param {string} subscriptionId - The customer subscription identifier
   * @param {string} version - The application type version.
   * @param {cluster} cluster - The cluster resource.
   * @param {clusterUpdateParameters} clusterUpdateParameters - The parameters which contains the property value and property name which used to update the cluster configuration.
   * @param {string} [baseUri] - The base URI of the service.
   * @param {object} [options] - The parameter options
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   * @param {string} [options.acceptLanguage] - Gets or sets the preferred language for the response.
   * @param {number} [options.longRunningOperationRetryTimeout] - Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.
   * @param {boolean} [options.generateClientRequestId] - When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
   */
  constructor(credentials, applicationName, applicationTypeName, serviceName, subscriptionId, version, cluster, clusterUpdateParameters, baseUri, options) {
    if (credentials === null || credentials === undefined) {
      throw new Error('\'credentials\' cannot be null.');
    }
    if (applicationName === null || applicationName === undefined) {
      throw new Error('\'applicationName\' cannot be null.');
    }
    if (applicationTypeName === null || applicationTypeName === undefined) {
      throw new Error('\'applicationTypeName\' cannot be null.');
    }
    if (serviceName === null || serviceName === undefined) {
      throw new Error('\'serviceName\' cannot be null.');
    }
    if (subscriptionId === null || subscriptionId === undefined) {
      throw new Error('\'subscriptionId\' cannot be null.');
    }
    if (version === null || version === undefined) {
      throw new Error('\'version\' cannot be null.');
    }
    if (cluster === null || cluster === undefined) {
      throw new Error('\'cluster\' cannot be null.');
    }
    if (clusterUpdateParameters === null || clusterUpdateParameters === undefined) {
      throw new Error('\'clusterUpdateParameters\' cannot be null.');
    }

    if (!options) options = {};

    super(credentials, options);

    this.apiVersion = '2017-07-01-preview';
    this.acceptLanguage = 'en-US';
    this.longRunningOperationRetryTimeout = 30;
    this.generateClientRequestId = true;
    this.baseUri = baseUri;
    if (!this.baseUri) {
      this.baseUri = 'https://management.azure.com';
    }
    this.credentials = credentials;
    this.applicationName = applicationName;
    this.applicationTypeName = applicationTypeName;
    this.serviceName = serviceName;
    this.subscriptionId = subscriptionId;
    this.version = version;
    this.cluster = cluster;
    this.clusterUpdateParameters = clusterUpdateParameters;

    let packageInfo = this.getPackageJsonInfo(__dirname);
    this.addUserAgentInfo(`${packageInfo.name}/${packageInfo.version}`);
    if(options.acceptLanguage !== null && options.acceptLanguage !== undefined) {
      this.acceptLanguage = options.acceptLanguage;
    }
    if(options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {
      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;
    }
    if(options.generateClientRequestId !== null && options.generateClientRequestId !== undefined) {
      this.generateClientRequestId = options.generateClientRequestId;
    }
    this.clusters = new operations.Clusters(this);
    this.clusterVersions = new operations.ClusterVersions(this);
    this.operations = new operations.Operations(this);
    this.applicationType = new operations.ApplicationType(this);
    this.version = new operations.Version(this);
    this.application = new operations.Application(this);
    this.service = new operations.Service(this);
    this.models = models;
    msRest.addSerializationMixin(this);
  }

}

module.exports = ServiceFabricManagementClient;
