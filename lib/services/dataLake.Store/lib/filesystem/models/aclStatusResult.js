/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the AclStatusResult class.
 * @constructor
 * Data Lake Store filesystem Acl information.
 * @member {object} [aclStatus] Gets or sets the AclStatus object for a given
 * folder or file
 * 
 * @member {array} [aclStatus.entries] Gets or sets the list of ACLSpec
 * entries on a file or folder.
 * 
 * @member {string} [aclStatus.group] Gets or sets the group owner.
 * 
 * @member {string} [aclStatus.owner] Gets or sets the user who is the owner.
 * 
 * @member {boolean} [aclStatus.stickyBit] Gets or sets the indicator of
 * whether the sticky bit is on or off.
 * 
 */
function AclStatusResult(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.aclStatus) {
      this.aclStatus = new models['AclStatus'](parameters.aclStatus);
    }
  }    
}


/**
 * Validate the payload against the AclStatusResult schema
 *
 * @param {JSON} payload
 *
 */
AclStatusResult.prototype.serialize = function () {
  var payload = {};
  if (this['aclStatus']) {
    payload['AclStatus'] = this['aclStatus'].serialize();
  }

  return payload;
};

/**
 * Deserialize the instance to AclStatusResult schema
 *
 * @param {JSON} instance
 *
 */
AclStatusResult.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['AclStatus']) {
      this['aclStatus'] = new models['AclStatus']().deserialize(instance['AclStatus']);
    }
  }

  return this;
};

module.exports = AclStatusResult;
