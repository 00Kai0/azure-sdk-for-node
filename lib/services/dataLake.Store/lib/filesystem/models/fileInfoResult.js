/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the FileInfoResult class.
 * @constructor
 * Data Lake Store filesystem file information response used with file
 * expiration.
 * @member {object} [fileInfo] Gets or sets the file information object
 * associated with the specified file path
 * 
 * @member {string} [fileInfo.id] Gets or sets the file unique identifier (as
 * a GUID).
 * 
 * @member {string} [fileInfo.name] Gets or sets the file name.
 * 
 * @member {number} [fileInfo.length] Gets or sets the number of bytes in a
 * file.
 * 
 * @member {number} [fileInfo.modificationTime] Gets or sets the modification
 * time as ticks since the epoch.
 * 
 * @member {number} [fileInfo.creationTime] Gets or sets the creation time as
 * ticks since the epoch.
 * 
 * @member {number} [fileInfo.expirationTime] Gets or sets the expiration
 * time, if any, as ticks since the epoch. If this is set to 0 or
 * DateTime.MaxValue there is no expiration.
 * 
 */
function FileInfoResult() {
}

/**
 * Defines the metadata of FileInfoResult
 *
 * @returns {object} metadata of FileInfoResult
 *
 */
FileInfoResult.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'FileInfoResult',
    type: {
      name: 'Composite',
      className: 'FileInfoResult',
      modelProperties: {
        fileInfo: {
          required: false,
          serializedName: 'FileInfo',
          type: {
            name: 'Composite',
            className: 'FileInfoProperties'
          }
        }
      }
    }
  };
};

module.exports = FileInfoResult;
