/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the FileStatusResult class.
 * @constructor
 * Data Lake Store filesystem file status information response.
 * @member {object} [fileStatus] Gets or sets the file status object
 * associated with the specified file path
 * 
 * @member {number} [fileStatus.accessTime] Gets or sets the last access time
 * as ticks since the epoch.
 * 
 * @member {number} [fileStatus.blockSize] Gets or sets the block size for the
 * file.
 * 
 * @member {number} [fileStatus.childrenNum] Gets or sets the number of
 * children in the directory.
 * 
 * @member {number} [fileStatus.fileId] Gets or sets the file identifier.
 * 
 * @member {string} [fileStatus.group] Gets or sets the group owner.
 * 
 * @member {number} [fileStatus.length] Gets or sets the number of bytes in a
 * file.
 * 
 * @member {number} [fileStatus.modificationTime] Gets or sets the
 * modification time as ticks since the epoch.
 * 
 * @member {string} [fileStatus.owner] Gets or sets the user who is the owner.
 * 
 * @member {string} [fileStatus.pathSuffix] Gets or sets the path suffix.
 * 
 * @member {string} [fileStatus.permission] Gets or sets the permission
 * represented as an octal string.
 * 
 * @member {number} [fileStatus.replication] Gets or sets the number of
 * replications of a file.
 * 
 * @member {string} [fileStatus.type] Gets or sets the type of the path
 * object. Possible values for this property include: 'File', 'Directory'.
 * 
 */
function FileStatusResult() {
}

/**
 * Defines the metadata of FileStatusResult
 *
 * @returns {object} metadata of FileStatusResult
 *
 */
FileStatusResult.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'FileStatusResult',
    type: {
      name: 'Composite',
      className: 'FileStatusResult',
      modelProperties: {
        fileStatus: {
          required: false,
          serializedName: 'FileStatus',
          type: {
            name: 'Composite',
            className: 'FileStatusProperties'
          }
        }
      }
    }
  };
};

module.exports = FileStatusResult;
