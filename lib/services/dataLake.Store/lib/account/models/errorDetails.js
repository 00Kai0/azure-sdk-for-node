/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ErrorDetails class.
 * @constructor
 * Data Lake error details information
 * @member {string} [code] Gets or sets the HTTP status code or error code
 * associated with this error
 * 
 * @member {string} [message] Gets or sets the error message localized based
 * on Accept-Language
 * 
 * @member {string} [target] Gets or sets the target of the particular error
 * (for example, the name of the property in error).
 * 
 */
function ErrorDetails(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.code !== undefined) {
      this.code = parameters.code;
    }
    if (parameters.message !== undefined) {
      this.message = parameters.message;
    }
    if (parameters.target !== undefined) {
      this.target = parameters.target;
    }
  }    
}


/**
 * Validate the payload against the ErrorDetails schema
 *
 * @param {JSON} payload
 *
 */
ErrorDetails.prototype.serialize = function () {
  var payload = {};
  if (this['code'] !== null && this['code'] !== undefined) {
    if (typeof this['code'].valueOf() !== 'string') {
      throw new Error('this[\'code\'] must be of type string.');
    }
    payload['code'] = this['code'];
  }

  if (this['message'] !== null && this['message'] !== undefined) {
    if (typeof this['message'].valueOf() !== 'string') {
      throw new Error('this[\'message\'] must be of type string.');
    }
    payload['message'] = this['message'];
  }

  if (this['target'] !== null && this['target'] !== undefined) {
    if (typeof this['target'].valueOf() !== 'string') {
      throw new Error('this[\'target\'] must be of type string.');
    }
    payload['target'] = this['target'];
  }

  return payload;
};

/**
 * Deserialize the instance to ErrorDetails schema
 *
 * @param {JSON} instance
 *
 */
ErrorDetails.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['code'] !== undefined) {
      this['code'] = instance['code'];
    }

    if (instance['message'] !== undefined) {
      this['message'] = instance['message'];
    }

    if (instance['target'] !== undefined) {
      this['target'] = instance['target'];
    }
  }

  return this;
};

module.exports = ErrorDetails;
