/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * DataLakeStoreAccountOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the DataLakeStoreManagementClient.
 */
export interface DataLakeStoreAccountOperations {

    /**
     * Deletes the specified firewall rule from the specified Data Lake Store
     * account
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} accountName The name of the account to delete the firewall
     * rule from
     * 
     * @param {string} firewallRuleName The name of the firewall rule to delete
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteFirewallRule(resourceGroupName: string, accountName: string, firewallRuleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteFirewallRule(resourceGroupName: string, accountName: string, firewallRuleName: string, callback: ServiceCallback<void>): void;

    /**
     * Gets the specified Data Lake firewall rules.
     *
     * @param {string} resourceGroupName The name of the resource group the
     * account is in.
     * 
     * @param {string} accountName The name of the account to get the firewall
     * rules from
     * 
     * @param {string} firewallRuleName the name of the firewall rule to retrieve.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getFirewallRule(resourceGroupName: string, accountName: string, firewallRuleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FirewallRule>): void;
    getFirewallRule(resourceGroupName: string, accountName: string, firewallRuleName: string, callback: ServiceCallback<models.FirewallRule>): void;

    /**
     * Lists the Data Lake firewall rules objects within the specified Data Lake
     * Store account.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} accountName The name of the account to get the firewall
     * rules from
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listFirewallRules(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreFirewallRuleListResult>): void;
    listFirewallRules(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.DataLakeStoreFirewallRuleListResult>): void;

    /**
     * Gets the next page of the Data Lake firewall rule objects within the
     * specified account, if any.
     *
     * @param {string} nextLink The url to the next firewall rule page.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    firewallRulesListNext(nextLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreFirewallRuleListResult>): void;
    firewallRulesListNext(nextLink: string, callback: ServiceCallback<models.DataLakeStoreFirewallRuleListResult>): void;

    /**
     * Creates or updates the specified Data Lake Store account with the specified
     * firewall rules.
     *
     * @param {string} resourceGroupName The name of the resource group the
     * account is in.
     * 
     * @param {string} accountName The name of the account to add the firewall
     * rule to
     * 
     * @param {string} name The new of the firewall rule to create or update.
     * 
     * @param {object} parameters Parameters supplied to the create firewall rule
     * operation.
     * 
     * @param {string} [parameters.name] Gets or sets the Firewall Rule's name.
     * 
     * @param {string} [parameters.type] Gets or sets the namespace and type of
     * the Firewall Rule.
     * 
     * @param {string} [parameters.id] Gets or sets the Firewall Rule's
     * subscription ID.
     * 
     * @param {string} [parameters.location] Gets or sets the Firewall Rule's
     * regional location.
     * 
     * @param {object} [parameters.properties] Gets or sets the properties defined
     * by Data Lake all properties are specific to each resource provider.
     * 
     * @param {string} [parameters.properties.startIpAddress] Gets or sets the
     * start IP address for the firewall rule.
     * 
     * @param {string} [parameters.properties.endIpAddress] Gets or sets the end
     * IP address for the firewall rule.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdateFirewallRule(resourceGroupName: string, accountName: string, name: string, parameters: models.FirewallRule, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FirewallRule>): void;
    createOrUpdateFirewallRule(resourceGroupName: string, accountName: string, name: string, parameters: models.FirewallRule, callback: ServiceCallback<models.FirewallRule>): void;

    /**
     * Creates the specified Data Lake Store account.
     *
     * @param {string} resourceGroupName The name of the resource group the
     * account will be associated with.
     * 
     * @param {string} name The name of the Data Lake Store account to create.
     * 
     * @param {object} parameters Parameters supplied to the create Data Lake
     * Store account operation.
     * 
     * @param {string} [parameters.location] Gets or sets the account regional
     * location.
     * 
     * @param {string} [parameters.name] Gets or sets the account name.
     * 
     * @param {string} [parameters.type] Gets or sets the namespace and type of
     * the account.
     * 
     * @param {string} [parameters.id] Gets or sets the account subscription ID.
     * 
     * @param {object} [parameters.tags] Gets or sets the value of custom
     * properties.
     * 
     * @param {object} [parameters.properties] Gets or sets the properties defined
     * by Data Lake all properties are specific to each resource provider.
     * 
     * @param {date} [parameters.properties.creationTime] Gets or sets the account
     * creation time.
     * 
     * @param {date} [parameters.properties.lastModifiedTime] Gets or sets the
     * account last modified time.
     * 
     * @param {string} [parameters.properties.endpoint] Gets or sets the gateway
     * host.
     * 
     * @param {string} [parameters.properties.defaultGroup] Gets or sets the
     * default owner group for all new folders and files created in the DataLake.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroupName: string, name: string, parameters: models.DataLakeStoreAccount, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreAccount>): void;
    create(resourceGroupName: string, name: string, parameters: models.DataLakeStoreAccount, callback: ServiceCallback<models.DataLakeStoreAccount>): void;

    /**
     * Creates the specified Data Lake Store account.
     *
     * @param {string} resourceGroupName The name of the resource group the
     * account will be associated with.
     * 
     * @param {string} name The name of the Data Lake Store account to create.
     * 
     * @param {object} parameters Parameters supplied to the create Data Lake
     * Store account operation.
     * 
     * @param {string} [parameters.location] Gets or sets the account regional
     * location.
     * 
     * @param {string} [parameters.name] Gets or sets the account name.
     * 
     * @param {string} [parameters.type] Gets or sets the namespace and type of
     * the account.
     * 
     * @param {string} [parameters.id] Gets or sets the account subscription ID.
     * 
     * @param {object} [parameters.tags] Gets or sets the value of custom
     * properties.
     * 
     * @param {object} [parameters.properties] Gets or sets the properties defined
     * by Data Lake all properties are specific to each resource provider.
     * 
     * @param {date} [parameters.properties.creationTime] Gets or sets the account
     * creation time.
     * 
     * @param {date} [parameters.properties.lastModifiedTime] Gets or sets the
     * account last modified time.
     * 
     * @param {string} [parameters.properties.endpoint] Gets or sets the gateway
     * host.
     * 
     * @param {string} [parameters.properties.defaultGroup] Gets or sets the
     * default owner group for all new folders and files created in the DataLake.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreate(resourceGroupName: string, name: string, parameters: models.DataLakeStoreAccount, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreAccount>): void;
    beginCreate(resourceGroupName: string, name: string, parameters: models.DataLakeStoreAccount, callback: ServiceCallback<models.DataLakeStoreAccount>): void;

    /**
     * Updates the Data Lake Store account object specified by the account name
     * with the contents of the account object.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} name The name of the Data Lake Store account to update.
     * 
     * @param {object} parameters Parameters supplied to the update Data Lake
     * Store account operation.
     * 
     * @param {string} [parameters.location] Gets or sets the account regional
     * location.
     * 
     * @param {string} [parameters.name] Gets or sets the account name.
     * 
     * @param {string} [parameters.type] Gets or sets the namespace and type of
     * the account.
     * 
     * @param {string} [parameters.id] Gets or sets the account subscription ID.
     * 
     * @param {object} [parameters.tags] Gets or sets the value of custom
     * properties.
     * 
     * @param {object} [parameters.properties] Gets or sets the properties defined
     * by Data Lake all properties are specific to each resource provider.
     * 
     * @param {date} [parameters.properties.creationTime] Gets or sets the account
     * creation time.
     * 
     * @param {date} [parameters.properties.lastModifiedTime] Gets or sets the
     * account last modified time.
     * 
     * @param {string} [parameters.properties.endpoint] Gets or sets the gateway
     * host.
     * 
     * @param {string} [parameters.properties.defaultGroup] Gets or sets the
     * default owner group for all new folders and files created in the DataLake.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, name: string, parameters: models.DataLakeStoreAccount, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreAccount>): void;
    update(resourceGroupName: string, name: string, parameters: models.DataLakeStoreAccount, callback: ServiceCallback<models.DataLakeStoreAccount>): void;

    /**
     * Updates the Data Lake Store account object specified by the account name
     * with the contents of the account object.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} name The name of the Data Lake Store account to update.
     * 
     * @param {object} parameters Parameters supplied to the update Data Lake
     * Store account operation.
     * 
     * @param {string} [parameters.location] Gets or sets the account regional
     * location.
     * 
     * @param {string} [parameters.name] Gets or sets the account name.
     * 
     * @param {string} [parameters.type] Gets or sets the namespace and type of
     * the account.
     * 
     * @param {string} [parameters.id] Gets or sets the account subscription ID.
     * 
     * @param {object} [parameters.tags] Gets or sets the value of custom
     * properties.
     * 
     * @param {object} [parameters.properties] Gets or sets the properties defined
     * by Data Lake all properties are specific to each resource provider.
     * 
     * @param {date} [parameters.properties.creationTime] Gets or sets the account
     * creation time.
     * 
     * @param {date} [parameters.properties.lastModifiedTime] Gets or sets the
     * account last modified time.
     * 
     * @param {string} [parameters.properties.endpoint] Gets or sets the gateway
     * host.
     * 
     * @param {string} [parameters.properties.defaultGroup] Gets or sets the
     * default owner group for all new folders and files created in the DataLake.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginUpdate(resourceGroupName: string, name: string, parameters: models.DataLakeStoreAccount, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreAccount>): void;
    beginUpdate(resourceGroupName: string, name: string, parameters: models.DataLakeStoreAccount, callback: ServiceCallback<models.DataLakeStoreAccount>): void;

    /**
     * Deletes the Data Lake Store account object specified by the account name.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} accountName The name of the account to delete
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;

    /**
     * Deletes the Data Lake Store account object specified by the account name.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} accountName The name of the account to delete
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDeleteMethod(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;

    /**
     * Gets the Data Lake Store account object specified by the account name.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} accountName The name of the account to retrieve
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreAccount>): void;
    get(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.DataLakeStoreAccount>): void;

    /**
     * Lists the Data Lake Store account objects within the subscription or within
     * a specific resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional â€œascâ€ (the default)
     * or â€œdescâ€ depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {string} [options.search] Gets or sets a free form search. A
     * free-text search expression to match for whether a particular entry should
     * be included in the feed, e.g. Categories?$search=blue OR green. Optional.
     * 
     * @param {string} [options.format] Gets or sets the return format. Return the
     * response in particular formatxii without access to request headers for
     * standard content-type negotiation (e.g Orders?$format=json). Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(resourceGroupName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, search? : string, format? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreAccountListResult>): void;
    list(resourceGroupName: string, callback: ServiceCallback<models.DataLakeStoreAccountListResult>): void;

    /**
     * Lists the Data Lake firewall rules objects within the specified Data Lake
     * Store account.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listFirewallRulesNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreFirewallRuleListResult>): void;
    listFirewallRulesNext(nextPageLink: string, callback: ServiceCallback<models.DataLakeStoreFirewallRuleListResult>): void;

    /**
     * Gets the next page of the Data Lake firewall rule objects within the
     * specified account, if any.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    firewallRulesListNextNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreFirewallRuleListResult>): void;
    firewallRulesListNextNext(nextPageLink: string, callback: ServiceCallback<models.DataLakeStoreFirewallRuleListResult>): void;

    /**
     * Lists the Data Lake Store account objects within the subscription or within
     * a specific resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DataLakeStoreAccountListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.DataLakeStoreAccountListResult>): void;
}
