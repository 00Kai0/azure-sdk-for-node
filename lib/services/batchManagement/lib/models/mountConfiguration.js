/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary The file system to mount on each node.
  *
 */
class MountConfiguration {
  /**
   * Create a MountConfiguration.
   * @property {object} [azureBlobFileSystemConfiguration] The Azure Storage
   * Container to mount using blob FUSE on each node. This property is mutually
   * exclusive with all other properties.
   * @property {string} [azureBlobFileSystemConfiguration.accountName]
   * @property {string} [azureBlobFileSystemConfiguration.containerName]
   * @property {string} [azureBlobFileSystemConfiguration.accountKey] This
   * property is mutually exclusive with sasKey and one must be specified.
   * @property {string} [azureBlobFileSystemConfiguration.sasKey] This property
   * is mutually exclusive with accountKey and one must be specified.
   * @property {string} [azureBlobFileSystemConfiguration.blobfuseOptions]
   * These are 'net use' options in Windows and 'mount' options in Linux.
   * @property {string} [azureBlobFileSystemConfiguration.relativeMountPath]
   * All file systems are mounted relative to the Batch mounts directory,
   * accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
   * @property {object} [nfsMountConfiguration] The NFS file system to mount on
   * each node. This property is mutually exclusive with all other properties.
   * @property {string} [nfsMountConfiguration.source]
   * @property {string} [nfsMountConfiguration.relativeMountPath] All file
   * systems are mounted relative to the Batch mounts directory, accessible via
   * the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
   * @property {string} [nfsMountConfiguration.mountOptions] These are 'net
   * use' options in Windows and 'mount' options in Linux.
   * @property {object} [cifsMountConfiguration] The CIFS/SMB file system to
   * mount on each node. This property is mutually exclusive with all other
   * properties.
   * @property {string} [cifsMountConfiguration.username]
   * @property {string} [cifsMountConfiguration.source]
   * @property {string} [cifsMountConfiguration.relativeMountPath] All file
   * systems are mounted relative to the Batch mounts directory, accessible via
   * the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
   * @property {string} [cifsMountConfiguration.mountOptions] These are 'net
   * use' options in Windows and 'mount' options in Linux.
   * @property {string} [cifsMountConfiguration.password]
   * @property {object} [azureFileShareConfiguration] The Azure File Share to
   * mount on each node. This property is mutually exclusive with all other
   * properties.
   * @property {string} [azureFileShareConfiguration.accountName]
   * @property {string} [azureFileShareConfiguration.azureFileUrl] This is of
   * the form 'https://{account}.file.core.windows.net/'.
   * @property {string} [azureFileShareConfiguration.accountKey]
   * @property {string} [azureFileShareConfiguration.relativeMountPath] All
   * file systems are mounted relative to the Batch mounts directory,
   * accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
   * @property {string} [azureFileShareConfiguration.mountOptions] These are
   * 'net use' options in Windows and 'mount' options in Linux.
   */
  constructor() {
  }

  /**
   * Defines the metadata of MountConfiguration
   *
   * @returns {object} metadata of MountConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MountConfiguration',
      type: {
        name: 'Composite',
        className: 'MountConfiguration',
        modelProperties: {
          azureBlobFileSystemConfiguration: {
            required: false,
            serializedName: 'azureBlobFileSystemConfiguration',
            type: {
              name: 'Composite',
              className: 'AzureBlobFileSystemConfiguration'
            }
          },
          nfsMountConfiguration: {
            required: false,
            serializedName: 'nfsMountConfiguration',
            type: {
              name: 'Composite',
              className: 'NFSMountConfiguration'
            }
          },
          cifsMountConfiguration: {
            required: false,
            serializedName: 'cifsMountConfiguration',
            type: {
              name: 'Composite',
              className: 'CIFSMountConfiguration'
            }
          },
          azureFileShareConfiguration: {
            required: false,
            serializedName: 'azureFileShareConfiguration',
            type: {
              name: 'Composite',
              className: 'AzureFileShareConfiguration'
            }
          }
        }
      }
    };
  }
}

module.exports = MountConfiguration;
