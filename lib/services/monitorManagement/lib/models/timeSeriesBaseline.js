/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The baseline values for a single time series.
 *
 */
class TimeSeriesBaseline {
  /**
   * Create a TimeSeriesBaseline.
   * @property {string} aggregation The aggregation type of the metric.
   * @property {array} [dimensions] The dimensions of this time series.
   * @property {array} timestamps The list of timestamps of the baselines.
   * @property {array} data The baseline values for each sensitivity.
   * @property {array} [metadata] The baseline metadata values.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TimeSeriesBaseline
   *
   * @returns {object} metadata of TimeSeriesBaseline
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TimeSeriesBaseline',
      type: {
        name: 'Composite',
        className: 'TimeSeriesBaseline',
        modelProperties: {
          aggregation: {
            required: true,
            serializedName: 'aggregation',
            type: {
              name: 'String'
            }
          },
          dimensions: {
            required: false,
            serializedName: 'dimensions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MetricSingleDimensionElementType',
                  type: {
                    name: 'Composite',
                    className: 'MetricSingleDimension'
                  }
              }
            }
          },
          timestamps: {
            required: true,
            serializedName: 'timestamps',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DateElementType',
                  type: {
                    name: 'DateTime'
                  }
              }
            }
          },
          data: {
            required: true,
            serializedName: 'data',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SingleBaselineElementType',
                  type: {
                    name: 'Composite',
                    className: 'SingleBaseline'
                  }
              }
            }
          },
          metadata: {
            required: false,
            serializedName: 'metadata',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'BaselineMetadataElementType',
                  type: {
                    name: 'Composite',
                    className: 'BaselineMetadata'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = TimeSeriesBaseline;
