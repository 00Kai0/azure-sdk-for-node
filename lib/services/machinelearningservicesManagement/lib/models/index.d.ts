/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * Display name of operation
 */
export interface OperationDisplay {
  /**
   * The resource provider name: Microsoft.MachineLearningExperimentation
   */
  provider?: string;
  /**
   * The resource on which the operation is performed.
   */
  resource?: string;
  /**
   * The operation that users can perform.
   */
  operation?: string;
  /**
   * The description for the operation.
   */
  description?: string;
}

/**
 * Azure Machine Learning workspace REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display name of operation
   */
  display?: OperationDisplay;
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface Resource extends BaseResource {
  /**
   * Specifies the resource ID.
   */
  readonly id?: string;
  /**
   * Specifies the name of the resource.
   */
  readonly name?: string;
  /**
   * The identity of the resource.
   */
  readonly identity?: Identity;
  /**
   * Specifies the location of the resource.
   */
  location?: string;
  /**
   * Specifies the type of the resource.
   */
  readonly type?: string;
  /**
   * Contains resource tags defined as key/value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An object that represents a machine learning workspace.
 */
export interface Workspace extends Resource {
  /**
   * The immutable id associated with this workspace.
   */
  readonly workspaceId?: string;
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace. This name in mutable
   */
  friendlyName?: string;
  /**
   * The creation time of the machine learning workspace in ISO8601 format.
   */
  readonly creationTime?: Date;
  /**
   * ARM id of the key vault associated with this workspace. This cannot be changed once the
   * workspace has been created
   */
  keyVault?: string;
  /**
   * ARM id of the application insights associated with this workspace. This cannot be changed once
   * the workspace has been created
   */
  applicationInsights?: string;
  /**
   * ARM id of the container registry associated with this workspace. This cannot be changed once
   * the workspace has been created
   */
  containerRegistry?: string;
  /**
   * ARM id of the storage account associated with this workspace. This cannot be changed once the
   * workspace has been created
   */
  storageAccount?: string;
  /**
   * Url for the discovery service to identify regional endpoints for machine learning
   * experimentation services
   */
  discoveryUrl?: string;
  /**
   * The current deployment state of workspace resource. The provisioningState is to indicate
   * states for resource provisioning. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   */
  readonly provisioningState?: string;
}

/**
 * The parameters for updating a machine learning workspace.
 */
export interface WorkspaceUpdateParameters {
  /**
   * The resource tags for the machine learning workspace.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace.
   */
  friendlyName?: string;
}

/**
 * The Usage Names.
 */
export interface UsageName {
  /**
   * The name of the resource.
   */
  readonly value?: string;
  /**
   * The localized name of the resource.
   */
  readonly localizedValue?: string;
}

/**
 * Describes AML Resource Usage.
 */
export interface Usage {
  /**
   * An enum describing the unit of usage measurement. Possible values include: 'Count'
   */
  readonly unit?: string;
  /**
   * The current usage of the resource.
   */
  readonly currentValue?: number;
  /**
   * The maximum permitted usage of the resource.
   */
  readonly limit?: number;
  /**
   * The name of the type of usage.
   */
  readonly name?: UsageName;
}

/**
 * Describes AML Resource Usage.
 */
export interface DummyObject {
  /**
   * An enum describing the unit of usage measurement. Possible values include: 'Count'
   */
  readonly unit?: string;
  /**
   * The current usage of the resource.
   */
  readonly currentValue?: number;
  /**
   * The maximum permitted usage of the resource.
   */
  readonly limit?: number;
  /**
   * The name of the type of usage.
   */
  readonly name?: UsageName;
}

/**
 * Describes Batch AI Resource Usage by VM Family, broken down by Workspace and Cluster usage
 */
export interface UsageByVMFamily extends DummyObject {
  /**
   * The name of the resource group this resource type belongs to
   */
  readonly resourceGroupName?: string;
  /**
   * The type of the resource, whether its VM family, workspace name, or cluster
   */
  readonly resourceType?: string;
  /**
   * The breakdown of usage by Workspace or Cluster
   */
  readonly usageBreakdown?: UsageByVMFamily[];
}

/**
 * Describes the properties of a VM size.
 */
export interface VirtualMachineSize {
  /**
   * @summary Virtual Machine size name
   * @description The name of the virtual machine size.
   */
  readonly name?: string;
  /**
   * @summary Virtual Machine family name
   * @description The family name of the virtual machine size.
   */
  readonly family?: string;
  /**
   * @summary Number of vPUs
   * @description The number of vCPUs supported by the virtual machine size.
   */
  readonly vCPUs?: number;
  /**
   * @summary OS VHD Disk size
   * @description The OS VHD disk size, in MB, allowed by the virtual machine size.
   */
  readonly osVhdSizeMB?: number;
  /**
   * @summary Resource volume size
   * @description The resource volume size, in MB, allowed by the virtual machine size.
   */
  readonly maxResourceVolumeMB?: number;
  /**
   * @summary Memory size
   * @description The amount of memory, in GB, supported by the virtual machine size.
   */
  readonly memoryGB?: number;
  /**
   * @summary Low priority capable
   * @description Specifies if the virtual machine size supports low priority VMs.
   */
  readonly lowPriorityCapable?: boolean;
  /**
   * @summary Premium IO supported
   * @description Specifies if the virtual machine size supports premium IO.
   */
  readonly premiumIO?: boolean;
}

/**
 * The List Virtual Machine size operation response.
 */
export interface VirtualMachineSizeListResult {
  /**
   * The list of virtual machine sizes supported by AmlCompute.
   */
  amlCompute?: VirtualMachineSize[];
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   */
  readonly tenantId?: string;
  /**
   * The identity type. Possible values include: 'SystemAssigned'
   */
  type?: string;
}

/**
 * Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
 */
export interface ResourceId extends BaseResource {
  /**
   * The ID of the resource
   */
  id: string;
}

export interface Password {
  readonly name?: string;
  readonly value?: string;
}

export interface RegistryListCredentialsResult {
  readonly location?: string;
  readonly username?: string;
  passwords?: Password[];
}

export interface ListWorkspaceKeysResult {
  readonly userStorageKey?: string;
  readonly userStorageResourceId?: string;
  readonly appInsightsInstrumentationKey?: string;
  readonly containerRegistryCredentials?: RegistryListCredentialsResult;
}

/**
 * Error detail information.
*/
export interface ErrorDetail {
  /**
   * Error code.
  */
  code: string;
  /**
   * Error message.
  */
  message: string;
}

/**
 * Error response information.
*/
export interface ErrorResponse {
  /**
   * Error code.
  */
  readonly code?: string;
  /**
   * Error message.
  */
  readonly message?: string;
  /**
   * An array of error detail objects.
  */
  readonly details?: ErrorDetail[];
}

/**
 * Wrapper for error response to follow ARM guidelines.
*/
export interface MachineLearningServiceError {
  /**
   * The error response.
  */
  readonly error?: ErrorResponse;
}

/**
 * Machine Learning compute object.
*/
export interface Compute {
  /**
   * Location for the underlying compute
  */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
  */
  readonly provisioningState?: string;
  /**
   * The description of the Machine Learning compute.
  */
  description?: string;
  /**
   * The date and time when the compute was created.
  */
  readonly createdOn?: Date;
  /**
   * The date and time when the compute was last modified.
  */
  readonly modifiedOn?: Date;
  /**
   * ARM resource id of the underlying compute
  */
  resourceId?: string;
  /**
   * Errors during provisioning
  */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
  */
  readonly isAttachedCompute?: boolean;
  /**
   * Polymorphic Discriminator
  */
  computeType: string;
}

/**
 * Machine Learning compute object wrapped into ARM resource envelope.
*/
export interface ComputeResource extends Resource {
  /**
   * Compute properties
  */
  properties?: Compute;
}

/**
 * A system service running on a compute.
*/
export interface SystemService {
  /**
   * The type of this system service.
  */
  readonly systemServiceType?: string;
  /**
   * Public IP address
  */
  readonly publicIpAddress?: string;
  /**
   * The version for this type.
  */
  readonly version?: string;
}

/**
 * The ssl configuration for scoring
*/
export interface SslConfiguration {
  /**
   * Enable or disable ssl for scoring. Possible values include: 'Disabled', 'Enabled'
  */
  status?: string;
  /**
   * Cert data
  */
  cert?: string;
  /**
   * Key data
  */
  key?: string;
  /**
   * CNAME of the cert
  */
  cname?: string;
}

/**
 * Advance configuration for AKS networking
*/
export interface AksNetworkingConfiguration {
  /**
   * Virtual network subnet resource ID the compute nodes belong to
  */
  subnetId?: string;
  /**
   * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with
   * any Subnet IP ranges.
  */
  serviceCidr?: string;
  /**
   * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service
   * address range specified in serviceCidr.
  */
  dnsServiceIP?: string;
  /**
   * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any
   * Subnet IP ranges or the Kubernetes service address range.
  */
  dockerBridgeCidr?: string;
}

/**
 * AKS properties
*/
export interface AKSProperties {
  /**
   * Cluster full qualified domain name
  */
  clusterFqdn?: string;
  /**
   * System services
  */
  readonly systemServices?: SystemService[];
  /**
   * Number of agents
  */
  agentCount?: number;
  /**
   * Agent virtual machine size
  */
  agentVMSize?: string;
  /**
   * SSL configuration
  */
  sslConfiguration?: SslConfiguration;
  /**
   * AKS networking configuration for vnet
  */
  aksNetworkingConfiguration?: AksNetworkingConfiguration;
}

/**
 * A Machine Learning compute based on AKS.
*/
export interface AKS extends Compute {
  /**
   * AKS properties
  */
  properties?: AKSProperties;
}

/**
 * scale settings for AML Compute
*/
export interface ScaleSettings {
  /**
   * Max number of nodes to use
  */
  maxNodeCount: number;
  /**
   * Min number of nodes to use
  */
  minNodeCount?: number;
  /**
   * Node Idle Time before scaling down amlCompute
  */
  nodeIdleTimeBeforeScaleDown?: moment.Duration;
}

/**
 * Settings for user account that gets created on each on the nodes of a compute.
*/
export interface UserAccountCredentials {
  /**
   * @summary User name.
   * @description Name of the administrator user account which can be used to SSH to nodes.
  */
  adminUserName: string;
  /**
   * @summary SSH public key.
   * @description SSH public key of the administrator user account.
  */
  adminUserSshPublicKey?: string;
  /**
   * @summary Password.
   * @description Password of the administrator user account.
  */
  adminUserPassword?: string;
}

/**
 * Counts of various compute node states on the amlCompute.
*/
export interface NodeStateCounts {
  /**
   * @summary Idle node count.
   * @description Number of compute nodes in idle state.
  */
  readonly idleNodeCount?: number;
  /**
   * @summary Running node count.
   * @description Number of compute nodes which are running jobs.
  */
  readonly runningNodeCount?: number;
  /**
   * @summary Preparing node count.
   * @description Number of compute nodes which are being prepared.
  */
  readonly preparingNodeCount?: number;
  /**
   * @summary Unusable node count.
   * @description Number of compute nodes which are in unusable state.
  */
  readonly unusableNodeCount?: number;
  /**
   * @summary Leaving node count.
   * @description Number of compute nodes which are leaving the amlCompute.
  */
  readonly leavingNodeCount?: number;
  /**
   * @summary Preempted node count.
   * @description Number of compute nodes which are in preempted state.
  */
  readonly preemptedNodeCount?: number;
}

/**
 * AML Compute properties
*/
export interface AmlComputeProperties {
  /**
   * Virtual Machine Size
  */
  vmSize?: string;
  /**
   * Virtual Machine priority. Possible values include: 'Dedicated', 'LowPriority'
  */
  vmPriority?: string;
  /**
   * Scale settings for AML Compute
  */
  scaleSettings?: ScaleSettings;
  /**
   * @summary User account credentials.
   * @description Credentials for an administrator user account that will be created on each
   * compute node.
  */
  userAccountCredentials?: UserAccountCredentials;
  /**
   * @summary Subnet.
   * @description Virtual network subnet resource ID the compute nodes belong to.
  */
  subnet?: ResourceId;
  /**
   * @summary Allocation state.
   * @description Allocation state of the compute. Possible values are: steady - Indicates that the
   * compute is not resizing. There are no changes to the number of compute nodes in the compute in
   * progress. A compute enters this state when it is created and when no operations are being
   * performed on the compute to change the number of compute nodes. resizing - Indicates that the
   * compute is resizing; that is, compute nodes are being added to or removed from the compute.
   * Possible values include: 'Steady', 'Resizing'
  */
  readonly allocationState?: string;
  /**
   * @summary Allocation state transition time.
   * @description The time at which the compute entered its current allocation state.
  */
  readonly allocationStateTransitionTime?: Date;
  /**
   * @summary Errors.
   * @description Collection of errors encountered by various compute nodes during node setup.
  */
  readonly errors?: MachineLearningServiceError[];
  /**
   * @summary Current node count.
   * @description The number of compute nodes currently assigned to the compute.
  */
  readonly currentNodeCount?: number;
  /**
   * @summary Target node count.
   * @description The target number of compute nodes for the compute. If the allocationState is
   * resizing, this property denotes the target node count for the ongoing resize operation. If the
   * allocationState is steady, this property denotes the target node count for the previous resize
   * operation.
  */
  readonly targetNodeCount?: number;
  /**
   * @summary Node state counts.
   * @description Counts of various node states on the compute.
  */
  readonly nodeStateCounts?: NodeStateCounts;
}

/**
 * An Azure Machine Learning compute.
*/
export interface AmlCompute extends Compute {
  /**
   * AML Compute properties
  */
  properties?: AmlComputeProperties;
}

/**
 * Admin credentials for virtual machine
*/
export interface VirtualMachineSshCredentials {
  /**
   * Username of admin account
  */
  username?: string;
  /**
   * Password of admin account
  */
  password?: string;
  /**
   * Public key data
  */
  publicKeyData?: string;
  /**
   * Private key data
  */
  privateKeyData?: string;
}

export interface VirtualMachineProperties {
  /**
   * Virtual Machine size
  */
  virtualMachineSize?: string;
  /**
   * Port open for ssh connections.
  */
  sshPort?: number;
  /**
   * Public IP address of the virtual machine.
  */
  address?: string;
  /**
   * Admin credentials for virtual machine
  */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * A Machine Learning compute based on Azure Virtual Machines.
*/
export interface VirtualMachine extends Compute {
  properties?: VirtualMachineProperties;
}

export interface HDInsightProperties {
  /**
   * Port open for ssh connections on the master node of the cluster.
  */
  sshPort?: number;
  /**
   * Public IP address of the master node of the cluster.
  */
  address?: string;
  /**
   * Admin credentials for master node of the cluster
  */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * A HDInsight compute.
*/
export interface HDInsight extends Compute {
  properties?: HDInsightProperties;
}

/**
 * A DataFactory compute.
*/
export interface DataFactory extends Compute {
}

export interface DatabricksProperties {
  /**
   * Databricks access token
  */
  databricksAccessToken?: string;
}

/**
 * A DataFactory compute.
*/
export interface Databricks extends Compute {
  properties?: DatabricksProperties;
}

export interface DataLakeAnalyticsProperties {
  /**
   * DataLake Store Account Name
  */
  dataLakeStoreAccountName?: string;
}

/**
 * A DataLakeAnalytics compute.
*/
export interface DataLakeAnalytics extends Compute {
  properties?: DataLakeAnalyticsProperties;
}

/**
 * Service principal credentials.
*/
export interface ServicePrincipalCredentials {
  /**
   * Client Id
  */
  clientId: string;
  /**
   * Client secret
  */
  clientSecret: string;
}

/**
 * AmlCompute update parameters.
*/
export interface ClusterUpdateParameters {
  /**
   * @summary Scale settings.
   * @description Desired scale settings for the amlCompute.
  */
  scaleSettings?: ScaleSettings;
}

/**
 * Compute nodes information related to a Machine Learning compute. Might differ for every type of
 * compute.
*/
export interface ComputeNodesInformation {
  /**
   * The continuation token.
  */
  readonly nextLink?: string;
  /**
   * Polymorphic Discriminator
  */
  computeType: string;
}

/**
 * Compute node information related to a AmlCompute.
*/
export interface AmlComputeNodeInformation {
  /**
   * @summary Node ID.
   * @description ID of the compute node.
  */
  readonly nodeId?: string;
  /**
   * @summary IP address.
   * @description Public IP address of the compute node.
  */
  readonly ipAddress?: string;
  /**
   * @summary Port.
   * @description SSH port number of the node.
  */
  readonly port?: number;
}

/**
 * Compute node information related to a AmlCompute.
*/
export interface AmlComputeNodesInformation extends ComputeNodesInformation {
  /**
   * The collection of returned AmlCompute nodes details.
  */
  readonly nodes?: AmlComputeNodeInformation[];
}

/**
 * Secrets related to a Machine Learning compute. Might differ for every type of compute.
*/
export interface ComputeSecrets {
  /**
   * Polymorphic Discriminator
  */
  computeType: string;
}

/**
 * Secrets related to a Machine Learning compute based on AKS.
*/
export interface AksComputeSecrets extends ComputeSecrets {
  /**
   * Content of kubeconfig file that can be used to connect to the Kubernetes cluster.
  */
  userKubeConfig?: string;
  /**
   * Content of kubeconfig file that can be used to connect to the Kubernetes cluster.
  */
  adminKubeConfig?: string;
  /**
   * Image registry pull secret.
  */
  imagePullSecretName?: string;
}

/**
 * Secrets related to a Machine Learning compute based on AKS.
*/
export interface VirtualMachineSecrets extends ComputeSecrets {
  /**
   * Admin credentials for virtual machine.
  */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * Secrets related to a Machine Learning compute based on Databricks.
*/
export interface DatabricksComputeSecrets extends ComputeSecrets {
  /**
   * access token for databricks account.
  */
  databricksAccessToken?: string;
}

/**
 * An array of operations supported by the resource provider.
*/
export interface OperationListResult extends Array<Operation> {
}

/**
 * The result of a request to list machine learning workspaces.
*/
export interface WorkspaceListResult extends Array<Workspace> {
  /**
   * The URI that can be used to request the next list of machine learning workspaces.
  */
  nextLink?: string;
}

/**
 * The List Usages operation response.
*/
export interface ListUsagesResult extends Array<Usage> {
  /**
   * The URI to fetch the next page of AML resource usage information. Call ListNext() with this to
   * fetch the next page of AML resource usage information.
  */
  readonly nextLink?: string;
}

/**
 * The List UsagesByVMFamily operation response.
*/
export interface ListUsagesByVMFamilyResult extends Array<UsageByVMFamily> {
  /**
   * The URI to fetch the next page of compute resource usage information.
  */
  readonly nextLink?: string;
}

/**
 * Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.
*/
export interface PaginatedComputeResourcesList extends Array<ComputeResource> {
  /**
   * A continuation link (absolute URI) to the next page of results in the list.
  */
  nextLink?: string;
}
