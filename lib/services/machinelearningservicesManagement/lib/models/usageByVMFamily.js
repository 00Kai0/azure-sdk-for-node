/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes Batch AI Resource Usage by VM Family, broken down by Workspace and
 * Cluster usage
 *
 * @extends models['ResourceUsage']
 */
class UsageByVMFamily extends models['ResourceUsage'] {
  /**
   * Create a UsageByVMFamily.
   * @property {string} [resourceGroupName] The name of the resource group this
   * resource type belongs to
   * @property {string} [resourceType] The type of the resource, whether its VM
   * family, workspace name, or cluster
   * @property {array} [usageBreakdown] The breakdown of usage by Workspace or
   * Cluster
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of UsageByVMFamily
   *
   * @returns {object} metadata of UsageByVMFamily
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UsageByVMFamily',
      type: {
        name: 'Composite',
        className: 'UsageByVMFamily',
        modelProperties: {
          unit: {
            required: false,
            readOnly: true,
            serializedName: 'unit',
            type: {
              name: 'String'
            }
          },
          currentValue: {
            required: false,
            readOnly: true,
            serializedName: 'currentValue',
            type: {
              name: 'Number'
            }
          },
          limit: {
            required: false,
            readOnly: true,
            serializedName: 'limit',
            type: {
              name: 'Number'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'Composite',
              className: 'ResourceUsageName'
            }
          },
          resourceGroupName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.resourceGroupName',
            type: {
              name: 'String'
            }
          },
          resourceType: {
            required: false,
            readOnly: true,
            serializedName: 'properties.resourceType',
            type: {
              name: 'String'
            }
          },
          usageBreakdown: {
            required: false,
            readOnly: true,
            serializedName: 'properties.usageBreakdown',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UsageByVMFamilyElementType',
                  type: {
                    name: 'Composite',
                    className: 'UsageByVMFamily'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = UsageByVMFamily;
