/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Cosmos DB indexing policy
 *
 */
class IndexingPolicy {
  /**
   * Create a IndexingPolicy.
   * @property {boolean} [automatic] Indicates if the indexing policy is
   * automatic
   * @property {string} [indexingMode] Indicates the indexing mode. Possible
   * values include: 'Consistent', 'Lazy', 'None'. Default value: 'Consistent'
   * .
   * @property {array} [includedPaths] List of paths to include in the indexing
   * @property {array} [excludedPaths] List of paths to exclude from indexing
   */
  constructor() {
  }

  /**
   * Defines the metadata of IndexingPolicy
   *
   * @returns {object} metadata of IndexingPolicy
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IndexingPolicy',
      type: {
        name: 'Composite',
        className: 'IndexingPolicy',
        modelProperties: {
          automatic: {
            required: false,
            serializedName: 'automatic',
            type: {
              name: 'Boolean'
            }
          },
          indexingMode: {
            required: false,
            serializedName: 'indexingMode',
            defaultValue: 'Consistent',
            type: {
              name: 'String'
            }
          },
          includedPaths: {
            required: false,
            serializedName: 'includedPaths',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'IncludedPathElementType',
                  type: {
                    name: 'Composite',
                    className: 'IncludedPath'
                  }
              }
            }
          },
          excludedPaths: {
            required: false,
            serializedName: 'excludedPaths',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ExcludedPathElementType',
                  type: {
                    name: 'Composite',
                    className: 'ExcludedPath'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = IndexingPolicy;
