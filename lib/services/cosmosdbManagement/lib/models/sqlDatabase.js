/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * An Azure Cosmos DB SQL database.
 *
 * @extends models['Resource']
 */
class SqlDatabase extends models['Resource'] {
  /**
   * Create a SqlDatabase.
   * @property {string} sqlDatabaseId Name of the Cosmos DB SQL database
   * @property {string} [_rid] A system generated property. A unique
   * identifier.
   * @property {object} [_ts] A system generated property that denotes the last
   * updated timestamp of the resource.
   * @property {string} [_etag] A system generated property representing the
   * resource etag required for optimistic concurrency control.
   * @property {string} [_colls] A system generated property that specified the
   * addressable path of the collections resource.
   * @property {string} [_users] A system generated property that specifies the
   * addressable path of the users resource.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of SqlDatabase
   *
   * @returns {object} metadata of SqlDatabase
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SqlDatabase',
      type: {
        name: 'Composite',
        className: 'SqlDatabase',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          sqlDatabaseId: {
            required: true,
            serializedName: 'properties.id',
            type: {
              name: 'String'
            }
          },
          _rid: {
            required: false,
            serializedName: 'properties._rid',
            type: {
              name: 'String'
            }
          },
          _ts: {
            required: false,
            serializedName: 'properties._ts',
            type: {
              name: 'Object'
            }
          },
          _etag: {
            required: false,
            serializedName: 'properties._etag',
            type: {
              name: 'String'
            }
          },
          _colls: {
            required: false,
            serializedName: 'properties._colls',
            type: {
              name: 'String'
            }
          },
          _users: {
            required: false,
            serializedName: 'properties._users',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = SqlDatabase;
