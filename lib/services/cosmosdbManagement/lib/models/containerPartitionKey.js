/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The configuration of the partition key to be used for partitioning data into
 * multiple partitions
 *
 */
class ContainerPartitionKey {
  /**
   * Create a ContainerPartitionKey.
   * @property {array} [paths] List of paths using which data within the
   * container can be partitioned
   * @property {string} [kind] Indicates the kind of algorithm used for
   * partitioning. Possible values include: 'Hash', 'Range'. Default value:
   * 'Hash' .
   */
  constructor() {
  }

  /**
   * Defines the metadata of ContainerPartitionKey
   *
   * @returns {object} metadata of ContainerPartitionKey
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ContainerPartitionKey',
      type: {
        name: 'Composite',
        className: 'ContainerPartitionKey',
        modelProperties: {
          paths: {
            required: false,
            serializedName: 'paths',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          kind: {
            required: false,
            serializedName: 'kind',
            defaultValue: 'Hash',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ContainerPartitionKey;
