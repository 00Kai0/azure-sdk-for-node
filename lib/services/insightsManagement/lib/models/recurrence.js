/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the Recurrence class.
 * @constructor
 * The repeating times at which this profile begins. This element is not used
 * if the FixedDate element is used.
 *
 * @member {string} [frequency] the recurrence frequency. How often the
 * schedule profile should take effect. This value must be Week, meaning each
 * week will have the same set of profiles. Possible values include: 'None',
 * 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month', 'Year'
 * 
 * @member {object} [schedule] the scheduling constraints for when the profile
 * begins.
 * 
 * @member {string} [schedule.timeZone] the time zone for the hours of the
 * profile. See examples of valid timezone ids over here:
 * https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx
 * 
 * @member {array} [schedule.days] the collection of days that the profile
 * takes effect on. Possible values are Sunday through Saturday.
 * 
 * @member {array} [schedule.hours] A collection of hours that the profile
 * takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM
 * times are not supported).
 * 
 * @member {array} [schedule.minutes] A collection of minutes at which the
 * profile takes effect at.
 * 
 */
function Recurrence() {
}

/**
 * Defines the metadata of Recurrence
 *
 * @returns {object} metadata of Recurrence
 *
 */
Recurrence.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Recurrence',
    type: {
      name: 'Composite',
      className: 'Recurrence',
      modelProperties: {
        frequency: {
          required: false,
          serializedName: 'frequency',
          type: {
            name: 'Enum',
            allowedValues: [ 'None', 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month', 'Year' ]
          }
        },
        schedule: {
          required: false,
          serializedName: 'schedule',
          type: {
            name: 'Composite',
            className: 'RecurrentSchedule'
          }
        }
      }
    }
  };
};

module.exports = Recurrence;
