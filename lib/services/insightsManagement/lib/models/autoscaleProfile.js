/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the AutoscaleProfile class.
 * @constructor
 * Autoscale profile.
 *
 * @member {string} name the name of the profile.
 * 
 * @member {object} capacity the number of instances that can be used during
 * this profile.
 * 
 * @member {string} [capacity.minimum] the minimum number of instances for the
 * resource.
 * 
 * @member {string} [capacity.maximum] the maximum number of instances for the
 * resource. The actual maximum number may be limited by the cores that are
 * available.
 * 
 * @member {string} [capacity.default] the number of instances that will be
 * set if metrics are not available for evaluation. The default is only used
 * if the current instance count is lower than the default.
 * 
 * @member {array} rules the collection of rules that provide the triggers and
 * parameters for the scaling action. A maximum of 10 rules can be specified.
 * 
 * @member {object} [fixedDate] the specific date-time for the profile. This
 * element is not used if the Recurrence element is used.
 * 
 * @member {string} [fixedDate.timeZone] the time zone of the start and end
 * times for the profile. See examples of valid timezone ids over here:
 * https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx
 * 
 * @member {date} [fixedDate.start] the start time for the profile in ISO 8601
 * format.
 * 
 * @member {date} [fixedDate.end] the end time for the profile in ISO 8601
 * format.
 * 
 * @member {object} [recurrence] the repeating times at which this profile
 * begins. This element is not used if the FixedDate element is used.
 * 
 * @member {string} [recurrence.frequency] the recurrence frequency. How often
 * the schedule profile should take effect. This value must be Week, meaning
 * each week will have the same set of profiles. Possible values include:
 * 'None', 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month', 'Year'
 * 
 * @member {object} [recurrence.schedule] the scheduling constraints for when
 * the profile begins.
 * 
 * @member {string} [recurrence.schedule.timeZone] the time zone for the hours
 * of the profile. See examples of valid timezone ids over here:
 * https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx
 * 
 * @member {array} [recurrence.schedule.days] the collection of days that the
 * profile takes effect on. Possible values are Sunday through Saturday.
 * 
 * @member {array} [recurrence.schedule.hours] A collection of hours that the
 * profile takes effect on. Values supported are 0 to 23 on the 24-hour clock
 * (AM/PM times are not supported).
 * 
 * @member {array} [recurrence.schedule.minutes] A collection of minutes at
 * which the profile takes effect at.
 * 
 */
function AutoscaleProfile() {
}

/**
 * Defines the metadata of AutoscaleProfile
 *
 * @returns {object} metadata of AutoscaleProfile
 *
 */
AutoscaleProfile.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'AutoscaleProfile',
    type: {
      name: 'Composite',
      className: 'AutoscaleProfile',
      modelProperties: {
        name: {
          required: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        capacity: {
          required: true,
          serializedName: 'capacity',
          type: {
            name: 'Composite',
            className: 'ScaleCapacity'
          }
        },
        rules: {
          required: true,
          serializedName: 'rules',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ScaleRuleElementType',
                type: {
                  name: 'Composite',
                  className: 'ScaleRule'
                }
            }
          }
        },
        fixedDate: {
          required: false,
          serializedName: 'fixedDate',
          type: {
            name: 'Composite',
            className: 'TimeWindow'
          }
        },
        recurrence: {
          required: false,
          serializedName: 'recurrence',
          type: {
            name: 'Composite',
            className: 'Recurrence'
          }
        }
      }
    }
  };
};

module.exports = AutoscaleProfile;
