/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a RenewPropertiesResponse.
 */
class RenewPropertiesResponse {
  /**
   * Create a RenewPropertiesResponse.
   * @property {object} [purchaseProperties]
   * @property {object} [purchaseProperties.sku]
   * @property {string} [purchaseProperties.sku.name]
   * @property {string} [purchaseProperties.location] The Azure Region where
   * the reserved resource lives.
   * @property {string} [purchaseProperties.reservedResourceType] Possible
   * values include: 'VirtualMachines', 'SqlDatabases', 'SuseLinux', 'CosmosDb'
   * @property {string} [purchaseProperties.billingScopeId]
   * @property {string} [purchaseProperties.term] Possible values include:
   * 'P1Y', 'P3Y'
   * @property {number} [purchaseProperties.quantity]
   * @property {string} [purchaseProperties.displayName] Friendly name of the
   * Reservation
   * @property {string} [purchaseProperties.appliedScopeType] Possible values
   * include: 'Single', 'Shared'
   * @property {array} [purchaseProperties.appliedScopes]
   * @property {boolean} [purchaseProperties.renew]
   * @property {object} [purchaseProperties.reservedResourceProperties]
   * Properties specific to each reserved resource type. Not required if not
   * applicable.
   * @property {string}
   * [purchaseProperties.reservedResourceProperties.instanceFlexibility]
   * Possible values include: 'On', 'Off'
   * @property {object} [lockedPriceTotal] Locked currency & amount for new
   * reservation purchase at the time of renewal. Price is locked 30 days
   * before expiry date time if renew is true.
   * @property {string} [lockedPriceTotal.currencyCode]
   * @property {string} [lockedPriceTotal.amount]
   * @property {object} [links] Contains prev and next reservation Ids' because
   * of renewal.
   * @property {string} [links.renewSource] Reservation Id of the reservation
   * from which this reservation is renewed. Format of the resource Id is
   * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
   * @property {string} [links.renewDestination] Reservation Id of the
   * reservation which is purchased because of renew. Format of the resource Id
   * is
   * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RenewPropertiesResponse
   *
   * @returns {object} metadata of RenewPropertiesResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RenewPropertiesResponse',
      type: {
        name: 'Composite',
        className: 'RenewPropertiesResponse',
        modelProperties: {
          purchaseProperties: {
            required: false,
            serializedName: 'purchaseProperties',
            type: {
              name: 'Composite',
              className: 'PurchaseRequest'
            }
          },
          lockedPriceTotal: {
            required: false,
            serializedName: 'lockedPriceTotal',
            type: {
              name: 'Composite',
              className: 'RenewPropertiesResponseLockedPriceTotal'
            }
          },
          links: {
            required: false,
            serializedName: 'links',
            type: {
              name: 'Composite',
              className: 'RenewPropertiesResponseLinks'
            }
          }
        }
      }
    };
  }
}

module.exports = RenewPropertiesResponse;
