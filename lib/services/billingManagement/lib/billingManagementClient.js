/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

/* jshint latedef:false */
/* jshint forin:false */
/* jshint noempty:false */

'use strict';

const msRest = require('ms-rest');
const msRestAzure = require('ms-rest-azure');
const ServiceClient = msRestAzure.AzureServiceClient;

const models = require('./models');
const operations = require('./operations');


/** Class representing a BillingManagementClient. */
class BillingManagementClient extends ServiceClient {
  /**
   * Create a BillingManagementClient.
   * @param {credentials} credentials - Credentials needed for the client to connect to Azure.
   * @param {string} subscriptionId - Azure Subscription ID.
   * @param {string} [baseUri] - The base URI of the service.
   * @param {object} [options] - The parameter options
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   * @param {string} [options.acceptLanguage] - The preferred language for the response.
   * @param {number} [options.longRunningOperationRetryTimeout] - The retry timeout in seconds for Long Running Operations. Default value is 30.
   * @param {boolean} [options.generateClientRequestId] - Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
   */
  constructor(credentials, subscriptionId, baseUri, options) {
    if (credentials === null || credentials === undefined) {
      throw new Error('\'credentials\' cannot be null.');
    }
    if (subscriptionId === null || subscriptionId === undefined) {
      throw new Error('\'subscriptionId\' cannot be null.');
    }

    if (!options) options = {};

    super(credentials, options);

    this.apiVersion = '2018-11-01-preview';
    this.acceptLanguage = 'en-US';
    this.longRunningOperationRetryTimeout = 30;
    this.generateClientRequestId = true;
    this.baseUri = baseUri;
    if (!this.baseUri) {
      this.baseUri = 'https://management.azure.com';
    }
    this.credentials = credentials;
    this.subscriptionId = subscriptionId;

    let packageInfo = this.getPackageJsonInfo(__dirname);
    this.addUserAgentInfo(`${packageInfo.name}/${packageInfo.version}`);
    if(options.acceptLanguage !== null && options.acceptLanguage !== undefined) {
      this.acceptLanguage = options.acceptLanguage;
    }
    if(options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {
      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;
    }
    if(options.generateClientRequestId !== null && options.generateClientRequestId !== undefined) {
      this.generateClientRequestId = options.generateClientRequestId;
    }
    this.billingAccounts = new operations.BillingAccounts(this);
    this.paymentMethods = new operations.PaymentMethods(this);
    this.addresses = new operations.Addresses(this);
    this.availableBalances = new operations.AvailableBalances(this);
    this.billingProfiles = new operations.BillingProfiles(this);
    this.invoiceSections = new operations.InvoiceSections(this);
    this.departments = new operations.Departments(this);
    this.enrollmentAccounts = new operations.EnrollmentAccounts(this);
    this.invoices = new operations.Invoices(this);
    this.priceSheet = new operations.PriceSheet(this);
    this.billingSubscriptions = new operations.BillingSubscriptions(this);
    this.products = new operations.Products(this);
    this.transactions = new operations.Transactions(this);
    this.policies = new operations.Policies(this);
    this.billingPropertyOperations = new operations.BillingPropertyOperations(this);
    this.transfers = new operations.Transfers(this);
    this.recipientTransfers = new operations.RecipientTransfers(this);
    this.operations = new operations.Operations(this);
    this.billingPermissions = new operations.BillingPermissions(this);
    this.billingRoleDefinitions = new operations.BillingRoleDefinitions(this);
    this.billingRoleAssignments = new operations.BillingRoleAssignments(this);
    this.agreements = new operations.Agreements(this);
    this.lineOfCredits = new operations.LineOfCredits(this);
    this.models = models;
    msRest.addSerializationMixin(this);
  }

}

module.exports = BillingManagementClient;
module.exports['default'] = BillingManagementClient;
module.exports.BillingManagementClient = BillingManagementClient;
module.exports.BillingManagementModels = models;
