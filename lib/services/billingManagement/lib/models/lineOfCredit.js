/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Line of credit resource.
 *
 * @extends models['Resource']
 */
class LineOfCredit extends models['Resource'] {
  /**
   * Create a LineOfCredit.
   * @property {object} [creditLimit] The current credit limit.
   * @property {string} [creditLimit.currency] The currency for the amount
   * value.
   * @property {number} [creditLimit.value] Amount value.
   * @property {string} [reason] The reason for the line of credit status when
   * not approved.
   * @property {object} [remainingBalance] Remaining balance.
   * @property {string} [remainingBalance.currency] The currency for the amount
   * value.
   * @property {number} [remainingBalance.value] Amount value.
   * @property {string} [status] The line of credit status. Possible values
   * include: 'Approved', 'Rejected'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of LineOfCredit
   *
   * @returns {object} metadata of LineOfCredit
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LineOfCredit',
      type: {
        name: 'Composite',
        className: 'LineOfCredit',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          creditLimit: {
            required: false,
            serializedName: 'properties.creditLimit',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          reason: {
            required: false,
            readOnly: true,
            serializedName: 'properties.reason',
            type: {
              name: 'String'
            }
          },
          remainingBalance: {
            required: false,
            readOnly: true,
            serializedName: 'properties.remainingBalance',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          status: {
            required: false,
            serializedName: 'properties.status',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = LineOfCredit;
