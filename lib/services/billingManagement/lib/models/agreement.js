/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * An agreement resource.
 *
 * @extends models['Resource']
 */
class Agreement extends models['Resource'] {
  /**
   * Create a Agreement.
   * @property {string} [agreementLink] The link to the agreement.
   * @property {date} [effectiveDate] Effective date.
   * @property {date} [expirationDate] Expiration date.
   * @property {array} [participants] Participants or signer of the agreement.
   * @property {string} [status] The agreement status
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Agreement
   *
   * @returns {object} metadata of Agreement
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Agreement',
      type: {
        name: 'Composite',
        className: 'Agreement',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          agreementLink: {
            required: false,
            readOnly: true,
            serializedName: 'properties.agreementLink',
            type: {
              name: 'String'
            }
          },
          effectiveDate: {
            required: false,
            readOnly: true,
            serializedName: 'properties.effectiveDate',
            type: {
              name: 'DateTime'
            }
          },
          expirationDate: {
            required: false,
            readOnly: true,
            serializedName: 'properties.expirationDate',
            type: {
              name: 'DateTime'
            }
          },
          participants: {
            required: false,
            serializedName: 'properties.participants',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ParticipantsElementType',
                  type: {
                    name: 'Composite',
                    className: 'Participants'
                  }
              }
            }
          },
          status: {
            required: false,
            readOnly: true,
            serializedName: 'properties.status',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Agreement;
