/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Result of the product transfer eligibility validation.
 *
 */
class ValidateProductTransferEligibilityResult {
  /**
   * Create a ValidateProductTransferEligibilityResult.
   * @property {boolean} [isTransferEligible] Specifies whether the transfer is
   * eligible or not.
   * @property {object} [errorDetails] Validation error details.
   * @property {string} [errorDetails.code] Error code for the product transfer
   * validation. Possible values include: 'InvalidSource', 'ProductNotActive',
   * 'InsufficientPermissionOnSource', 'InsufficientPermissionOnDestination',
   * 'DestinationBillingProfilePastDue', 'ProductTypeNotSupported',
   * 'CrossBillingAccountNotAllowed', 'NotAvailableForDestinationMarket',
   * 'OneTimePurchaseProductTransferNotAllowed'
   * @property {string} [errorDetails.message] The error message.
   * @property {string} [errorDetails.details] Detailed error message
   * explaining the error.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ValidateProductTransferEligibilityResult
   *
   * @returns {object} metadata of ValidateProductTransferEligibilityResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ValidateProductTransferEligibilityResult',
      type: {
        name: 'Composite',
        className: 'ValidateProductTransferEligibilityResult',
        modelProperties: {
          isTransferEligible: {
            required: false,
            readOnly: true,
            serializedName: 'isTransferEligible',
            type: {
              name: 'Boolean'
            }
          },
          errorDetails: {
            required: false,
            serializedName: 'errorDetails',
            type: {
              name: 'Composite',
              className: 'ValidateProductTransferEligibilityError'
            }
          }
        }
      }
    };
  }
}

module.exports = ValidateProductTransferEligibilityResult;
