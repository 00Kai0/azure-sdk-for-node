/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The regional capabilities.
 *
 */
class Capabilities {
  /**
   * Create a Capabilities.
   * @property {string} [resourceType] The resource type that this capability
   * describes.
   * @property {string} [osType] The OS type that this capability describes.
   * @property {string} [location] The resource location.
   * @property {string} [ipAddressType] The ip address type that this
   * capability describes.
   * @property {string} [gpu] The GPU sku that this capability describes.
   * @property {object} [capabilities] The supported capabilities.
   * @property {number} [capabilities.maxMemoryInGB] The maximum allowed memory
   * request in GB.
   * @property {number} [capabilities.maxCpu] The maximum allowed CPU request
   * in cores.
   * @property {number} [capabilities.maxGpuCount] The maximum allowed GPU
   * count.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Capabilities
   *
   * @returns {object} metadata of Capabilities
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Capabilities',
      type: {
        name: 'Composite',
        className: 'Capabilities',
        modelProperties: {
          resourceType: {
            required: false,
            readOnly: true,
            serializedName: 'resourceType',
            type: {
              name: 'String'
            }
          },
          osType: {
            required: false,
            readOnly: true,
            serializedName: 'osType',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            readOnly: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          ipAddressType: {
            required: false,
            readOnly: true,
            serializedName: 'ipAddressType',
            type: {
              name: 'String'
            }
          },
          gpu: {
            required: false,
            readOnly: true,
            serializedName: 'gpu',
            type: {
              name: 'String'
            }
          },
          capabilities: {
            required: false,
            readOnly: true,
            serializedName: 'capabilities',
            type: {
              name: 'Composite',
              className: 'CapabilitiesCapabilities'
            }
          }
        }
      }
    };
  }
}

module.exports = Capabilities;
