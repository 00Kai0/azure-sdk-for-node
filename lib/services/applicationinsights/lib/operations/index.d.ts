/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ApplicationInsightsManagementClient.
 */
export interface Operations {


    /**
     * Lists all of the available insights REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available insights REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * Lists all of the available insights REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available insights REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

/**
 * @class
 * Components
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ApplicationInsightsManagementClient.
 */
export interface Components {


    /**
     * Gets a list of all Application Insights components within a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentListResult>>;

    /**
     * Gets a list of all Application Insights components within a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentListResult>;
    list(callback: ServiceCallback<models.ApplicationInsightsComponentListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentListResult>): void;


    /**
     * Gets a list of Application Insights components within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentListResult>>;

    /**
     * Gets a list of Application Insights components within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.ApplicationInsightsComponentListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentListResult>): void;


    /**
     * Deletes an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, resourceName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Returns an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponent>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponent>>;

    /**
     * Returns an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponent} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponent} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponent} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponent>;
    get(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.ApplicationInsightsComponent>): void;
    get(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponent>): void;


    /**
     * Creates (or updates) an Application Insights component. Note: You cannot
     * specify a different value for InstrumentationKey nor AppId in the Put
     * operation.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} insightProperties Properties that need to be specified to
     * create an Application Insights component.
     *
     * @param {string} insightProperties.kind The kind of application that this
     * component refers to, used to customize UI. This value is a freeform string,
     * values should typically be one of the following: web, ios, other, store,
     * java, phone.
     *
     * @param {string} insightProperties.applicationType Type of application being
     * monitored. Possible values include: 'web', 'other'
     *
     * @param {string} [insightProperties.flowType] Used by the Application
     * Insights system to determine what kind of flow this component was created
     * by. This is to be set to 'Bluefield' when creating/updating a component via
     * the REST API. Possible values include: 'Bluefield'
     *
     * @param {string} [insightProperties.requestSource] Describes what tool
     * created this Application Insights component. Customers using this API should
     * set this to the default 'rest'. Possible values include: 'rest'
     *
     * @param {string} [insightProperties.hockeyAppId] The unique application ID
     * created when a new application is added to HockeyApp, used for
     * communications with HockeyApp.
     *
     * @param {number} [insightProperties.samplingPercentage] Percentage of the
     * data produced by the application being monitored that is being sampled for
     * Application Insights telemetry.
     *
     * @param {string} insightProperties.location Resource location
     *
     * @param {object} [insightProperties.tags] Resource tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponent>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, insightProperties: models.ApplicationInsightsComponent, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponent>>;

    /**
     * Creates (or updates) an Application Insights component. Note: You cannot
     * specify a different value for InstrumentationKey nor AppId in the Put
     * operation.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} insightProperties Properties that need to be specified to
     * create an Application Insights component.
     *
     * @param {string} insightProperties.kind The kind of application that this
     * component refers to, used to customize UI. This value is a freeform string,
     * values should typically be one of the following: web, ios, other, store,
     * java, phone.
     *
     * @param {string} insightProperties.applicationType Type of application being
     * monitored. Possible values include: 'web', 'other'
     *
     * @param {string} [insightProperties.flowType] Used by the Application
     * Insights system to determine what kind of flow this component was created
     * by. This is to be set to 'Bluefield' when creating/updating a component via
     * the REST API. Possible values include: 'Bluefield'
     *
     * @param {string} [insightProperties.requestSource] Describes what tool
     * created this Application Insights component. Customers using this API should
     * set this to the default 'rest'. Possible values include: 'rest'
     *
     * @param {string} [insightProperties.hockeyAppId] The unique application ID
     * created when a new application is added to HockeyApp, used for
     * communications with HockeyApp.
     *
     * @param {number} [insightProperties.samplingPercentage] Percentage of the
     * data produced by the application being monitored that is being sampled for
     * Application Insights telemetry.
     *
     * @param {string} insightProperties.location Resource location
     *
     * @param {object} [insightProperties.tags] Resource tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponent} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponent} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponent} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, insightProperties: models.ApplicationInsightsComponent, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponent>;
    createOrUpdate(resourceGroupName: string, resourceName: string, insightProperties: models.ApplicationInsightsComponent, callback: ServiceCallback<models.ApplicationInsightsComponent>): void;
    createOrUpdate(resourceGroupName: string, resourceName: string, insightProperties: models.ApplicationInsightsComponent, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponent>): void;


    /**
     * Updates an existing component's tags. To update other fields use the
     * CreateOrUpdate method.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} componentTags Updated tag information to set into the
     * component instance.
     *
     * @param {object} [componentTags.tags] Resource tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponent>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateTagsWithHttpOperationResponse(resourceGroupName: string, resourceName: string, componentTags: models.TagsResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponent>>;

    /**
     * Updates an existing component's tags. To update other fields use the
     * CreateOrUpdate method.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} componentTags Updated tag information to set into the
     * component instance.
     *
     * @param {object} [componentTags.tags] Resource tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponent} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponent} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponent} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    updateTags(resourceGroupName: string, resourceName: string, componentTags: models.TagsResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponent>;
    updateTags(resourceGroupName: string, resourceName: string, componentTags: models.TagsResource, callback: ServiceCallback<models.ApplicationInsightsComponent>): void;
    updateTags(resourceGroupName: string, resourceName: string, componentTags: models.TagsResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponent>): void;


    /**
     * Gets a list of all Application Insights components within a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentListResult>>;

    /**
     * Gets a list of all Application Insights components within a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ApplicationInsightsComponentListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentListResult>): void;


    /**
     * Gets a list of Application Insights components within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentListResult>>;

    /**
     * Gets a list of Application Insights components within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.ApplicationInsightsComponentListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentListResult>): void;
}

/**
 * @class
 * WebTests
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ApplicationInsightsManagementClient.
 */
export interface WebTests {


    /**
     * Get all Application Insights web tests defined within a specified resource
     * group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebTestListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebTestListResult>>;

    /**
     * Get all Application Insights web tests defined within a specified resource
     * group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebTestListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebTestListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebTestListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebTestListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.WebTestListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebTestListResult>): void;


    /**
     * Get a specific Application Insights web test definition.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} webTestName The name of the Application Insights webtest
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebTest>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, webTestName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebTest>>;

    /**
     * Get a specific Application Insights web test definition.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} webTestName The name of the Application Insights webtest
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebTest} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebTest} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebTest} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, webTestName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebTest>;
    get(resourceGroupName: string, webTestName: string, callback: ServiceCallback<models.WebTest>): void;
    get(resourceGroupName: string, webTestName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebTest>): void;


    /**
     * Creates or updates an Application Insights web test definition.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} webTestName The name of the Application Insights webtest
     * resource.
     *
     * @param {object} webTestDefinition Properties that need to be specified to
     * create or update an Application Insights web test definition.
     *
     * @param {string} [webTestDefinition.kind] The kind of web test that this web
     * test watches. Choices are ping and multistep. Possible values include:
     * 'ping', 'multistep'
     *
     * @param {string} webTestDefinition.syntheticMonitorId Unique ID of this
     * WebTest. This is typically the same value as the Name field.
     *
     * @param {string} webTestDefinition.webTestName User defined name if this
     * WebTest.
     *
     * @param {string} [webTestDefinition.description] Purpose/user defined
     * descriptive test for this WebTest.
     *
     * @param {boolean} [webTestDefinition.enabled] Is the test actively being
     * monitored.
     *
     * @param {number} [webTestDefinition.frequency] Interval in seconds between
     * test runs for this WebTest. Default value is 300.
     *
     * @param {number} [webTestDefinition.timeout] Seconds until this WebTest will
     * timeout and fail. Default value is 30.
     *
     * @param {string} webTestDefinition.webTestKind The kind of web test this is,
     * valid choices are ping and multistep. Possible values include: 'ping',
     * 'multistep'
     *
     * @param {boolean} [webTestDefinition.retryEnabled] Allow for retries should
     * this WebTest fail.
     *
     * @param {array} webTestDefinition.locations A list of where to physically run
     * the tests from to give global coverage for accessibility of your
     * application.
     *
     * @param {object} [webTestDefinition.configuration] An XML configuration
     * specification for a WebTest.
     *
     * @param {string} [webTestDefinition.configuration.webTest] The XML
     * specification of a WebTest to run against an application.
     *
     * @param {string} webTestDefinition.location Resource location
     *
     * @param {object} [webTestDefinition.tags] Resource tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebTest>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, webTestName: string, webTestDefinition: models.WebTest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebTest>>;

    /**
     * Creates or updates an Application Insights web test definition.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} webTestName The name of the Application Insights webtest
     * resource.
     *
     * @param {object} webTestDefinition Properties that need to be specified to
     * create or update an Application Insights web test definition.
     *
     * @param {string} [webTestDefinition.kind] The kind of web test that this web
     * test watches. Choices are ping and multistep. Possible values include:
     * 'ping', 'multistep'
     *
     * @param {string} webTestDefinition.syntheticMonitorId Unique ID of this
     * WebTest. This is typically the same value as the Name field.
     *
     * @param {string} webTestDefinition.webTestName User defined name if this
     * WebTest.
     *
     * @param {string} [webTestDefinition.description] Purpose/user defined
     * descriptive test for this WebTest.
     *
     * @param {boolean} [webTestDefinition.enabled] Is the test actively being
     * monitored.
     *
     * @param {number} [webTestDefinition.frequency] Interval in seconds between
     * test runs for this WebTest. Default value is 300.
     *
     * @param {number} [webTestDefinition.timeout] Seconds until this WebTest will
     * timeout and fail. Default value is 30.
     *
     * @param {string} webTestDefinition.webTestKind The kind of web test this is,
     * valid choices are ping and multistep. Possible values include: 'ping',
     * 'multistep'
     *
     * @param {boolean} [webTestDefinition.retryEnabled] Allow for retries should
     * this WebTest fail.
     *
     * @param {array} webTestDefinition.locations A list of where to physically run
     * the tests from to give global coverage for accessibility of your
     * application.
     *
     * @param {object} [webTestDefinition.configuration] An XML configuration
     * specification for a WebTest.
     *
     * @param {string} [webTestDefinition.configuration.webTest] The XML
     * specification of a WebTest to run against an application.
     *
     * @param {string} webTestDefinition.location Resource location
     *
     * @param {object} [webTestDefinition.tags] Resource tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebTest} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebTest} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebTest} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, webTestName: string, webTestDefinition: models.WebTest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebTest>;
    createOrUpdate(resourceGroupName: string, webTestName: string, webTestDefinition: models.WebTest, callback: ServiceCallback<models.WebTest>): void;
    createOrUpdate(resourceGroupName: string, webTestName: string, webTestDefinition: models.WebTest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebTest>): void;


    /**
     * Creates or updates an Application Insights web test definition.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} webTestName The name of the Application Insights webtest
     * resource.
     *
     * @param {object} webTestTags Updated tag information to set into the web test
     * instance.
     *
     * @param {object} [webTestTags.tags] Resource tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebTest>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateTagsWithHttpOperationResponse(resourceGroupName: string, webTestName: string, webTestTags: models.TagsResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebTest>>;

    /**
     * Creates or updates an Application Insights web test definition.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} webTestName The name of the Application Insights webtest
     * resource.
     *
     * @param {object} webTestTags Updated tag information to set into the web test
     * instance.
     *
     * @param {object} [webTestTags.tags] Resource tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebTest} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebTest} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebTest} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    updateTags(resourceGroupName: string, webTestName: string, webTestTags: models.TagsResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebTest>;
    updateTags(resourceGroupName: string, webTestName: string, webTestTags: models.TagsResource, callback: ServiceCallback<models.WebTest>): void;
    updateTags(resourceGroupName: string, webTestName: string, webTestTags: models.TagsResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebTest>): void;


    /**
     * Deletes an Application Insights web test.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} webTestName The name of the Application Insights webtest
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, webTestName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an Application Insights web test.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} webTestName The name of the Application Insights webtest
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, webTestName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, webTestName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, webTestName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Get all Application Insights web test alerts definitioned within a
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebTestListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebTestListResult>>;

    /**
     * Get all Application Insights web test alerts definitioned within a
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebTestListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebTestListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebTestListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebTestListResult>;
    list(callback: ServiceCallback<models.WebTestListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebTestListResult>): void;


    /**
     * Get all Application Insights web tests defined within a specified resource
     * group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebTestListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebTestListResult>>;

    /**
     * Get all Application Insights web tests defined within a specified resource
     * group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebTestListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebTestListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebTestListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebTestListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.WebTestListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebTestListResult>): void;


    /**
     * Get all Application Insights web test alerts definitioned within a
     * subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebTestListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebTestListResult>>;

    /**
     * Get all Application Insights web test alerts definitioned within a
     * subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebTestListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebTestListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebTestListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebTestListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.WebTestListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebTestListResult>): void;
}

/**
 * @class
 * ExportConfigurations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ApplicationInsightsManagementClient.
 */
export interface ExportConfigurations {


    /**
     * Gets a list of Continuous Export configuration of an Application Insights
     * component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Array>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentExportConfiguration[]>>;

    /**
     * Gets a list of Continuous Export configuration of an Application Insights
     * component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Array} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Array} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentExportConfiguration[]>;
    list(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration[]>): void;
    list(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration[]>): void;


    /**
     * Create a Continuous Export configuration of an Application Insights
     * component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} exportProperties Properties that need to be specified to
     * create a Continuous Export configuration of a Application Insights
     * component.
     *
     * @param {string} [exportProperties.recordTypes] The document types to be
     * exported, as comma separated values. Allowed values include 'Requests',
     * 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
     * 'PerformanceCounters', 'Availability', 'Messages'.
     *
     * @param {string} [exportProperties.destinationType] The Continuous Export
     * destination type. This has to be 'Blob'.
     *
     * @param {string} [exportProperties.destinationAddress] The SAS URL for the
     * destination storage container. It must grant write permission.
     *
     * @param {string} [exportProperties.isEnabled] Set to 'true' to create a
     * Continuous Export configuration as enabled, otherwise set it to 'false'.
     *
     * @param {string} [exportProperties.notificationQueueEnabled] Deprecated
     *
     * @param {string} [exportProperties.notificationQueueUri] Deprecated
     *
     * @param {string} [exportProperties.destinationStorageSubscriptionId] The
     * subscription ID of the destination storage container.
     *
     * @param {string} [exportProperties.destinationStorageLocationId] The location
     * ID of the destination storage container.
     *
     * @param {string} [exportProperties.destinationAccountId] The name of
     * destination storage account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Array>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, resourceName: string, exportProperties: models.ApplicationInsightsComponentExportRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentExportConfiguration[]>>;

    /**
     * Create a Continuous Export configuration of an Application Insights
     * component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} exportProperties Properties that need to be specified to
     * create a Continuous Export configuration of a Application Insights
     * component.
     *
     * @param {string} [exportProperties.recordTypes] The document types to be
     * exported, as comma separated values. Allowed values include 'Requests',
     * 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
     * 'PerformanceCounters', 'Availability', 'Messages'.
     *
     * @param {string} [exportProperties.destinationType] The Continuous Export
     * destination type. This has to be 'Blob'.
     *
     * @param {string} [exportProperties.destinationAddress] The SAS URL for the
     * destination storage container. It must grant write permission.
     *
     * @param {string} [exportProperties.isEnabled] Set to 'true' to create a
     * Continuous Export configuration as enabled, otherwise set it to 'false'.
     *
     * @param {string} [exportProperties.notificationQueueEnabled] Deprecated
     *
     * @param {string} [exportProperties.notificationQueueUri] Deprecated
     *
     * @param {string} [exportProperties.destinationStorageSubscriptionId] The
     * subscription ID of the destination storage container.
     *
     * @param {string} [exportProperties.destinationStorageLocationId] The location
     * ID of the destination storage container.
     *
     * @param {string} [exportProperties.destinationAccountId] The name of
     * destination storage account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Array} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Array} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, resourceName: string, exportProperties: models.ApplicationInsightsComponentExportRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentExportConfiguration[]>;
    create(resourceGroupName: string, resourceName: string, exportProperties: models.ApplicationInsightsComponentExportRequest, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration[]>): void;
    create(resourceGroupName: string, resourceName: string, exportProperties: models.ApplicationInsightsComponentExportRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration[]>): void;


    /**
     * Delete a Continuous Export configuration of an Application Insights
     * component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} exportId The Continuous Export configuration ID. This is
     * unique within a Application Insights component.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentExportConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, exportId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentExportConfiguration>>;

    /**
     * Delete a Continuous Export configuration of an Application Insights
     * component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} exportId The Continuous Export configuration ID. This is
     * unique within a Application Insights component.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentExportConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentExportConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link
     *                      ApplicationInsightsComponentExportConfiguration} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, resourceName: string, exportId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentExportConfiguration>;
    deleteMethod(resourceGroupName: string, resourceName: string, exportId: string, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration>): void;
    deleteMethod(resourceGroupName: string, resourceName: string, exportId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration>): void;


    /**
     * Get the Continuous Export configuration for this export id.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} exportId The Continuous Export configuration ID. This is
     * unique within a Application Insights component.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentExportConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, exportId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentExportConfiguration>>;

    /**
     * Get the Continuous Export configuration for this export id.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} exportId The Continuous Export configuration ID. This is
     * unique within a Application Insights component.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentExportConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentExportConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link
     *                      ApplicationInsightsComponentExportConfiguration} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, exportId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentExportConfiguration>;
    get(resourceGroupName: string, resourceName: string, exportId: string, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration>): void;
    get(resourceGroupName: string, resourceName: string, exportId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration>): void;


    /**
     * Update the Continuous Export configuration for this export id.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} exportId The Continuous Export configuration ID. This is
     * unique within a Application Insights component.
     *
     * @param {object} exportProperties Properties that need to be specified to
     * update the Continuous Export configuration.
     *
     * @param {string} [exportProperties.recordTypes] The document types to be
     * exported, as comma separated values. Allowed values include 'Requests',
     * 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
     * 'PerformanceCounters', 'Availability', 'Messages'.
     *
     * @param {string} [exportProperties.destinationType] The Continuous Export
     * destination type. This has to be 'Blob'.
     *
     * @param {string} [exportProperties.destinationAddress] The SAS URL for the
     * destination storage container. It must grant write permission.
     *
     * @param {string} [exportProperties.isEnabled] Set to 'true' to create a
     * Continuous Export configuration as enabled, otherwise set it to 'false'.
     *
     * @param {string} [exportProperties.notificationQueueEnabled] Deprecated
     *
     * @param {string} [exportProperties.notificationQueueUri] Deprecated
     *
     * @param {string} [exportProperties.destinationStorageSubscriptionId] The
     * subscription ID of the destination storage container.
     *
     * @param {string} [exportProperties.destinationStorageLocationId] The location
     * ID of the destination storage container.
     *
     * @param {string} [exportProperties.destinationAccountId] The name of
     * destination storage account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentExportConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, exportId: string, exportProperties: models.ApplicationInsightsComponentExportRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentExportConfiguration>>;

    /**
     * Update the Continuous Export configuration for this export id.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} exportId The Continuous Export configuration ID. This is
     * unique within a Application Insights component.
     *
     * @param {object} exportProperties Properties that need to be specified to
     * update the Continuous Export configuration.
     *
     * @param {string} [exportProperties.recordTypes] The document types to be
     * exported, as comma separated values. Allowed values include 'Requests',
     * 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
     * 'PerformanceCounters', 'Availability', 'Messages'.
     *
     * @param {string} [exportProperties.destinationType] The Continuous Export
     * destination type. This has to be 'Blob'.
     *
     * @param {string} [exportProperties.destinationAddress] The SAS URL for the
     * destination storage container. It must grant write permission.
     *
     * @param {string} [exportProperties.isEnabled] Set to 'true' to create a
     * Continuous Export configuration as enabled, otherwise set it to 'false'.
     *
     * @param {string} [exportProperties.notificationQueueEnabled] Deprecated
     *
     * @param {string} [exportProperties.notificationQueueUri] Deprecated
     *
     * @param {string} [exportProperties.destinationStorageSubscriptionId] The
     * subscription ID of the destination storage container.
     *
     * @param {string} [exportProperties.destinationStorageLocationId] The location
     * ID of the destination storage container.
     *
     * @param {string} [exportProperties.destinationAccountId] The name of
     * destination storage account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentExportConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentExportConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link
     *                      ApplicationInsightsComponentExportConfiguration} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, resourceName: string, exportId: string, exportProperties: models.ApplicationInsightsComponentExportRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentExportConfiguration>;
    update(resourceGroupName: string, resourceName: string, exportId: string, exportProperties: models.ApplicationInsightsComponentExportRequest, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration>): void;
    update(resourceGroupName: string, resourceName: string, exportId: string, exportProperties: models.ApplicationInsightsComponentExportRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentExportConfiguration>): void;
}

/**
 * @class
 * ComponentCurrentBillingFeatures
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ApplicationInsightsManagementClient.
 */
export interface ComponentCurrentBillingFeatures {


    /**
     * Returns current billing features for an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentBillingFeatures>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentBillingFeatures>>;

    /**
     * Returns current billing features for an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentBillingFeatures} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentBillingFeatures} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentBillingFeatures}
     *                      for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentBillingFeatures>;
    get(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.ApplicationInsightsComponentBillingFeatures>): void;
    get(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentBillingFeatures>): void;


    /**
     * Update current billing features for an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} billingFeaturesProperties Properties that need to be
     * specified to update billing features for an Application Insights component.
     *
     * @param {object} [billingFeaturesProperties.dataVolumeCap] An Application
     * Insights component daily data volumne cap
     *
     * @param {number} [billingFeaturesProperties.dataVolumeCap.cap] Daily data
     * volume cap in GB.
     *
     * @param {number} [billingFeaturesProperties.dataVolumeCap.warningThreshold]
     * Reserved, not used for now.
     *
     * @param {boolean}
     * [billingFeaturesProperties.dataVolumeCap.stopSendNotificationWhenHitThreshold]
     * Reserved, not used for now.
     *
     * @param {boolean}
     * [billingFeaturesProperties.dataVolumeCap.stopSendNotificationWhenHitCap] Do
     * not send a notification email when the daily data volume cap is met.
     *
     * @param {array} [billingFeaturesProperties.currentBillingFeatures] Current
     * enabled pricing plan. When the component is in the Enterprise plan, this
     * will list both 'Basic' and 'Application Insights Enterprise'.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentBillingFeatures>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, billingFeaturesProperties: models.ApplicationInsightsComponentBillingFeatures, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentBillingFeatures>>;

    /**
     * Update current billing features for an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} billingFeaturesProperties Properties that need to be
     * specified to update billing features for an Application Insights component.
     *
     * @param {object} [billingFeaturesProperties.dataVolumeCap] An Application
     * Insights component daily data volumne cap
     *
     * @param {number} [billingFeaturesProperties.dataVolumeCap.cap] Daily data
     * volume cap in GB.
     *
     * @param {number} [billingFeaturesProperties.dataVolumeCap.warningThreshold]
     * Reserved, not used for now.
     *
     * @param {boolean}
     * [billingFeaturesProperties.dataVolumeCap.stopSendNotificationWhenHitThreshold]
     * Reserved, not used for now.
     *
     * @param {boolean}
     * [billingFeaturesProperties.dataVolumeCap.stopSendNotificationWhenHitCap] Do
     * not send a notification email when the daily data volume cap is met.
     *
     * @param {array} [billingFeaturesProperties.currentBillingFeatures] Current
     * enabled pricing plan. When the component is in the Enterprise plan, this
     * will list both 'Basic' and 'Application Insights Enterprise'.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentBillingFeatures} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentBillingFeatures} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentBillingFeatures}
     *                      for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, resourceName: string, billingFeaturesProperties: models.ApplicationInsightsComponentBillingFeatures, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentBillingFeatures>;
    update(resourceGroupName: string, resourceName: string, billingFeaturesProperties: models.ApplicationInsightsComponentBillingFeatures, callback: ServiceCallback<models.ApplicationInsightsComponentBillingFeatures>): void;
    update(resourceGroupName: string, resourceName: string, billingFeaturesProperties: models.ApplicationInsightsComponentBillingFeatures, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentBillingFeatures>): void;
}

/**
 * @class
 * ComponentQuotaStatus
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ApplicationInsightsManagementClient.
 */
export interface ComponentQuotaStatus {


    /**
     * Returns daily data volume cap (quota) status for an Application Insights
     * component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentQuotaStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentQuotaStatus>>;

    /**
     * Returns daily data volume cap (quota) status for an Application Insights
     * component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentQuotaStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentQuotaStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentQuotaStatus} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentQuotaStatus>;
    get(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.ApplicationInsightsComponentQuotaStatus>): void;
    get(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentQuotaStatus>): void;
}

/**
 * @class
 * APIKeys
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ApplicationInsightsManagementClient.
 */
export interface APIKeys {


    /**
     * Gets a list of API keys of an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentAPIKeyListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentAPIKeyListResult>>;

    /**
     * Gets a list of API keys of an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentAPIKeyListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentAPIKeyListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link
     *                      ApplicationInsightsComponentAPIKeyListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentAPIKeyListResult>;
    list(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.ApplicationInsightsComponentAPIKeyListResult>): void;
    list(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentAPIKeyListResult>): void;


    /**
     * Create an API Key of an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} aPIKeyProperties Properties that need to be specified to
     * create an API key of a Application Insights component.
     *
     * @param {string} [aPIKeyProperties.name] The name of the API Key.
     *
     * @param {array} [aPIKeyProperties.linkedReadProperties] The read access
     * rights of this API Key.
     *
     * @param {array} [aPIKeyProperties.linkedWriteProperties] The write access
     * rights of this API Key.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentAPIKey>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, resourceName: string, aPIKeyProperties: models.APIKeyRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentAPIKey>>;

    /**
     * Create an API Key of an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {object} aPIKeyProperties Properties that need to be specified to
     * create an API key of a Application Insights component.
     *
     * @param {string} [aPIKeyProperties.name] The name of the API Key.
     *
     * @param {array} [aPIKeyProperties.linkedReadProperties] The read access
     * rights of this API Key.
     *
     * @param {array} [aPIKeyProperties.linkedWriteProperties] The write access
     * rights of this API Key.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentAPIKey} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentAPIKey} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentAPIKey} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, resourceName: string, aPIKeyProperties: models.APIKeyRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentAPIKey>;
    create(resourceGroupName: string, resourceName: string, aPIKeyProperties: models.APIKeyRequest, callback: ServiceCallback<models.ApplicationInsightsComponentAPIKey>): void;
    create(resourceGroupName: string, resourceName: string, aPIKeyProperties: models.APIKeyRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentAPIKey>): void;


    /**
     * Delete an API Key of an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} keyId The API Key ID. This is unique within a Application
     * Insights component.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentAPIKey>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, keyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentAPIKey>>;

    /**
     * Delete an API Key of an Application Insights component.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} keyId The API Key ID. This is unique within a Application
     * Insights component.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentAPIKey} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentAPIKey} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentAPIKey} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, resourceName: string, keyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentAPIKey>;
    deleteMethod(resourceGroupName: string, resourceName: string, keyId: string, callback: ServiceCallback<models.ApplicationInsightsComponentAPIKey>): void;
    deleteMethod(resourceGroupName: string, resourceName: string, keyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentAPIKey>): void;


    /**
     * Get the API Key for this key id.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} keyId The API Key ID. This is unique within a Application
     * Insights component.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationInsightsComponentAPIKey>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, keyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationInsightsComponentAPIKey>>;

    /**
     * Get the API Key for this key id.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} resourceName The name of the Application Insights component
     * resource.
     *
     * @param {string} keyId The API Key ID. This is unique within a Application
     * Insights component.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationInsightsComponentAPIKey} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationInsightsComponentAPIKey} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationInsightsComponentAPIKey} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, keyId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationInsightsComponentAPIKey>;
    get(resourceGroupName: string, resourceName: string, keyId: string, callback: ServiceCallback<models.ApplicationInsightsComponentAPIKey>): void;
    get(resourceGroupName: string, resourceName: string, keyId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationInsightsComponentAPIKey>): void;
}
