/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the USqlDatabase class.
 * @constructor
 * A Data Lake Analytics catalog U-SQL database item.
 * @member {string} [databaseName] Gets or sets the name of the database.
 * 
 */
function USqlDatabase(parameters) {
  USqlDatabase['super_'].call(this, parameters);
  if (parameters !== null && parameters !== undefined) {
    if (parameters.databaseName !== undefined) {
      this.databaseName = parameters.databaseName;
    }
  }    
}

util.inherits(USqlDatabase, models['CatalogItem']);

/**
 * Validate the payload against the USqlDatabase schema
 *
 * @param {JSON} payload
 *
 */
USqlDatabase.prototype.serialize = function () {
  var payload = USqlDatabase['super_'].prototype.serialize.call(this);
  if (this['databaseName'] !== null && this['databaseName'] !== undefined) {
    if (typeof this['databaseName'].valueOf() !== 'string') {
      throw new Error('this[\'databaseName\'] must be of type string.');
    }
    payload['databaseName'] = this['databaseName'];
  }

  return payload;
};

/**
 * Deserialize the instance to USqlDatabase schema
 *
 * @param {JSON} instance
 *
 */
USqlDatabase.prototype.deserialize = function (instance) {
  USqlDatabase['super_'].prototype.deserialize.call(this, instance);
  if (instance) {
    if (instance['databaseName'] !== undefined) {
      this['databaseName'] = instance['databaseName'];
    }
  }

  return this;
};

module.exports = USqlDatabase;
