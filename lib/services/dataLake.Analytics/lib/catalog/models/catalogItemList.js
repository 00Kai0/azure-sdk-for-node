/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the CatalogItemList class.
 * @constructor
 * A Data Lake Analytics catalog item list.
 * @member {number} [count] Gets or sets the count of items in the list.
 * 
 * @member {string} [nextLink] Gets or sets the link to the next page of
 * results.
 * 
 */
function CatalogItemList(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.count !== undefined) {
      this.count = parameters.count;
    }
    if (parameters.nextLink !== undefined) {
      this.nextLink = parameters.nextLink;
    }
  }    
}


/**
 * Validate the payload against the CatalogItemList schema
 *
 * @param {JSON} payload
 *
 */
CatalogItemList.prototype.serialize = function () {
  var payload = {};
  if (this['count'] !== null && this['count'] !== undefined) {
    if (typeof this['count'] !== 'number') {
      throw new Error('this[\'count\'] must be of type number.');
    }
    payload['count'] = this['count'];
  }

  if (this['nextLink'] !== null && this['nextLink'] !== undefined) {
    if (typeof this['nextLink'].valueOf() !== 'string') {
      throw new Error('this[\'nextLink\'] must be of type string.');
    }
    payload['nextLink'] = this['nextLink'];
  }

  return payload;
};

/**
 * Deserialize the instance to CatalogItemList schema
 *
 * @param {JSON} instance
 *
 */
CatalogItemList.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['count'] !== undefined) {
      this['count'] = instance['count'];
    }

    if (instance['nextLink'] !== undefined) {
      this['nextLink'] = instance['nextLink'];
    }
  }

  return this;
};

module.exports = CatalogItemList;
