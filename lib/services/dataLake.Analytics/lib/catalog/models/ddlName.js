/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the DdlName class.
 * @constructor
 * A Data Lake Analytics DDL name item.
 * @member {string} [firstPart] Gets or sets the name of the table associated
 * with this database and schema.
 * 
 * @member {string} [secondPart] Gets or sets the name of the table associated
 * with this database and schema.
 * 
 * @member {string} [thirdPart] Gets or sets the name of the table associated
 * with this database and schema.
 * 
 * @member {string} [server] Gets or sets the name of the table associated
 * with this database and schema.
 * 
 */
function DdlName(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.firstPart !== undefined) {
      this.firstPart = parameters.firstPart;
    }
    if (parameters.secondPart !== undefined) {
      this.secondPart = parameters.secondPart;
    }
    if (parameters.thirdPart !== undefined) {
      this.thirdPart = parameters.thirdPart;
    }
    if (parameters.server !== undefined) {
      this.server = parameters.server;
    }
  }    
}


/**
 * Validate the payload against the DdlName schema
 *
 * @param {JSON} payload
 *
 */
DdlName.prototype.serialize = function () {
  var payload = {};
  if (this['firstPart'] !== null && this['firstPart'] !== undefined) {
    if (typeof this['firstPart'].valueOf() !== 'string') {
      throw new Error('this[\'firstPart\'] must be of type string.');
    }
    payload['firstPart'] = this['firstPart'];
  }

  if (this['secondPart'] !== null && this['secondPart'] !== undefined) {
    if (typeof this['secondPart'].valueOf() !== 'string') {
      throw new Error('this[\'secondPart\'] must be of type string.');
    }
    payload['secondPart'] = this['secondPart'];
  }

  if (this['thirdPart'] !== null && this['thirdPart'] !== undefined) {
    if (typeof this['thirdPart'].valueOf() !== 'string') {
      throw new Error('this[\'thirdPart\'] must be of type string.');
    }
    payload['thirdPart'] = this['thirdPart'];
  }

  if (this['server'] !== null && this['server'] !== undefined) {
    if (typeof this['server'].valueOf() !== 'string') {
      throw new Error('this[\'server\'] must be of type string.');
    }
    payload['server'] = this['server'];
  }

  return payload;
};

/**
 * Deserialize the instance to DdlName schema
 *
 * @param {JSON} instance
 *
 */
DdlName.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['firstPart'] !== undefined) {
      this['firstPart'] = instance['firstPart'];
    }

    if (instance['secondPart'] !== undefined) {
      this['secondPart'] = instance['secondPart'];
    }

    if (instance['thirdPart'] !== undefined) {
      this['thirdPart'] = instance['thirdPart'];
    }

    if (instance['server'] !== undefined) {
      this['server'] = instance['server'];
    }
  }

  return this;
};

module.exports = DdlName;
