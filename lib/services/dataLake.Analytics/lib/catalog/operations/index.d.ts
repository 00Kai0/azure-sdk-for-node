/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Catalog
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the DataLakeAnalyticsCatalogManagementClient.
 */
export interface Catalog {

    /**
     * Creates the specified secret for use with external data sources in the
     * specified database
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to create the secret
     * in.
     * 
     * @param {string} secretName The parameters required to create the secret
     * (name and password)
     * 
     * @param {object} parameters The parameters required to create the secret
     * (name and password)
     * 
     * @param {string} [parameters.password] Gets or sets the password for the
     * secret to pass in
     * 
     * @param {string} [parameters.uri] Gets or sets the URI identifier for the
     * secret in the format <hostname>:<port>
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createSecret(accountname: string, databaseName: string, secretName: string, parameters: models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlSecret>): void;
    createSecret(accountname: string, databaseName: string, secretName: string, parameters: models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters, callback: ServiceCallback<models.USqlSecret>): void;

    /**
     * Modifies the specified secret for use with external data sources in the
     * specified database
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to modify the secret
     * in.
     * 
     * @param {string} secretName The parameters required to modify the secret
     * (name and password)
     * 
     * @param {object} parameters The parameters required to modify the secret
     * (name and password)
     * 
     * @param {string} [parameters.password] Gets or sets the password for the
     * secret to pass in
     * 
     * @param {string} [parameters.uri] Gets or sets the URI identifier for the
     * secret in the format <hostname>:<port>
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    updateSecret(accountname: string, databaseName: string, secretName: string, parameters: models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlSecret>): void;
    updateSecret(accountname: string, databaseName: string, secretName: string, parameters: models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters, callback: ServiceCallback<models.USqlSecret>): void;

    /**
     * Gets the specified secret in the specified database
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to get the secret
     * from.
     * 
     * @param {string} secretName The name of the secret to get
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSecret(accountname: string, databaseName: string, secretName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlSecret>): void;
    getSecret(accountname: string, databaseName: string, secretName: string, callback: ServiceCallback<models.USqlSecret>): void;

    /**
     * Deletes the specified secret in the specified database
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to delete the secret
     * from.
     * 
     * @param {string} secretName The name of the secret to delete
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteSecret(accountname: string, databaseName: string, secretName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteSecret(accountname: string, databaseName: string, secretName: string, callback: ServiceCallback<void>): void;

    /**
     * Retrieves the specified external data source from the current Data Lake
     * Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the external
     * Data Source in.
     * 
     * @param {string} externalDataSourceName The name of the external Data Source
     * to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getExternalDataSource(accountname: string, databaseName: string, externalDataSourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlExternalDataSource>): void;
    getExternalDataSource(accountname: string, databaseName: string, externalDataSourceName: string, callback: ServiceCallback<models.USqlExternalDataSource>): void;

    /**
     * Retrieves the list of external data sources from the current Data Lake
     * Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the external
     * Data Source in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listExternalDataSources(accountname: string, databaseName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlExternalDataSourceList>): void;
    listExternalDataSources(accountname: string, databaseName: string, callback: ServiceCallback<models.USqlExternalDataSourceList>): void;

    /**
     * Retrieves the specified credential from the current Data Lake Analytics
     * catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the schema in.
     * 
     * @param {string} credentialName The name of the credential to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getCredential(accountname: string, databaseName: string, credentialName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlCredential>): void;
    getCredential(accountname: string, databaseName: string, credentialName: string, callback: ServiceCallback<models.USqlCredential>): void;

    /**
     * Retrieves the list of credentials from the current Data Lake Analytics
     * catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the schema in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listCredentials(accountname: string, databaseName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlCredentialList>): void;
    listCredentials(accountname: string, databaseName: string, callback: ServiceCallback<models.USqlCredentialList>): void;

    /**
     * Retrieves the specified procedure from the current Data Lake Analytics
     * catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the procedure
     * in.
     * 
     * @param {string} schemaName The name of the schema to find the procedure in.
     * 
     * @param {string} procedureName The name of the procedure to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getProcedure(accountname: string, databaseName: string, schemaName: string, procedureName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlProcedure>): void;
    getProcedure(accountname: string, databaseName: string, schemaName: string, procedureName: string, callback: ServiceCallback<models.USqlProcedure>): void;

    /**
     * Retrieves the list of procedures from the current Data Lake Analytics
     * catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the
     * procedures in.
     * 
     * @param {string} schemaName The name of the schema to find the procedures in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listProcedures(accountname: string, databaseName: string, schemaName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlProcedureList>): void;
    listProcedures(accountname: string, databaseName: string, schemaName: string, callback: ServiceCallback<models.USqlProcedureList>): void;

    /**
     * Retrieves the specified table from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the table in.
     * 
     * @param {string} schemaName The name of the schema to find the table in.
     * 
     * @param {string} tableName The name of the table to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getTable(accountname: string, databaseName: string, schemaName: string, tableName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTable>): void;
    getTable(accountname: string, databaseName: string, schemaName: string, tableName: string, callback: ServiceCallback<models.USqlTable>): void;

    /**
     * Retrieves the list of tables from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the tables in.
     * 
     * @param {string} schemaName The name of the schema to find the tables in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listTables(accountname: string, databaseName: string, schemaName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTableList>): void;
    listTables(accountname: string, databaseName: string, schemaName: string, callback: ServiceCallback<models.USqlTableList>): void;

    /**
     * Retrieves the specified view from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the view in.
     * 
     * @param {string} schemaName The name of the schema to find the view in.
     * 
     * @param {string} viewName The name of the view to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getView(accountname: string, databaseName: string, schemaName: string, viewName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlView>): void;
    getView(accountname: string, databaseName: string, schemaName: string, viewName: string, callback: ServiceCallback<models.USqlView>): void;

    /**
     * Retrieves the list of views from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the views in.
     * 
     * @param {string} schemaName The name of the schema to find the views in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listViews(accountname: string, databaseName: string, schemaName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlViewList>): void;
    listViews(accountname: string, databaseName: string, schemaName: string, callback: ServiceCallback<models.USqlViewList>): void;

    /**
     * Retrieves the specified table from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the
     * statistics in.
     * 
     * @param {string} schemaName The name of the schema to find the statistics in.
     * 
     * @param {string} tableName The name of the table to find the statistics in.
     * 
     * @param {string} statisticsName The name of the table statistics to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getTableStatistic(accountname: string, databaseName: string, schemaName: string, tableName: string, statisticsName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTableStatistics>): void;
    getTableStatistic(accountname: string, databaseName: string, schemaName: string, tableName: string, statisticsName: string, callback: ServiceCallback<models.USqlTableStatistics>): void;

    /**
     * Retrieves the list of tables from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the
     * statistics in.
     * 
     * @param {string} schemaName The name of the schema to find the statistics in.
     * 
     * @param {string} tableName The name of the table to find the statistics in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listTableStatistics(accountname: string, databaseName: string, schemaName: string, tableName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTableStatisticsList>): void;
    listTableStatistics(accountname: string, databaseName: string, schemaName: string, tableName: string, callback: ServiceCallback<models.USqlTableStatisticsList>): void;

    /**
     * Retrieves the list of catalog types within the specified database and
     * schema for the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the types in.
     * 
     * @param {string} schemaName The name of the schema to find the types in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listTypes(accountname: string, databaseName: string, schemaName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTypeList>): void;
    listTypes(accountname: string, databaseName: string, schemaName: string, callback: ServiceCallback<models.USqlTypeList>): void;

    /**
     * Retrieves the specified table valued function from the current Data Lake
     * Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the table
     * valued function in.
     * 
     * @param {string} schemaName The name of the schema to find the table valued
     * function in.
     * 
     * @param {string} tableValuedFunctionName The name of the tableValuedFunction
     * to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getTableValuedFunction(accountname: string, databaseName: string, schemaName: string, tableValuedFunctionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTableValuedFunction>): void;
    getTableValuedFunction(accountname: string, databaseName: string, schemaName: string, tableValuedFunctionName: string, callback: ServiceCallback<models.USqlTableValuedFunction>): void;

    /**
     * Retrieves the list of table valued functions from the current Data Lake
     * Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the table
     * valued functions in.
     * 
     * @param {string} schemaName The name of the schema to find the table valued
     * functions in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listTableValuedFunctions(accountname: string, databaseName: string, schemaName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTableValuedFunctionList>): void;
    listTableValuedFunctions(accountname: string, databaseName: string, schemaName: string, callback: ServiceCallback<models.USqlTableValuedFunctionList>): void;

    /**
     * Retrieves the specified assembly from the current Data Lake Analytics
     * catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the assembly
     * in.
     * 
     * @param {string} assemblyName The name of the assembly to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getAssembly(accountname: string, databaseName: string, assemblyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlAssembly>): void;
    getAssembly(accountname: string, databaseName: string, assemblyName: string, callback: ServiceCallback<models.USqlAssembly>): void;

    /**
     * Retrieves the list of assemblies from the current Data Lake Analytics
     * catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the assembly
     * in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listAssemblies(accountname: string, databaseName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlAssemblyList>): void;
    listAssemblies(accountname: string, databaseName: string, callback: ServiceCallback<models.USqlAssemblyList>): void;

    /**
     * Retrieves the specified schema from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the schema in.
     * 
     * @param {string} schemaName The name of the schema to find.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSchema(accountname: string, databaseName: string, schemaName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlSchema>): void;
    getSchema(accountname: string, databaseName: string, schemaName: string, callback: ServiceCallback<models.USqlSchema>): void;

    /**
     * Retrieves the list of schemas from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The name of the database to find the schema in.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listSchemas(accountname: string, databaseName: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlSchemaList>): void;
    listSchemas(accountname: string, databaseName: string, callback: ServiceCallback<models.USqlSchemaList>): void;

    /**
     * Retrieves the specified database from the current Data Lake Analytics
     * catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {string} databaseName The path to the file to create.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDatabase(accountname: string, databaseName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlDatabase>): void;
    getDatabase(accountname: string, databaseName: string, callback: ServiceCallback<models.USqlDatabase>): void;

    /**
     * Retrieves the list of databases from the current Data Lake Analytics catalog
     *
     * @param {string} accountname The name of the account to use
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] Gets or sets OData filter. Optional.
     * 
     * @param {number} [options.top] Gets or sets the number of items to return.
     * Optional.
     * 
     * @param {number} [options.skip] Gets or sets the number of items to skip
     * over before returning elements. Optional.
     * 
     * @param {string} [options.expand] Gets or sets OData expansion. Expand
     * related resources in line with the retrieved resources, e.g.
     * Categories/$expand=Products would expand Product data in line with each
     * Category entry. Optional.
     * 
     * @param {string} [options.select] Gets or sets OData Select statement.
     * Limits the properties on each entry to just those requested, e.g.
     * Categories?$select=CategoryName,Description. Optional.
     * 
     * @param {string} [options.orderby] Gets or sets the OrderBy clause. One or
     * more comma-separated expressions with an optional "asc" (the default) or
     * "desc" depending on the order youâ€™d like the values sorted, e.g.
     * Categories?$orderby=CategoryName desc. Optional.
     * 
     * @param {boolean} [options.count] Gets or sets a Boolean value of true or
     * false to request a count of the matching resources included with the
     * resources in the response, e.g. Categories?$count=true. Optional.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listDatabases(accountname: string, options: { filter? : string, top? : number, skip? : number, expand? : string, select? : string, orderby? : string, count? : boolean, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlDatabaseList>): void;
    listDatabases(accountname: string, callback: ServiceCallback<models.USqlDatabaseList>): void;

    /**
     * Retrieves the list of external data sources from the current Data Lake
     * Analytics catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listExternalDataSourcesNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlExternalDataSourceList>): void;
    listExternalDataSourcesNext(nextPageLink: string, callback: ServiceCallback<models.USqlExternalDataSourceList>): void;

    /**
     * Retrieves the list of credentials from the current Data Lake Analytics
     * catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listCredentialsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlCredentialList>): void;
    listCredentialsNext(nextPageLink: string, callback: ServiceCallback<models.USqlCredentialList>): void;

    /**
     * Retrieves the list of procedures from the current Data Lake Analytics
     * catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listProceduresNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlProcedureList>): void;
    listProceduresNext(nextPageLink: string, callback: ServiceCallback<models.USqlProcedureList>): void;

    /**
     * Retrieves the list of tables from the current Data Lake Analytics catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listTablesNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTableList>): void;
    listTablesNext(nextPageLink: string, callback: ServiceCallback<models.USqlTableList>): void;

    /**
     * Retrieves the list of views from the current Data Lake Analytics catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listViewsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlViewList>): void;
    listViewsNext(nextPageLink: string, callback: ServiceCallback<models.USqlViewList>): void;

    /**
     * Retrieves the list of tables from the current Data Lake Analytics catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listTableStatisticsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTableStatisticsList>): void;
    listTableStatisticsNext(nextPageLink: string, callback: ServiceCallback<models.USqlTableStatisticsList>): void;

    /**
     * Retrieves the list of catalog types within the specified database and
     * schema for the current Data Lake Analytics catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listTypesNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTypeList>): void;
    listTypesNext(nextPageLink: string, callback: ServiceCallback<models.USqlTypeList>): void;

    /**
     * Retrieves the list of table valued functions from the current Data Lake
     * Analytics catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listTableValuedFunctionsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlTableValuedFunctionList>): void;
    listTableValuedFunctionsNext(nextPageLink: string, callback: ServiceCallback<models.USqlTableValuedFunctionList>): void;

    /**
     * Retrieves the list of assemblies from the current Data Lake Analytics
     * catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listAssembliesNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlAssemblyList>): void;
    listAssembliesNext(nextPageLink: string, callback: ServiceCallback<models.USqlAssemblyList>): void;

    /**
     * Retrieves the list of schemas from the current Data Lake Analytics catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listSchemasNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlSchemaList>): void;
    listSchemasNext(nextPageLink: string, callback: ServiceCallback<models.USqlSchemaList>): void;

    /**
     * Retrieves the list of databases from the current Data Lake Analytics catalog
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listDatabasesNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.USqlDatabaseList>): void;
    listDatabasesNext(nextPageLink: string, callback: ServiceCallback<models.USqlDatabaseList>): void;
}
