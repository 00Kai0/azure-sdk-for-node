/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the JobStateAuditRecord class.
 * @constructor
 * The Data Lake Analytics U-SQL job state audit records for tracking the
 * lifecycle of a job.
 * @member {string} [newState] Gets or sets the new state the job is in.
 * 
 * @member {date} [timeStamp] Gets or sets the time stamp that the state
 * change took place.
 * 
 * @member {string} [requestedByUser] Gets or sets the user who requests the
 * change.
 * 
 * @member {string} [details] Gets or sets  the details of the audit log.
 * 
 */
function JobStateAuditRecord(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.newState !== undefined) {
      this.newState = parameters.newState;
    }
    if (parameters.timeStamp !== undefined) {
      this.timeStamp = parameters.timeStamp;
    }
    if (parameters.requestedByUser !== undefined) {
      this.requestedByUser = parameters.requestedByUser;
    }
    if (parameters.details !== undefined) {
      this.details = parameters.details;
    }
  }    
}


/**
 * Validate the payload against the JobStateAuditRecord schema
 *
 * @param {JSON} payload
 *
 */
JobStateAuditRecord.prototype.serialize = function () {
  var payload = {};
  if (this['newState'] !== null && this['newState'] !== undefined) {
    if (typeof this['newState'].valueOf() !== 'string') {
      throw new Error('this[\'newState\'] must be of type string.');
    }
    payload['newState'] = this['newState'];
  }

  if (this['timeStamp']) {
    if (!(this['timeStamp'] instanceof Date || typeof this['timeStamp'].valueOf() === 'string' && !isNaN(Date.parse(this['timeStamp'])))) {
      throw new Error('this[\'timeStamp\'] must be of type date.');
    }
    payload['timeStamp'] = (this['timeStamp'] instanceof Date) ? this['timeStamp'].toISOString() : this['timeStamp'];
  }

  if (this['requestedByUser'] !== null && this['requestedByUser'] !== undefined) {
    if (typeof this['requestedByUser'].valueOf() !== 'string') {
      throw new Error('this[\'requestedByUser\'] must be of type string.');
    }
    payload['requestedByUser'] = this['requestedByUser'];
  }

  if (this['details'] !== null && this['details'] !== undefined) {
    if (typeof this['details'].valueOf() !== 'string') {
      throw new Error('this[\'details\'] must be of type string.');
    }
    payload['details'] = this['details'];
  }

  return payload;
};

/**
 * Deserialize the instance to JobStateAuditRecord schema
 *
 * @param {JSON} instance
 *
 */
JobStateAuditRecord.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['newState'] !== undefined) {
      this['newState'] = instance['newState'];
    }

    if (instance['timeStamp']) {
      this['timeStamp'] = new Date(instance['timeStamp']);
    }
    else if (instance['timeStamp'] !== undefined) {
      this['timeStamp'] = instance['timeStamp'];
    }

    if (instance['requestedByUser'] !== undefined) {
      this['requestedByUser'] = instance['requestedByUser'];
    }

    if (instance['details'] !== undefined) {
      this['details'] = instance['details'];
    }
  }

  return this;
};

module.exports = JobStateAuditRecord;
