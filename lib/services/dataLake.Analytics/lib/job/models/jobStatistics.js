/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the JobStatistics class.
 * @constructor
 * The Data Lake Analytics U-SQL job execution statistics.
 * @member {date} [lastUpdateTimeUtc] Gets or sets the last update time for
 * the statistics.
 * 
 * @member {array} [stages] Gets or sets the list of stages for the job.
 * 
 */
function JobStatistics(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.lastUpdateTimeUtc !== undefined) {
      this.lastUpdateTimeUtc = parameters.lastUpdateTimeUtc;
    }
    if (parameters.stages) {
      var tempParametersstages = [];
      parameters.stages.forEach(function(element) {
        if (element) {
          element = new models['JobStatisticsVertexStage'](element);
        }
        tempParametersstages.push(element);
      });
      this.stages = tempParametersstages;
    }
  }    
}


/**
 * Validate the payload against the JobStatistics schema
 *
 * @param {JSON} payload
 *
 */
JobStatistics.prototype.serialize = function () {
  var payload = {};
  if (this['lastUpdateTimeUtc']) {
    if (!(this['lastUpdateTimeUtc'] instanceof Date || typeof this['lastUpdateTimeUtc'].valueOf() === 'string' && !isNaN(Date.parse(this['lastUpdateTimeUtc'])))) {
      throw new Error('this[\'lastUpdateTimeUtc\'] must be of type date.');
    }
    payload['lastUpdateTimeUtc'] = (this['lastUpdateTimeUtc'] instanceof Date) ? this['lastUpdateTimeUtc'].toISOString() : this['lastUpdateTimeUtc'];
  }

  if (util.isArray(this['stages'])) {
    payload['stages'] = [];
    for (var i = 0; i < this['stages'].length; i++) {
      if (this['stages'][i]) {
        if (payload['stages'] === null || payload['stages'] === undefined) {
          payload['stages'] = {};
        }
        payload['stages'][i] = this['stages'][i].serialize();
      }
    }
  }

  return payload;
};

/**
 * Deserialize the instance to JobStatistics schema
 *
 * @param {JSON} instance
 *
 */
JobStatistics.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['lastUpdateTimeUtc']) {
      this['lastUpdateTimeUtc'] = new Date(instance['lastUpdateTimeUtc']);
    }
    else if (instance['lastUpdateTimeUtc'] !== undefined) {
      this['lastUpdateTimeUtc'] = instance['lastUpdateTimeUtc'];
    }

    if (instance['stages']) {
      var tempInstancestages = [];
      instance['stages'].forEach(function(element1) {
        if (element1) {
          element1 = new models['JobStatisticsVertexStage']().deserialize(element1);
        }
        tempInstancestages.push(element1);
      });
      this['stages'] = tempInstancestages;
    }
  }

  return this;
};

module.exports = JobStatistics;
