/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the Subscription class.
 * @constructor
 * Subscription information.
 *
 * @member {string} [id] The ID of the resource
 * (/subscriptions/SubscriptionId).
 * 
 * @member {string} [subscriptionId] The subscription Id.
 * 
 * @member {string} [tenantId] The tenant Id.
 * 
 * @member {string} [displayName] The subscription display name.
 * 
 * @member {string} [state] The subscription state.
 * 
 * @member {object} [subscriptionPolicies] The subscription policies.
 * 
 * @member {string} [subscriptionPolicies.locationPlacementId] The
 * subscription location placement Id.
 * 
 * @member {string} [subscriptionPolicies.quotaId] The subscription quota Id.
 * 
 * @member {string} [subscriptionPolicies.spendingLimit] The subscription
 * spending limit. Possible values include: 'On', 'Off', 'CurrentPeriodOff'
 * 
 * @member {string} [authorizationSource] The authorization source of the
 * request. Valid values are one or more combinations of Legacy, RoleBased,
 * Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.
 * 
 */
function Subscription() {
}

/**
 * Defines the metadata of Subscription
 *
 * @returns {object} metadata of Subscription
 *
 */
Subscription.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Subscription',
    type: {
      name: 'Composite',
      className: 'Subscription',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        subscriptionId: {
          required: false,
          serializedName: 'subscriptionId',
          type: {
            name: 'String'
          }
        },
        tenantId: {
          required: false,
          serializedName: 'tenantId',
          type: {
            name: 'String'
          }
        },
        displayName: {
          required: false,
          serializedName: 'displayName',
          type: {
            name: 'String'
          }
        },
        state: {
          required: false,
          serializedName: 'state',
          type: {
            name: 'String'
          }
        },
        subscriptionPolicies: {
          required: false,
          serializedName: 'subscriptionPolicies',
          type: {
            name: 'Composite',
            className: 'SubscriptionPolicies'
          }
        },
        authorizationSource: {
          required: false,
          serializedName: 'authorizationSource',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = Subscription;
