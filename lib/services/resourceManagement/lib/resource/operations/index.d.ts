/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Deployments
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface Deployments {

    /**
     * Begin deleting deployment.To determine whether the operation has finished
     * processing the request, call GetLongRunningOperationStatus.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment to be deleted.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, deploymentName: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, deploymentName: string, callback: ServiceCallback<void>): void;

    /**
     * Begin deleting deployment.To determine whether the operation has finished
     * processing the request, call GetLongRunningOperationStatus.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment to be deleted.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDelete(resourceGroupName: string, deploymentName: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    beginDelete(resourceGroupName: string, deploymentName: string, callback: ServiceCallback<void>): void;

    /**
     * Checks whether deployment exists.
     *
     * @param {string} resourceGroupName The name of the resource group to check.
     * The name is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    checkExistence(resourceGroupName: string, deploymentName: string, options: RequestOptions, callback: ServiceCallback<boolean>): void;
    checkExistence(resourceGroupName: string, deploymentName: string, callback: ServiceCallback<boolean>): void;

    /**
     * Create a named template deployment using a template.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment.
     * 
     * @param {object} parameters Additional parameters supplied to the operation.
     * 
     * @param {object} [parameters.properties] Gets or sets the deployment
     * properties.
     * 
     * @param {object} [parameters.properties.template] Gets or sets the template
     * content. Use only one of Template or TemplateLink.
     * 
     * @param {object} [parameters.properties.templateLink] Gets or sets the URI
     * referencing the template. Use only one of Template or TemplateLink.
     * 
     * @param {string} [parameters.properties.templateLink.uri] URI referencing
     * the template.
     * 
     * @param {string} [parameters.properties.templateLink.contentVersion] If
     * included it must match the ContentVersion in the template.
     * 
     * @param {object} [parameters.properties.parameters] Deployment parameters.
     * Use only one of Parameters or ParametersLink.
     * 
     * @param {object} [parameters.properties.parametersLink] Gets or sets the URI
     * referencing the parameters. Use only one of Parameters or ParametersLink.
     * 
     * @param {string} [parameters.properties.parametersLink.uri] URI referencing
     * the template.
     * 
     * @param {string} [parameters.properties.parametersLink.contentVersion] If
     * included it must match the ContentVersion in the template.
     * 
     * @param {string} [parameters.properties.mode] Gets or sets the deployment
     * mode. Possible values for this property include: 'Incremental', 'Complete'.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdate(resourceGroupName: string, deploymentName: string, parameters: models.Deployment, options: RequestOptions, callback: ServiceCallback<models.DeploymentExtended>): void;
    createOrUpdate(resourceGroupName: string, deploymentName: string, parameters: models.Deployment, callback: ServiceCallback<models.DeploymentExtended>): void;

    /**
     * Create a named template deployment using a template.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment.
     * 
     * @param {object} parameters Additional parameters supplied to the operation.
     * 
     * @param {object} [parameters.properties] Gets or sets the deployment
     * properties.
     * 
     * @param {object} [parameters.properties.template] Gets or sets the template
     * content. Use only one of Template or TemplateLink.
     * 
     * @param {object} [parameters.properties.templateLink] Gets or sets the URI
     * referencing the template. Use only one of Template or TemplateLink.
     * 
     * @param {string} [parameters.properties.templateLink.uri] URI referencing
     * the template.
     * 
     * @param {string} [parameters.properties.templateLink.contentVersion] If
     * included it must match the ContentVersion in the template.
     * 
     * @param {object} [parameters.properties.parameters] Deployment parameters.
     * Use only one of Parameters or ParametersLink.
     * 
     * @param {object} [parameters.properties.parametersLink] Gets or sets the URI
     * referencing the parameters. Use only one of Parameters or ParametersLink.
     * 
     * @param {string} [parameters.properties.parametersLink.uri] URI referencing
     * the template.
     * 
     * @param {string} [parameters.properties.parametersLink.contentVersion] If
     * included it must match the ContentVersion in the template.
     * 
     * @param {string} [parameters.properties.mode] Gets or sets the deployment
     * mode. Possible values for this property include: 'Incremental', 'Complete'.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreateOrUpdate(resourceGroupName: string, deploymentName: string, parameters: models.Deployment, options: RequestOptions, callback: ServiceCallback<models.DeploymentExtended>): void;
    beginCreateOrUpdate(resourceGroupName: string, deploymentName: string, parameters: models.Deployment, callback: ServiceCallback<models.DeploymentExtended>): void;

    /**
     * Get a deployment.
     *
     * @param {string} resourceGroupName The name of the resource group to get.
     * The name is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, deploymentName: string, options: RequestOptions, callback: ServiceCallback<models.DeploymentExtended>): void;
    get(resourceGroupName: string, deploymentName: string, callback: ServiceCallback<models.DeploymentExtended>): void;

    /**
     * Cancel a currently running template deployment.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    cancel(resourceGroupName: string, deploymentName: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    cancel(resourceGroupName: string, deploymentName: string, callback: ServiceCallback<void>): void;

    /**
     * Validate a deployment template.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment.
     * 
     * @param {object} parameters Deployment to validate.
     * 
     * @param {object} [parameters.properties] Gets or sets the deployment
     * properties.
     * 
     * @param {object} [parameters.properties.template] Gets or sets the template
     * content. Use only one of Template or TemplateLink.
     * 
     * @param {object} [parameters.properties.templateLink] Gets or sets the URI
     * referencing the template. Use only one of Template or TemplateLink.
     * 
     * @param {string} [parameters.properties.templateLink.uri] URI referencing
     * the template.
     * 
     * @param {string} [parameters.properties.templateLink.contentVersion] If
     * included it must match the ContentVersion in the template.
     * 
     * @param {object} [parameters.properties.parameters] Deployment parameters.
     * Use only one of Parameters or ParametersLink.
     * 
     * @param {object} [parameters.properties.parametersLink] Gets or sets the URI
     * referencing the parameters. Use only one of Parameters or ParametersLink.
     * 
     * @param {string} [parameters.properties.parametersLink.uri] URI referencing
     * the template.
     * 
     * @param {string} [parameters.properties.parametersLink.contentVersion] If
     * included it must match the ContentVersion in the template.
     * 
     * @param {string} [parameters.properties.mode] Gets or sets the deployment
     * mode. Possible values for this property include: 'Incremental', 'Complete'.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    validate(resourceGroupName: string, deploymentName: string, parameters: models.Deployment, options: RequestOptions, callback: ServiceCallback<models.DeploymentValidateResult>): void;
    validate(resourceGroupName: string, deploymentName: string, parameters: models.Deployment, callback: ServiceCallback<models.DeploymentValidateResult>): void;

    /**
     * Get a list of deployments.
     *
     * @param {string} resourceGroupName The name of the resource group to filter
     * by. The name is case insensitive.
     * 
     * @param {object} [filter] The filter to apply on the operation.
     * 
     * @param {string} [filter.provisioningState] Gets or sets the provisioning
     * state.
     * 
     * @param {number} [top] Query parameters. If null is passed returns all
     * deployments.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(resourceGroupName: string, filter: models.DeploymentExtendedFilter, top: number, options: RequestOptions, callback: ServiceCallback<models.DeploymentListResult>): void;
    list(resourceGroupName: string, filter: models.DeploymentExtendedFilter, top: number, callback: ServiceCallback<models.DeploymentListResult>): void;

    /**
     * Get a list of deployments.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.DeploymentListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.DeploymentListResult>): void;
}

/**
 * @class
 * Providers
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface Providers {

    /**
     * Unregisters provider from a subscription.
     *
     * @param {string} resourceProviderNamespace Namespace of the resource
     * provider.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    unregister(resourceProviderNamespace: string, options: RequestOptions, callback: ServiceCallback<models.Provider>): void;
    unregister(resourceProviderNamespace: string, callback: ServiceCallback<models.Provider>): void;

    /**
     * Registers provider to be used with a subscription.
     *
     * @param {string} resourceProviderNamespace Namespace of the resource
     * provider.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    register(resourceProviderNamespace: string, options: RequestOptions, callback: ServiceCallback<models.Provider>): void;
    register(resourceProviderNamespace: string, callback: ServiceCallback<models.Provider>): void;

    /**
     * Gets a list of resource providers.
     *
     * @param {number} [top] Query parameters. If null is passed returns all
     * deployments.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(top: number, options: RequestOptions, callback: ServiceCallback<models.ProviderListResult>): void;
    list(top: number, callback: ServiceCallback<models.ProviderListResult>): void;

    /**
     * Gets a resource provider.
     *
     * @param {string} resourceProviderNamespace Namespace of the resource
     * provider.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceProviderNamespace: string, options: RequestOptions, callback: ServiceCallback<models.Provider>): void;
    get(resourceProviderNamespace: string, callback: ServiceCallback<models.Provider>): void;

    /**
     * Gets a list of resource providers.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ProviderListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProviderListResult>): void;
}

/**
 * @class
 * ResourceGroups
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface ResourceGroups {

    /**
     * Get all of the resources under a subscription.
     *
     * @param {string} resourceGroupName Query parameters. If null is passed
     * returns all resource groups.
     * 
     * @param {object} [filter] The filter to apply on the operation.
     * 
     * @param {string} [filter.resourceType] Gets or sets the resource type.
     * 
     * @param {string} [filter.tagname] Gets or sets the tag name.
     * 
     * @param {string} [filter.tagvalue] Gets or sets the tag value.
     * 
     * @param {number} [top] Query parameters. If null is passed returns all
     * resource groups.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listResources(resourceGroupName: string, filter: models.GenericResourceFilter, top: number, options: RequestOptions, callback: ServiceCallback<models.ResourceListResult>): void;
    listResources(resourceGroupName: string, filter: models.GenericResourceFilter, top: number, callback: ServiceCallback<models.ResourceListResult>): void;

    /**
     * Checks whether resource group exists.
     *
     * @param {string} resourceGroupName The name of the resource group to check.
     * The name is case insensitive.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    checkExistence(resourceGroupName: string, options: RequestOptions, callback: ServiceCallback<boolean>): void;
    checkExistence(resourceGroupName: string, callback: ServiceCallback<boolean>): void;

    /**
     * Create a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group to be
     * created or updated.
     * 
     * @param {object} parameters Parameters supplied to the create or update
     * resource group service operation.
     * 
     * @param {string} [parameters.name] Gets or sets the Name of the resource
     * group.
     * 
     * @param {object} [parameters.properties]
     * 
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource group. It cannot be changed after the resource group has been
     * created. Has to be one of the supported Azure Locations, such as West US,
     * East US, West Europe, East Asia, etc.
     * 
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource group.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdate(resourceGroupName: string, parameters: models.ResourceGroup, options: RequestOptions, callback: ServiceCallback<models.ResourceGroup>): void;
    createOrUpdate(resourceGroupName: string, parameters: models.ResourceGroup, callback: ServiceCallback<models.ResourceGroup>): void;

    /**
     * Begin deleting resource group.To determine whether the operation has
     * finished processing the request, call GetLongRunningOperationStatus.
     *
     * @param {string} resourceGroupName The name of the resource group to be
     * deleted. The name is case insensitive.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, callback: ServiceCallback<void>): void;

    /**
     * Begin deleting resource group.To determine whether the operation has
     * finished processing the request, call GetLongRunningOperationStatus.
     *
     * @param {string} resourceGroupName The name of the resource group to be
     * deleted. The name is case insensitive.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDelete(resourceGroupName: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    beginDelete(resourceGroupName: string, callback: ServiceCallback<void>): void;

    /**
     * Get a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group to get.
     * The name is case insensitive.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, options: RequestOptions, callback: ServiceCallback<models.ResourceGroup>): void;
    get(resourceGroupName: string, callback: ServiceCallback<models.ResourceGroup>): void;

    /**
     * Resource groups can be updated through a simple PATCH operation to a group
     * address. The format of the request is the same as that for creating a
     * resource groups, though if a field is unspecified current value will be
     * carried over.
     *
     * @param {string} resourceGroupName The name of the resource group to be
     * created or updated. The name is case insensitive.
     * 
     * @param {object} parameters Parameters supplied to the update state resource
     * group service operation.
     * 
     * @param {string} [parameters.name] Gets or sets the Name of the resource
     * group.
     * 
     * @param {object} [parameters.properties]
     * 
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource group. It cannot be changed after the resource group has been
     * created. Has to be one of the supported Azure Locations, such as West US,
     * East US, West Europe, East Asia, etc.
     * 
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource group.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    patch(resourceGroupName: string, parameters: models.ResourceGroup, options: RequestOptions, callback: ServiceCallback<models.ResourceGroup>): void;
    patch(resourceGroupName: string, parameters: models.ResourceGroup, callback: ServiceCallback<models.ResourceGroup>): void;

    /**
     * Gets a collection of resource groups.
     *
     * @param {object} [filter] The filter to apply on the operation.
     * 
     * @param {string} [filter.tagName] Gets or sets the tag name.
     * 
     * @param {string} [filter.tagValue] Gets or sets the tag value.
     * 
     * @param {number} [top] Query parameters. If null is passed returns all
     * resource groups.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(filter: models.ResourceGroupFilter, top: number, options: RequestOptions, callback: ServiceCallback<models.ResourceGroupListResult>): void;
    list(filter: models.ResourceGroupFilter, top: number, callback: ServiceCallback<models.ResourceGroupListResult>): void;

    /**
     * Get all of the resources under a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listResourcesNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ResourceListResult>): void;
    listResourcesNext(nextPageLink: string, callback: ServiceCallback<models.ResourceListResult>): void;

    /**
     * Gets a collection of resource groups.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ResourceGroupListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ResourceGroupListResult>): void;
}

/**
 * @class
 * Resources
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface Resources {

    /**
     * Begin moving resources.To determine whether the operation has finished
     * processing the request, call GetLongRunningOperationStatus.
     *
     * @param {string} sourceResourceGroupName Source resource group name.
     * 
     * @param {object} parameters move resources' parameters.
     * 
     * @param {array} [parameters.resources] Gets or sets the ids of the resources.
     * 
     * @param {string} [parameters.targetResourceGroup] The target resource group.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    moveResources(sourceResourceGroupName: string, parameters: models.ResourcesMoveInfo, options: RequestOptions, callback: ServiceCallback<void>): void;
    moveResources(sourceResourceGroupName: string, parameters: models.ResourcesMoveInfo, callback: ServiceCallback<void>): void;

    /**
     * Begin moving resources.To determine whether the operation has finished
     * processing the request, call GetLongRunningOperationStatus.
     *
     * @param {string} sourceResourceGroupName Source resource group name.
     * 
     * @param {object} parameters move resources' parameters.
     * 
     * @param {array} [parameters.resources] Gets or sets the ids of the resources.
     * 
     * @param {string} [parameters.targetResourceGroup] The target resource group.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginMoveResources(sourceResourceGroupName: string, parameters: models.ResourcesMoveInfo, options: RequestOptions, callback: ServiceCallback<void>): void;
    beginMoveResources(sourceResourceGroupName: string, parameters: models.ResourcesMoveInfo, callback: ServiceCallback<void>): void;

    /**
     * Get all of the resources under a subscription.
     *
     * @param {object} [filter] The filter to apply on the operation.
     * 
     * @param {string} [filter.resourceType] Gets or sets the resource type.
     * 
     * @param {string} [filter.tagname] Gets or sets the tag name.
     * 
     * @param {string} [filter.tagvalue] Gets or sets the tag value.
     * 
     * @param {number} [top] Query parameters. If null is passed returns all
     * resource groups.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(filter: models.GenericResourceFilter, top: number, options: RequestOptions, callback: ServiceCallback<models.ResourceListResult>): void;
    list(filter: models.GenericResourceFilter, top: number, callback: ServiceCallback<models.ResourceListResult>): void;

    /**
     * Checks whether resource exists.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} resourceProviderNamespace Resource identity.
     * 
     * @param {string} parentResourcePath Resource identity.
     * 
     * @param {string} resourceType Resource identity.
     * 
     * @param {string} resourceName Resource identity.
     * 
     * @param {string} apiVersion
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    checkExistence(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options: RequestOptions, callback: ServiceCallback<boolean>): void;
    checkExistence(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, callback: ServiceCallback<boolean>): void;

    /**
     * Delete resource and all of its resources.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} resourceProviderNamespace Resource identity.
     * 
     * @param {string} parentResourcePath Resource identity.
     * 
     * @param {string} resourceType Resource identity.
     * 
     * @param {string} resourceName Resource identity.
     * 
     * @param {string} apiVersion
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, callback: ServiceCallback<void>): void;

    /**
     * Create a resource.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} resourceProviderNamespace Resource identity.
     * 
     * @param {string} parentResourcePath Resource identity.
     * 
     * @param {string} resourceType Resource identity.
     * 
     * @param {string} resourceName Resource identity.
     * 
     * @param {string} apiVersion
     * 
     * @param {object} parameters Create or update resource parameters.
     * 
     * @param {object} [parameters.plan] Gets or sets the plan of the resource.
     * 
     * @param {string} [parameters.plan.name] Gets or sets the plan ID.
     * 
     * @param {string} [parameters.plan.publisher] Gets or sets the publisher ID.
     * 
     * @param {string} [parameters.plan.product] Gets or sets the offer ID.
     * 
     * @param {string} [parameters.plan.promotionCode] Gets or sets the promotion
     * code.
     * 
     * @param {object} [parameters.properties] Gets or sets the resource
     * properties.
     * 
     * @param {string} [parameters.location] Resource location
     * 
     * @param {object} [parameters.tags] Resource tags
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdate(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, parameters: models.GenericResource, options: RequestOptions, callback: ServiceCallback<models.GenericResource>): void;
    createOrUpdate(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, parameters: models.GenericResource, callback: ServiceCallback<models.GenericResource>): void;

    /**
     * Returns a resource belonging to a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} resourceProviderNamespace Resource identity.
     * 
     * @param {string} parentResourcePath Resource identity.
     * 
     * @param {string} resourceType Resource identity.
     * 
     * @param {string} resourceName Resource identity.
     * 
     * @param {string} apiVersion
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options: RequestOptions, callback: ServiceCallback<models.GenericResource>): void;
    get(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, callback: ServiceCallback<models.GenericResource>): void;

    /**
     * Get all of the resources under a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ResourceListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ResourceListResult>): void;
}

/**
 * @class
 * Tags
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface Tags {

    /**
     * Delete a subscription resource tag value.
     *
     * @param {string} tagName The name of the tag.
     * 
     * @param {string} tagValue The value of the tag.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteValue(tagName: string, tagValue: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    deleteValue(tagName: string, tagValue: string, callback: ServiceCallback<void>): void;

    /**
     * Create a subscription resource tag value.
     *
     * @param {string} tagName The name of the tag.
     * 
     * @param {string} tagValue The value of the tag.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdateValue(tagName: string, tagValue: string, options: RequestOptions, callback: ServiceCallback<models.TagValue>): void;
    createOrUpdateValue(tagName: string, tagValue: string, callback: ServiceCallback<models.TagValue>): void;

    /**
     * Create a subscription resource tag.
     *
     * @param {string} tagName The name of the tag.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdate(tagName: string, options: RequestOptions, callback: ServiceCallback<models.TagDetails>): void;
    createOrUpdate(tagName: string, callback: ServiceCallback<models.TagDetails>): void;

    /**
     * Delete a subscription resource tag.
     *
     * @param {string} tagName The name of the tag.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(tagName: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    deleteMethod(tagName: string, callback: ServiceCallback<void>): void;

    /**
     * Get a list of subscription resource tags.
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: RequestOptions, callback: ServiceCallback<models.TagsListResult>): void;
    list(callback: ServiceCallback<models.TagsListResult>): void;

    /**
     * Get a list of subscription resource tags.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.TagsListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.TagsListResult>): void;
}

/**
 * @class
 * DeploymentOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface DeploymentOperations {

    /**
     * Get a list of deployments operations.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment.
     * 
     * @param {string} operationId Operation Id.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, deploymentName: string, operationId: string, options: RequestOptions, callback: ServiceCallback<models.DeploymentOperation>): void;
    get(resourceGroupName: string, deploymentName: string, operationId: string, callback: ServiceCallback<models.DeploymentOperation>): void;

    /**
     * Gets a list of deployments operations.
     *
     * @param {string} resourceGroupName The name of the resource group. The name
     * is case insensitive.
     * 
     * @param {string} deploymentName The name of the deployment.
     * 
     * @param {number} [top] Query parameters.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(resourceGroupName: string, deploymentName: string, top: number, options: RequestOptions, callback: ServiceCallback<models.DeploymentOperationsListResult>): void;
    list(resourceGroupName: string, deploymentName: string, top: number, callback: ServiceCallback<models.DeploymentOperationsListResult>): void;

    /**
     * Gets a list of deployments operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.DeploymentOperationsListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.DeploymentOperationsListResult>): void;
}

/**
 * @class
 * ResourceProviderOperationDetails
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface ResourceProviderOperationDetails {

    /**
     * Gets a list of resource providers.
     *
     * @param {string} resourceProviderNamespace Resource identity.
     * 
     * @param {string} apiVersion
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(resourceProviderNamespace: string, apiVersion: string, options: RequestOptions, callback: ServiceCallback<models.ResourceProviderOperationDetailListResult>): void;
    list(resourceProviderNamespace: string, apiVersion: string, callback: ServiceCallback<models.ResourceProviderOperationDetailListResult>): void;

    /**
     * Gets a list of resource providers.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ResourceProviderOperationDetailListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ResourceProviderOperationDetailListResult>): void;
}

/**
 * @class
 * PolicyDefinitions
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface PolicyDefinitions {

    /**
     * Create or update policy definition.
     *
     * @param {string} policyDefinitionName The policy definition name.
     * 
     * @param {object} parameters The policy definition properties
     * 
     * @param {string} [parameters.name] Gets or sets the policy definition name.
     * 
     * @param {string} [parameters.description] Gets or sets the policy definition
     * description.
     * 
     * @param {string} [parameters.displayName] Gets or sets the policy definition
     * display name.
     * 
     * @param {object} [parameters.policyRule] The policy rule json.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdate(policyDefinitionName: string, parameters: models.PolicyDefinition, options: RequestOptions, callback: ServiceCallback<models.PolicyDefinition>): void;
    createOrUpdate(policyDefinitionName: string, parameters: models.PolicyDefinition, callback: ServiceCallback<models.PolicyDefinition>): void;

    /**
     * Gets policy definition.
     *
     * @param {string} policyDefinitionName The policy definition name.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(policyDefinitionName: string, options: RequestOptions, callback: ServiceCallback<models.PolicyDefinition>): void;
    get(policyDefinitionName: string, callback: ServiceCallback<models.PolicyDefinition>): void;

    /**
     * Deletes policy definition.
     *
     * @param {string} policyDefinitionName The policy definition name.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(policyDefinitionName: string, options: RequestOptions, callback: ServiceCallback<void>): void;
    deleteMethod(policyDefinitionName: string, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * PolicyAssignments
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ResourceManagementClient.
 */
export interface PolicyAssignments {

    /**
     * Gets policy assignments of the resource.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} resourceProviderNamespace The name of the resource provider.
     * 
     * @param {string} parentResourcePath The parent resource path.
     * 
     * @param {string} resourceType The resource type.
     * 
     * @param {string} resourceName The resource name.
     * 
     * @param {string} [filter] The filter to apply on the operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, filter: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
    listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, filter: string, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;

    /**
     * Gets policy assignments of the resource group.
     *
     * @param {string} resourceGroupName Resource group name.
     * 
     * @param {string} [filter] The filter to apply on the operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listForResourceGroup(resourceGroupName: string, filter: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
    listForResourceGroup(resourceGroupName: string, filter: string, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;

    /**
     * Delete policy assignment.
     *
     * @param {string} scope Scope.
     * 
     * @param {string} policyAssignmentName Policy assignment name.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(scope: string, policyAssignmentName: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignment>): void;
    deleteMethod(scope: string, policyAssignmentName: string, callback: ServiceCallback<models.PolicyAssignment>): void;

    /**
     * Create policy assignment.
     *
     * @param {string} scope Scope.
     * 
     * @param {string} policyAssignmentName Policy assignment name.
     * 
     * @param {object} parameters Policy assignment.
     * 
     * @param {object} [parameters.properties] Gets or sets policy assignment
     * properties.
     * 
     * @param {string} [parameters.properties.scope] Gets or sets the policy
     * assignment scope.
     * 
     * @param {string} [parameters.properties.displayName] Gets or sets the policy
     * assignment display name.
     * 
     * @param {string} [parameters.properties.policyDefinitionId] Gets or sets the
     * policy definition Id.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(scope: string, policyAssignmentName: string, parameters: models.PolicyAssignmentCreateParameters, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignment>): void;
    create(scope: string, policyAssignmentName: string, parameters: models.PolicyAssignmentCreateParameters, callback: ServiceCallback<models.PolicyAssignment>): void;

    /**
     * Get single policy assignment.
     *
     * @param {string} scope Scope.
     * 
     * @param {string} policyAssignmentName Policy assignment name.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(scope: string, policyAssignmentName: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignment>): void;
    get(scope: string, policyAssignmentName: string, callback: ServiceCallback<models.PolicyAssignment>): void;

    /**
     * Delete policy assignment.
     *
     * @param {string} policyAssignmentId Policy assignment Id
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteById(policyAssignmentId: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignment>): void;
    deleteById(policyAssignmentId: string, callback: ServiceCallback<models.PolicyAssignment>): void;

    /**
     * Create policy assignment by Id.
     *
     * @param {string} policyAssignmentId Policy assignment Id
     * 
     * @param {object} parameters Policy assignment.
     * 
     * @param {object} [parameters.properties] Gets or sets policy assignment
     * properties.
     * 
     * @param {string} [parameters.properties.scope] Gets or sets the policy
     * assignment scope.
     * 
     * @param {string} [parameters.properties.displayName] Gets or sets the policy
     * assignment display name.
     * 
     * @param {string} [parameters.properties.policyDefinitionId] Gets or sets the
     * policy definition Id.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createById(policyAssignmentId: string, parameters: models.PolicyAssignmentCreateParameters, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignment>): void;
    createById(policyAssignmentId: string, parameters: models.PolicyAssignmentCreateParameters, callback: ServiceCallback<models.PolicyAssignment>): void;

    /**
     * Get single policy assignment.
     *
     * @param {string} policyAssignmentId Policy assignment Id
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getById(policyAssignmentId: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignment>): void;
    getById(policyAssignmentId: string, callback: ServiceCallback<models.PolicyAssignment>): void;

    /**
     * Gets policy assignments of the subscription.
     *
     * @param {string} [filter] The filter to apply on the operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(filter: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
    list(filter: string, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;

    /**
     * Gets policy assignments of the scope.
     *
     * @param {string} scope Scope.
     * 
     * @param {string} [filter] The filter to apply on the operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listForScope(scope: string, filter: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
    listForScope(scope: string, filter: string, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;

    /**
     * Gets policy assignments of the resource.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listForResourceNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
    listForResourceNext(nextPageLink: string, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;

    /**
     * Gets policy assignments of the resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listForResourceGroupNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
    listForResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;

    /**
     * Gets policy assignments of the subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;

    /**
     * Gets policy assignments of the scope.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listForScopeNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
    listForScopeNext(nextPageLink: string, callback: ServiceCallback<models.PolicyAssignmentListResult>): void;
}
