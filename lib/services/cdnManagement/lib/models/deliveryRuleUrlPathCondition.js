/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Defines the UrlPath condition for the delivery rule.
 *
 * @extends models['DeliveryRuleCondition']
 */
class DeliveryRuleUrlPathCondition extends models['DeliveryRuleCondition'] {
  /**
   * Create a DeliveryRuleUrlPathCondition.
   * @property {object} parameters Defines the parameters for the condition.
   * @property {string} [parameters.operator] Describes operator to be matched.
   * Possible values include: 'Any', 'Equal', 'Contains', 'BeginsWith',
   * 'EndsWith', 'LessThan', 'LessThanOrEqual', 'GreaterThan',
   * 'GreaterThanOrEqual', 'Wildcard'
   * @property {boolean} [parameters.negateCondition] Describes if this is
   * negate condition or not
   * @property {array} [parameters.matchValues] The match value for the
   * condition of the delivery rule
   * @property {array} [parameters.transforms] List of transforms
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DeliveryRuleUrlPathCondition
   *
   * @returns {object} metadata of DeliveryRuleUrlPathCondition
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UrlPath',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'name',
          clientName: 'name'
        },
        uberParent: 'DeliveryRuleCondition',
        className: 'DeliveryRuleUrlPathCondition',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          parameters: {
            required: true,
            serializedName: 'parameters',
            defaultValue: {},
            type: {
              name: 'Composite',
              className: 'UrlPathMatchConditionParameters'
            }
          }
        }
      }
    };
  }
}

module.exports = DeliveryRuleUrlPathCondition;
